{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component.ts","./src/app/admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component.html","./src/app/admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component.ts","./src/app/admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component.html","./src/app/admin/admin-dashboard/clinic-list/clinic-list.component.ts","./src/app/admin/admin-dashboard/clinic-list/clinic-list.component.html","./src/app/admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component.ts","./src/app/admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component.html","./src/app/admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component.ts","./src/app/admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component.html","./src/app/admin/admin-dashboard/doctors-list/doctors-list.component.ts","./src/app/admin/admin-dashboard/doctors-list/doctors-list.component.html","./src/app/admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component.ts","./src/app/admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component.html","./src/app/admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component.ts","./src/app/admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component.html","./src/app/admin/admin-dashboard/hospital-list/hospital-list.component.ts","./src/app/admin/admin-dashboard/hospital-list/hospital-list.component.html","./src/app/admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component.ts","./src/app/admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component.html","./src/app/admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component.ts","./src/app/admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component.html","./src/app/admin/admin-dashboard/laboratory-list/laboratory-list.component.ts","./src/app/admin/admin-dashboard/laboratory-list/laboratory-list.component.html","./src/app/admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component.ts","./src/app/admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component.html","./src/app/admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component.ts","./src/app/admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component.html","./src/app/admin/admin-dashboard/medical-store-list/medical-store-list.component.ts","./src/app/admin/admin-dashboard/medical-store-list/medical-store-list.component.html","./src/app/admin/admin-dashboard/users-list/add-new-user/add-new-user.component.ts","./src/app/admin/admin-dashboard/users-list/add-new-user/add-new-user.component.html","./src/app/admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component.ts","./src/app/admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component.html","./src/app/admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component.ts","./src/app/admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component.html","./src/app/admin/admin-dashboard/users-list/user-details/user-details.component.ts","./src/app/admin/admin-dashboard/users-list/user-details/user-details.component.html","./src/app/admin/admin-dashboard/users-list/users-list.component.ts","./src/app/admin/admin-dashboard/users-list/users-list.component.html","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/admin/admin-login/auth-guard-admin.service.ts","./src/app/admin/admin-login/authentication-admin.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/authentication.service.ts","./src/app/clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component.ts","./src/app/clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component.html","./src/app/clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component.ts","./src/app/clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component.html","./src/app/clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component.ts","./src/app/clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component.html","./src/app/clinic/clinic-dashboard/clinic-dashboard.component.ts","./src/app/clinic/clinic-dashboard/clinic-dashboard.component.html","./src/app/clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component.ts","./src/app/clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component.html","./src/app/clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component.ts","./src/app/clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component.html","./src/app/clinic/clinic-login/auth-guard-clinic.service.ts","./src/app/clinic/clinic-login/authentication-clinic.service.ts","./src/app/clinic/clinic-login/clinic-login.component.ts","./src/app/clinic/clinic-login/clinic-login.component.html","./src/app/doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component.ts","./src/app/doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component.html","./src/app/doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component.ts","./src/app/doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component.html","./src/app/doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component.ts","./src/app/doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component.html","./src/app/doctor/doctor-dashboard/doctor-dashboard.component.ts","./src/app/doctor/doctor-dashboard/doctor-dashboard.component.html","./src/app/doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component.ts","./src/app/doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component.html","./src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component.ts","./src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component.html","./src/app/doctor/doctor-login/auth-guard-doctor.service.ts","./src/app/doctor/doctor-login/authentication-doctor.service.ts","./src/app/doctor/doctor-login/doctor-login.component.ts","./src/app/doctor/doctor-login/doctor-login.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component.ts","./src/app/hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component.html","./src/app/hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component.ts","./src/app/hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component.html","./src/app/hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component.ts","./src/app/hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component.html","./src/app/hospital/hospital-dashboard/hospital-dashboard.component.ts","./src/app/hospital/hospital-dashboard/hospital-dashboard.component.html","./src/app/hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component.ts","./src/app/hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component.html","./src/app/hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component.ts","./src/app/hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component.html","./src/app/hospital/hospital-login/auth-guard-hospital.service.ts","./src/app/hospital/hospital-login/authentication-hospital.service.ts","./src/app/hospital/hospital-login/hospital-login.component.ts","./src/app/hospital/hospital-login/hospital-login.component.html","./src/app/laboratory/laboratory-dashboard/laboratory-dashboard.component.ts","./src/app/laboratory/laboratory-dashboard/laboratory-dashboard.component.html","./src/app/laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component.ts","./src/app/laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component.html","./src/app/laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component.ts","./src/app/laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component.html","./src/app/laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component.ts","./src/app/laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component.html","./src/app/laboratory/laboratory-login/auth-guard-laboratory.service.ts","./src/app/laboratory/laboratory-login/authentication-Laboratory.service.ts","./src/app/laboratory/laboratory-login/laboratory-login.component.ts","./src/app/laboratory/laboratory-login/laboratory-login.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component.ts","./src/app/medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component.html","./src/app/medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component.ts","./src/app/medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component.html","./src/app/medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component.ts","./src/app/medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component.html","./src/app/medicalstore/medicalstore-dashboard/medicalstore-dashboard.component.ts","./src/app/medicalstore/medicalstore-dashboard/medicalstore-dashboard.component.html","./src/app/medicalstore/medicalstore-login/auth-guard-medicalstoreservice.ts","./src/app/medicalstore/medicalstore-login/authentication-medicalstore.service.ts","./src/app/medicalstore/medicalstore-login/medicalstore-login.component.ts","./src/app/medicalstore/medicalstore-login/medicalstore-login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/upload/service.ts","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/app/user/profile/profile.component.ts","./src/app/user/profile/profile.component.html","./src/app/user/profile/user-profile-case-details/user-profile-case-details.component.ts","./src/app/user/profile/user-profile-case-details/user-profile-case-details.component.html","./src/app/user/profile/user-profile-case-list/user-profile-case-list.component.ts","./src/app/user/profile/user-profile-case-list/user-profile-case-list.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts","zlib (ignored)","fs (ignored)","http (ignored)","https (ignored)","url (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { counts } from './counts';\n\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  // counts;\n  counts: any;\n\n  \n  constructor( private router:Router, private httpClient: HttpClient) { }\n\n  ngOnInit() {\n      this.httpClient.get<counts>(`http://127.0.0.1:5000/api/count`).subscribe(response => {\n        console.log(response);\n        this.counts = response;\n      })\n      console.log(this.counts);\n    }\n\n   \n  \n\n\n\n  UserList(){\n    this.router.navigateByUrl('/admin/user/users-list')\n    \n  }\n  DoctorList(){\n    this.router.navigateByUrl('/admin/doctor/doctor-list')\n    \n  }\n  HospitalList(){\n    this.router.navigateByUrl('/admin/hospital/hospital-list')\n    \n  }\n  ClinicList(){\n    this.router.navigateByUrl('/admin/clinic/clinic-list')\n    \n  }\n\n  MedicalStoreList(){\n    this.router.navigateByUrl('/admin/medical/medical-store-list')\n    \n  }\n  LaboratoryList(){\n    this.router.navigateByUrl('/admin/laboratory/laboratory-list')\n    \n  }\n\n \n}\n","<html>\r\n<head>\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\r\n</head>\r\n<body>\r\n  <div class=\"container main-section\" >\r\n\t\r\n\t<h3 class=\"justify-content-center\">Admin Dashboard</h3>\r\n\t<div class=\"row justify-content-md-center\">\r\n\t\t\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"UserList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\r\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Users List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-primary\">{{counts.users_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    \r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"DoctorList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-warning\">\r\n\t\t\t\t\t<i class=\"fa fa-stethoscope \" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Doctors List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-warning\">{{counts.doctors_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"HospitalList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-danger\">\r\n\t\t\t\t\t<i class=\"fa fa-hospital-o \" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Hospitals List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-danger\">{{counts.hospitals_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"row justify-content-md-center\">\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"ClinicList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-info\">\r\n\t\t\t\t\t<i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Clinic List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-info\">{{counts.clinics_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"MedicalStoreList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-success\">\r\n\t\t\t\t\t<i class=\"fa fa-medkit\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Medical Store List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-success\">{{counts.medicals_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"LaboratoryList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-secondary\">\r\n\t\t\t\t\t<i class=\"fa fa-flask\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Laboratory List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-success\">{{counts.laboratory_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationClinicService, AddClinic } from 'src/app/clinic/clinic-login/authentication-clinic.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-clinic',\n  templateUrl: './add-clinic.component.html',\n  styleUrls: ['./add-clinic.component.css']\n})\nexport class AddClinicComponent {\n\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationClinicService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    clinic_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    doctor_name: ['',Validators.required],\n    gender:['',Validators.required],\n    age:['',Validators.required],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    qualification: ['', Validators.required],\n    dob: ['',[ Validators.required,this.DateValidator]],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    clinic_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const clinic_document = (event.target as HTMLInputElement).files[0];\n    console.log(clinic_document);\n    this.registrationForm.get('clinic_document').patchValue(clinic_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewClinicCredentials: AddClinic;\n  onSubmit(){\n    this.NewClinicCredentials = this.registrationForm.value;\n    this.auth.AddClinic(this.NewClinicCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/doctor/add-doctor')\n        console.log(this.NewClinicCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewClinicCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Clinic</h1>\r\n          <hr>\r\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\r\n            \r\n          <!-- Clinic Name-->\r\n           \r\n          <div class=\"form-group\">\r\n            <label for=\"clinic_name\">Clinic Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"clinic_name\" [class.is-invalid]=\"registrationForm.get('clinic_name').invalid && registrationForm.get('clinic_name').touched\" \r\n            placeholder=\"Enter Clinic Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('clinic_name').valid || registrationForm.get('clinic_name').untouched\" class=\"text-danger\"> Clinic Name is required </small>\r\n          </div>\r\n\r\n        \r\n             <!-- License NUMBER -->\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"license_number\">License Number</label>\r\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\r\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\r\n                                  formControlName=\"license_number\"\r\n                                  placeholder=\"Enter your License Number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\r\n                                      registrationForm.get('license_number').untouched\"\r\n                                      class=\"text-danger\">License Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Established Date -->\r\n            <div class=\"form-group\">\r\n              <label for=\"established_date\">Established Date</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\r\n                registrationForm.get('established_date').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\r\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\r\n              registrationForm.get('established_date').untouched\"\r\n              class=\"text-danger\">Established Date is required </small>\r\n            </div>\r\n\r\n\r\n\r\n    \r\n              <!-- EMAIL -->\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email address</label>\r\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\r\n              registrationForm.get('email').touched\" class=\"form-control\"\r\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\r\n              registrationForm.get('email').untouched\"\r\n              class=\"text-danger\"> Email is required </small>\r\n            </div>\r\n\r\n             <!-- Password -->\r\n             <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"password\"  minlength=\"8\" \r\n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\r\n              registrationForm.get('password').touched\"\r\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\r\n              registrationForm.get('password').untouched\"\r\n              class=\"text-danger\"> Password is required </small>\r\n            </div>\r\n\r\n\r\n             <!-- Doctor Name-->\r\n          <div class=\"form-group\">\r\n            <label for=\"doctor_name\">Doctor Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"doctor_name\" [class.is-invalid]=\"registrationForm.get('doctor_name').invalid && registrationForm.get('doctor_name').touched\" \r\n            placeholder=\"Enter Doctor Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('doctor_name').valid || registrationForm.get('doctor_name').untouched\" class=\"text-danger\"> Doctor Name is required </small>\r\n          </div>\r\n\r\n          <!-- GENDER -->\r\n            <div class=\"form-group\" [class.is-invalid]=\"registrationForm.get('gender').invalid &&\r\n            registrationForm.get('gender').touched\" >    \r\n              <label for=\"Gender\">Gender</label>\r\n\r\n              <div class=\"custom-control custom-radio\">\r\n                <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\r\n                <label class=\"custom-control-label\" for=\"Male\">Male</label>\r\n              </div>\r\n                \r\n              <div class=\"custom-control custom-radio\">\r\n                <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\r\n                <label class=\"custom-control-label\" for=\"Female\">Female</label>\r\n              </div>   \r\n              <small [class.d-none]=\"registrationForm.get('gender').valid ||\r\n              registrationForm.get('gender').untouched\"\r\n              class=\"text-danger\"> Gender is required </small>\r\n            </div>\r\n\r\n            <!-- Age -->\r\n            <div class=\"form-group\">\r\n              <label for=\"age\">Age</label>\r\n              <input type=\"number\" \r\n               \r\n              [class.is-invalid]=\"registrationForm.get('age').invalid &&\r\n              registrationForm.get('age').touched\" \r\n              class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('age').valid ||\r\n              registrationForm.get('age').untouched\"\r\n              class=\"text-danger\"> Age is required </small>\r\n            </div>\r\n\r\n            <!-- Date of Birth -->\r\n            <div class=\"form-group\">\r\n              <label for=\"dob\">Date of Birth</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\r\n                registrationForm.get('dob').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\r\n                  registrationForm.get('dob').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\r\n              registrationForm.get('dob').untouched\"\r\n              class=\"text-danger\"> Date of birth is required </small>\r\n            </div>\r\n\r\n            <!-- Qualification -->\r\n          <div class=\"form-group\">\r\n            <label for=\"qualification\">Qualification</label>\r\n            <select formControlName=\"qualification\"  [class.is-invalid]=\"registrationForm.get('qualification').invalid &&\r\n            registrationForm.get('qualification').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select Qualification</option>\r\n                <option *ngFor=\"let qualification of qualificationList\">{{qualification}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('qualification').valid ||\r\n            registrationForm.get('qualification').untouched\"\r\n            class=\"text-danger\"> Qualification is required </small>\r\n          </div>\r\n\r\n\r\n            <!-- CLINIC ADDRESS -->\r\n            <h3 class=\"h5 mb-3 font-weight-normal\">Clinic Address</h3>\r\n            <hr>\r\n              <!-- ADDRESS STREET -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"street\">Street</label>\r\n              <input type=\"text\" minlength=\"5\" \r\n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\r\n                                registrationForm.get('street').touched\" class=\"form-control\"\r\n                                  formControlName=\"street\"\r\n                                  placeholder=\"Enter your street\" >\r\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\r\n                                      registrationForm.get('street').untouched\"\r\n                                      class=\"text-danger\"> Street is required </small>\r\n            </div>\r\n\r\n\r\n            \r\n              <!-- ADDRESS CITY -->\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">City</label>\r\n              <input type=\"text\"  minlength=\"2\" \r\n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\r\n                                registrationForm.get('city').touched\" class=\"form-control\"\r\n                                  formControlName=\"city\"\r\n                                  placeholder=\"Enter your city\" >\r\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\r\n                                      registrationForm.get('city').untouched\"\r\n                                      class=\"text-danger\"> City is required </small>\r\n            </div>\r\n\r\n            <!-- ADDRESS LANDMARK -->\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"landmark\">Landmark</label>\r\n            <input type=\"text\"  minlength=\"2\" \r\n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\r\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\r\n                                formControlName=\"landmark\"\r\n                                placeholder=\"Enter your landmark\" >\r\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\r\n                                    registrationForm.get('landmark').untouched\"\r\n                                    class=\"text-danger\"> Landmark is required </small>\r\n          </div>\r\n\r\n          <!-- ADDRESS STATE -->\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\r\n            registrationForm.get('state').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select State</option>\r\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\r\n            registrationForm.get('state').untouched\"\r\n            class=\"text-danger\"> State is required </small>\r\n          </div>\r\n\r\n            \r\n              <!-- ADDRESS PINCODE -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"pincode\">Pincode</label>\r\n              <input type=\"number\"  minlength=\"6\" \r\n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\r\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\r\n                                  formControlName=\"pincode\"\r\n                                  placeholder=\"Enter your last name\" >\r\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\r\n                                      registrationForm.get('pincode').untouched\"\r\n                                      class=\"text-danger\"> Pincode is required </small>\r\n            </div>\r\n          \r\n            <!-- Contact number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"contact_number\">Contact Number</label>\r\n              <input type=\"number\"   minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\r\n              registrationForm.get('contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\r\n\r\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\r\n              registrationForm.get('contact_number').untouched\"\r\n              class=\"text-danger\"> Contact Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Emergency Contact Number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\r\n              <input type=\"number\"  minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\r\n              registrationForm.get('emergency_contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\r\n              registrationForm.get('emergency_contact_number').untouched\"\r\n              class=\"text-danger\"> Emergency Contact Number is required </small>\r\n            </div>\r\n            \r\n\r\n\r\n              <!-- Clinic Document -->\r\n              <div class=\"form-group\">\r\n                <label for=\"clinic_document\">Clinic Document</label>\r\n                    <div class=\"custom-file\">\r\n                    <label for=\"clinic_document\" class=\"custom-file-label\">Clinic Document </label>\r\n                    <input type=\"file\" class=\"custom-file-input\"\r\n                      [class.is-invalid]=\"registrationForm.get('clinic_document').invalid &&\r\n                    registrationForm.get('clinic_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \r\n\r\n                    <small [class.d-none]=\"registrationForm.get('clinic_document').valid ||\r\n                    registrationForm.get('clinic_document').untouched\"\r\n                    class=\"text-danger\"> Clinic Document is required </small>\r\n              </div>\r\n            </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Clinic</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { ClinicDetails } from 'src/app/clinic/clinic-login/authentication-clinic.service';\n\n@Component({\n  selector: 'app-clinic-details',\n  templateUrl: './clinic-details.component.html',\n  styleUrls: ['./clinic-details.component.css']\n})\nexport class ClinicDetailsComponent implements OnInit {\n\n  clinic_id: string;\n  clinicDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('clinic_id')) {\n        this.clinic_id = parameter.get('clinic_id');\n        console.log(this.clinic_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getClinicDetails();\n\n  }\n\n  getClinicDetails(){\n    this.httpClient.get<ClinicDetails>(`http://127.0.0.1:5000/api/clinic/${this.clinic_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.clinicDetails = response;\n      console.log(typeof this.clinicDetails.dob)\n    })\n    console.log(this.clinicDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Clinic Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Clinic Name</th>\n            <td>{{clinicDetails.clinic_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{clinicDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{clinicDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Doctor Name</th>\n            <td>{{clinicDetails.doctor_name}}</td>\n        </tr>\n          \n        <tr>\n            <th>Qualification</th>\n            <td>{{clinicDetails.qualification}}</td>\n        </tr>\n\n        <tr>\n            <th>Gender</th>\n            <td>{{clinicDetails.gender}}</td>\n        </tr>\n\n        <tr>\n            <th>Age</th>\n            <td>{{clinicDetails.age}}</td>\n        </tr>\n\n        <tr>\n            <th>Date of Birth</th>\n            <td>{{clinicDetails.dob | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{clinicDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{clinicDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{clinicDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{clinicDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{clinicDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{clinicDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{clinicDetails.landmark}}</td>\n        </tr>\n   \n      \n   \n    </table>\n\n        <a [href]=\"clinicDetails.clinic_document\" target=\"_blank\">View Pdf</a>\n    <!-- <pdf-viewer src={{clinicDetails.clinic_document}} [external-link-target]=\"'blank'\" ></pdf-viewer> -->\n        \n        \n\n<!-- <pdf-viewer id=\"pdf-report-id\" class=\"pdf-container\" src={{clinicDetails.clinic_document}} [original-size]=\"false\" [fit-to-page]=\"true\"\n    [render-text]=\"true\" [zoom]=\"1\" (text-layer-rendered)=\"textLayerRendered($event)\">\n</pdf-viewer>\n \n \n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-list',\n  templateUrl: './clinic-list.component.html',\n  styleUrls: ['./clinic-list.component.css']\n})\nexport class ClinicListComponent implements OnInit {\n\n  clinics;\n  searchText= this.clinics\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get('http://127.0.0.1:5000/api/clinics/clinic-list').subscribe(users => (this.clinics = users))\n    console.log(this.clinics)\n\n   \n  }\n\n  NewClinic(){\n    this.route.navigateByUrl('/admin/clinic/add-clinic')\n  }\n    \n}\n\n","<div class=\"container\">\n    <h2>List of Clinics</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewClinic()\">New Clinic</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Clinic by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let clinic of clinics | filter:searchText\">\n      \n                \n         <td [routerLink]=\"['/admin/clinic/details/',clinic._id]\"> {{clinic.clinic_name}} </td>\n \n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, AbstractControl } from '@angular/forms';\nimport { AuthenticationDoctorService, AddDoctor } from 'src/app/doctor/doctor-login/authentication-doctor.service';\nimport { Router } from '@angular/router';\n// import { NewDoctorDetails } from './new-doctor-details';\n\n\n@Component({\n  selector: 'app-add-doctor',\n  templateUrl: './add-doctor.component.html',\n  styleUrls: ['./add-doctor.component.css']\n})\nexport class AddDoctorComponent{\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationDoctorService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    first_name: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    last_name: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    gender:['',Validators.required],\n    dob: ['',[ Validators.required,this.DateValidator]],\n    age:['',Validators.required],\n    qualification: ['', Validators.required],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    contact_number: ['',Validators.required],\n    profile_photo: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    doctor_document: ['', Validators.required],\n   });\n\n\n   selectFile(event) {\n    const doctor_document = (event.target as HTMLInputElement).files[0];\n    console.log(doctor_document);\n    this.registrationForm.get('doctor_document').patchValue(doctor_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n  selectFileProfilePhoto(event) {\n    const profile_pic = (event.target as HTMLInputElement).files[0];\n    console.log(profile_pic);\n    this.registrationForm.get('profile_photo').patchValue(profile_pic);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n  NewDoctorcredentials: AddDoctor ;\n  onSubmit(){\n    this.NewDoctorcredentials = this.registrationForm.value;\n    this.auth.AddUser(this.NewDoctorcredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/doctor/add-doctor')\n        console.log(this.NewDoctorcredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewDoctorcredentials)\n        \n      }\n    )\n  }\n\n\n\n\n  \n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Doctor</h1>\n          <hr>\n          <h3 class=\"h5 mb-3 font-weight-normal\">Basic Information</h3>\n          \n            <!-- First Name -->\n           \n              <div class=\"form-group\">\n                <label for=\"first_name\">First Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"first_name\" \n                class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n                [class.is-invalid]=\"registrationForm.get('first_name').invalid && registrationForm.get('first_name').touched\" \n                placeholder=\"Enter your first name\" >\n\n              <small [class.d-none]=\"registrationForm.get('first_name').valid || registrationForm.get('first_name').untouched\" class=\"text-danger\"> First Name is required </small>\n\n              </div>\n\n            <!-- Last Name -->\n\n              <div class=\"form-group\">\n                <label for=\"last_name\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"last_name\" \n                class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n                [class.is-invalid]=\"registrationForm.get('last_name').invalid && registrationForm.get('last_name').touched\" \n                placeholder=\"Enter your last name\" >\n\n              <small [class.d-none]=\"registrationForm.get('last_name').valid || registrationForm.get('last_name').untouched\" class=\"text-danger\"> Last Name is required </small>\n\n              </div>\n\n                \n      \n                <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n            <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n            <!-- PROFILE PHOTO -->\n            <div class=\"form-group\">\n              <label for=\"profile_photo\">Profile Photo</label>\n              <input type=\"file\" class=\"form-control-file\"\n                [class.is-invalid]=\"registrationForm.get('profile_photo').invalid &&\n              registrationForm.get('profile_photo').touched\" (change)=\"selectFileProfilePhoto($event)\" accept=\"image/*\"> \n\n              <small [class.d-none]=\"registrationForm.get('profile_photo').valid ||\n              registrationForm.get('profile_photo').untouched\"\n              class=\"text-danger\"> Profile Photo is required </small>\n            </div>\n\n            <!-- GENDER -->\n              <div>    \n                <label for=\"Gender\">Gender</label>\n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Male\">Male</label>\n                </div>  \n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Female\">Female</label>\n                </div>  \n                  \n              </div>\n\n               <!-- Date of Birth -->\n            <div class=\"form-group\">\n              <label for=\"dob\">Date of Birth</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\n                registrationForm.get('dob').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\n                  registrationForm.get('dob').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\n              registrationForm.get('dob').untouched\"\n              class=\"text-danger\"> Date of birth is required </small>\n            </div>\n\n            <!-- Age -->\n            <div class=\"form-group\">\n              <label for=\"age\">Age</label>\n              <input type=\"number\" \n               \n              [class.is-invalid]=\"registrationForm.get('age').invalid &&\n              registrationForm.get('age').touched\" \n              class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\n\n              <small [class.d-none]=\"registrationForm.get('age').valid ||\n              registrationForm.get('age').untouched\"\n              class=\"text-danger\"> Age is required </small>\n            </div>\n       \n              <h3 class=\"h5 mb-3 font-weight-normal\">Qualifications</h3>\n              <hr>\n\n              <!-- Qualification -->\n          <div class=\"form-group\">\n            <label for=\"qualification\">Qualification</label>\n            <select formControlName=\"qualification\"  [class.is-invalid]=\"registrationForm.get('qualification').invalid &&\n            registrationForm.get('qualification').touched\"\n            class=\"form-control\">\n                <option disabled>Select Qualification</option>\n                <option *ngFor=\"let qualification of qualificationList\">{{qualification}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('qualification').valid ||\n            registrationForm.get('qualification').untouched\"\n            class=\"text-danger\"> Qualification is required </small>\n          </div>\n\n\n          <!-- Doctor Home ADDRESS -->\n          <h3 class=\"h5 mb-3 font-weight-normal\">Permanent Address</h3>\n          <hr>\n            <!-- ADDRESS STREET -->\n        \n          <div class=\"form-group\">\n            <label for=\"street\">Street</label>\n            <input type=\"text\" minlength=\"5\" \n            maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                              registrationForm.get('street').touched\" class=\"form-control\"\n                                formControlName=\"street\"\n                                placeholder=\"Enter your street\" >\n            <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                    registrationForm.get('street').untouched\"\n                                    class=\"text-danger\"> Street is required </small>\n          </div>\n\n\n          \n            <!-- ADDRESS CITY -->\n\n          <div class=\"form-group\">\n            <label for=\"city\">City</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                              registrationForm.get('city').touched\" class=\"form-control\"\n                                formControlName=\"city\"\n                                placeholder=\"Enter your city\" >\n            <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                    registrationForm.get('city').untouched\"\n                                    class=\"text-danger\"> City is required </small>\n          </div>\n\n          <!-- ADDRESS LANDMARK -->\n\n        <div class=\"form-group\">\n          <label for=\"landmark\">Landmark</label>\n          <input type=\"text\"  minlength=\"2\" \n          maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                            registrationForm.get('landmark').touched\" class=\"form-control\"\n                              formControlName=\"landmark\"\n                              placeholder=\"Enter your landmark\" >\n          <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                  registrationForm.get('landmark').untouched\"\n                                  class=\"text-danger\"> Landmark is required </small>\n        </div>\n\n        <!-- ADDRESS STATE -->\n        <div class=\"form-group\">\n          <label for=\"state\">State</label>\n          <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n          registrationForm.get('state').touched\"\n          class=\"form-control\">\n              <option disabled>Select State</option>\n              <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n          </select>\n\n          <small [class.d-none]=\"registrationForm.get('state').valid ||\n          registrationForm.get('state').untouched\"\n          class=\"text-danger\"> State is required </small>\n        </div>\n\n          \n            <!-- ADDRESS PINCODE -->\n        \n          <div class=\"form-group\">\n            <label for=\"pincode\">Pincode</label>\n            <input type=\"number\"  minlength=\"6\" \n            maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                              registrationForm.get('pincode').touched\" class=\"form-control\"\n                                formControlName=\"pincode\"\n                                placeholder=\"Enter your pincode\" >\n            <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                    registrationForm.get('pincode').untouched\"\n                                    class=\"text-danger\"> Pincode is required </small>\n          </div>\n\n\n\n           <!-- Contact number -->\n           <div class=\"form-group\">\n            <label for=\"contact_number\">Contact Number</label>\n            <input type=\"number\"   minlength=\"10\" \n            maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n            registrationForm.get('contact_number').touched\"\n             class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n             <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n            registrationForm.get('contact_number').untouched\"\n            class=\"text-danger\"> Contact Number is required </small>\n          </div>\n\n\n          <!-- Emergency Contact Number -->\n          <div class=\"form-group\">\n            <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n            <input type=\"number\"  minlength=\"10\" \n            maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n            registrationForm.get('emergency_contact_number').touched\"\n             class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n            <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n            registrationForm.get('emergency_contact_number').untouched\"\n            class=\"text-danger\"> Emergency Contact Number is required </small>\n          </div>\n          \n\n\n            <!-- Doctor Document -->\n            <div class=\"form-group\">\n              <label for=\"doctor_document\">Clinic Document</label>\n                  <div class=\"custom-file\">\n                  <label for=\"doctor_document\" class=\"custom-file-label\">Clinic Document </label>\n                  <input type=\"file\" class=\"custom-file-input\"\n                    [class.is-invalid]=\"registrationForm.get('doctor_document').invalid &&\n                  registrationForm.get('doctor_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf, .doc, .docx\"> \n\n                  <small [class.d-none]=\"registrationForm.get('doctor_document').valid ||\n                  registrationForm.get('doctor_document').untouched\"\n                  class=\"text-danger\"> Clinic Document is required </small>\n            </div>\n          </div>\n\n            \n              <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Doctor</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DoctorDetails } from 'src/app/doctor/doctor-login/authentication-doctor.service';\n\n@Component({\n  selector: 'app-doctor-details',\n  templateUrl: './doctor-details.component.html',\n  styleUrls: ['./doctor-details.component.css']\n})\nexport class DoctorDetailsComponent implements OnInit {\n\n  doctor_id: string;\n  doctorDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('doctor_id')) {\n        this.doctor_id = parameter.get('doctor_id');\n        console.log(this.doctor_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getClinicDetails();\n\n  }\n\n  getClinicDetails(){\n    this.httpClient.get<DoctorDetails>(`http://127.0.0.1:5000/api/doctor/${this.doctor_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.doctorDetails = response;\n      console.log(typeof this.doctorDetails.dob)\n    })\n    console.log(this.doctorDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Doctor Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n\n        <div class=\"text-center justify-content-center\">\n            <img src={{doctorDetails.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n          </div>\n    \n        <tr>\n            <th>First Name</th>\n            <td>{{doctorDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Last Name</th>\n            <td>{{doctorDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{doctorDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email</th>\n            <td>{{doctorDetails.email}}</td>\n        </tr>\n          \n        <tr>\n            <th>Qualification</th>\n            <td>{{doctorDetails.qualification}}</td>\n        </tr>\n\n        <tr>\n            <th>Gender</th>\n            <td>{{doctorDetails.gender}}</td>\n        </tr>\n\n        <!-- <tr>\n            <th>Age</th>\n            <td>{{doctorDetails.age}}</td>\n        </tr> -->\n\n        <tr>\n            <th>Date of Birth</th>\n            <td>{{doctorDetails.dob | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{doctorDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{doctorDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{doctorDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{doctorDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{doctorDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{doctorDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{doctorDetails.landmark}}</td>\n        </tr>\n   \n        <a [href]=\"doctorDetails.doctor_document\" target=\"_blank\">View Doctor Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctors-list',\n  templateUrl: './doctors-list.component.html',\n  styleUrls: ['./doctors-list.component.css']\n})\nexport class DoctorsListComponent implements OnInit {\n  doctors:string\n  searchText= this.doctors\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/doctor/doctor-list').subscribe(users => (this.doctors = users as string))\n    console.log(this.doctors)\n  }\n\n\n\n\n  NewDoctor(){\n    this.route.navigateByUrl('/admin/doctor/add-doctor')\n  }\n}\n","<div class=\"container\">\r\n    <h2>List of Doctors</h2>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewDoctor()\">New Doctor</button>\r\n    <br>\r\n    <br>\r\n    <div class=\"search-users\">\r\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Doctor by name \">\r\n        <br>\r\n    </div>\r\n<table class=\"table table-dark table-hover\">\r\n    <tbody>\r\n    <tr *ngFor=\"let doctor of doctors | filter:searchText\">\r\n        <!-- <td class=\"text-left\"> -->\r\n            <!-- <a > -->\r\n            <!-- <a (click)=\"edit(user)\"> --> \r\n                \r\n         <td [routerLink]=\"['/admin/doctor/details',doctor._id]\"> {{doctor.first_name}}  {{doctor.last_name}}</td>\r\n                  \r\n                <!-- <input *ngIf=\"user==editUser\" [(ngModel)]=\"user.name\" (blur)=\"update(user)\" (keyup.enter)=\"update(user)\"> -->\r\n            <!-- </a> -->\r\n        <!-- </td> -->\r\n    </tr>\r\n</tbody> \r\n</table> \r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationHospitalService, HospitalDetails, AddHospital } from 'src/app/hospital/hospital-login/authentication-hospital.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-hospital',\n  templateUrl: './add-hospital.component.html',\n  styleUrls: ['./add-hospital.component.css']\n})\nexport class AddHospitalComponent {\n\n\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationHospitalService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    hospital_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    owner_name: ['',Validators.required],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    hospital_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const hospital_document = (event.target as HTMLInputElement).files[0];\n    console.log(hospital_document);\n    this.registrationForm.get('hospital_document').patchValue(hospital_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const established_date = control;\n    if (established_date.pristine) {\n      return null;\n    }\n    const current_date = new Date(established_date.value)\n    if( current_date > new Date()){\n      established_date.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewHospitalCredentials: AddHospital;\n  onSubmit(){\n    this.NewHospitalCredentials = this.registrationForm.value;\n    this.auth.AddHospital(this.NewHospitalCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/hospital/add-hospital')\n        console.log(this.NewHospitalCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewHospitalCredentials)\n        \n      }\n    )\n  }  \n}\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Hospital</h1>\r\n          <hr>\r\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\r\n          \r\n          <!-- Hospital Name-->\r\n           \r\n          <div class=\"form-group\">\r\n            <label for=\"hospital_name\">Hospital Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"hospital_name\" [class.is-invalid]=\"registrationForm.get('hospital_name').invalid && registrationForm.get('hospital_name').touched\" \r\n            placeholder=\"Enter Hospital Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('hospital_name').valid || registrationForm.get('hospital_name').untouched\" class=\"text-danger\"> Hospital Name is required </small>\r\n          </div>\r\n\r\n        \r\n             <!-- License NUMBER -->\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"license_number\">License Number</label>\r\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\r\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\r\n                                  formControlName=\"license_number\"\r\n                                  placeholder=\"Enter your License Number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\r\n                                      registrationForm.get('license_number').untouched\"\r\n                                      class=\"text-danger\">License Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Established Date -->\r\n            <div class=\"form-group\">\r\n              <label for=\"established_date\">Established Date</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\r\n                registrationForm.get('established_date').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\r\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\r\n              registrationForm.get('established_date').untouched\"\r\n              class=\"text-danger\">Established Date is required </small>\r\n            </div>\r\n\r\n\r\n\r\n    \r\n              <!-- EMAIL -->\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email address</label>\r\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\r\n              registrationForm.get('email').touched\" class=\"form-control\"\r\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\r\n              registrationForm.get('email').untouched\"\r\n              class=\"text-danger\"> Email is required </small>\r\n            </div>\r\n\r\n             <!-- Password -->\r\n             <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"password\"  minlength=\"8\" \r\n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\r\n              registrationForm.get('password').touched\"\r\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\r\n              registrationForm.get('password').untouched\"\r\n              class=\"text-danger\"> Password is required </small>\r\n            </div>\r\n\r\n\r\n             <!-- Owner Name-->\r\n             <div class=\"form-group\">\r\n              <label for=\"owner_name\">Owner Name</label>\r\n              <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n              formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \r\n              placeholder=\"Enter Owner Name\" >\r\n                <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\r\n            </div>\r\n  \r\n\r\n\r\n\r\n\r\n            <!-- HOSPITAL ADDRESS -->\r\n            <h3 class=\"h5 mb-3 font-weight-normal\">Hospital Address</h3>\r\n            <hr>\r\n              <!-- ADDRESS STREET -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"street\">Street</label>\r\n              <input type=\"text\" minlength=\"5\" \r\n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\r\n                                registrationForm.get('street').touched\" class=\"form-control\"\r\n                                  formControlName=\"street\"\r\n                                  placeholder=\"Enter your street\" >\r\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\r\n                                      registrationForm.get('street').untouched\"\r\n                                      class=\"text-danger\"> Street is required </small>\r\n            </div>\r\n\r\n\r\n            \r\n              <!-- ADDRESS CITY -->\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">City</label>\r\n              <input type=\"text\"  minlength=\"2\" \r\n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\r\n                                registrationForm.get('city').touched\" class=\"form-control\"\r\n                                  formControlName=\"city\"\r\n                                  placeholder=\"Enter your city\" >\r\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\r\n                                      registrationForm.get('city').untouched\"\r\n                                      class=\"text-danger\"> City is required </small>\r\n            </div>\r\n\r\n            <!-- ADDRESS LANDMARK -->\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"landmark\">Landmark</label>\r\n            <input type=\"text\"  minlength=\"2\" \r\n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\r\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\r\n                                formControlName=\"landmark\"\r\n                                placeholder=\"Enter your landmark\" >\r\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\r\n                                    registrationForm.get('landmark').untouched\"\r\n                                    class=\"text-danger\"> Landmark is required </small>\r\n          </div>\r\n\r\n          <!-- ADDRESS STATE -->\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\r\n            registrationForm.get('state').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select State</option>\r\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\r\n            registrationForm.get('state').untouched\"\r\n            class=\"text-danger\"> State is required </small>\r\n          </div>\r\n\r\n            \r\n              <!-- ADDRESS PINCODE -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"pincode\">Pincode</label>\r\n              <input type=\"number\"  minlength=\"6\" \r\n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\r\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\r\n                                  formControlName=\"pincode\"\r\n                                  placeholder=\"Enter your last name\" >\r\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\r\n                                      registrationForm.get('pincode').untouched\"\r\n                                      class=\"text-danger\"> Pincode is required </small>\r\n            </div>\r\n          \r\n            <!-- Contact number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"contact_number\">Contact Number</label>\r\n              <input type=\"number\"   minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\r\n              registrationForm.get('contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\r\n\r\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\r\n              registrationForm.get('contact_number').untouched\"\r\n              class=\"text-danger\"> Contact Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Emergency Contact Number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\r\n              <input type=\"number\"  minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\r\n              registrationForm.get('emergency_contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\r\n              registrationForm.get('emergency_contact_number').untouched\"\r\n              class=\"text-danger\"> Emergency Contact Number is required </small>\r\n            </div>\r\n            \r\n\r\n\r\n              <!-- Hospital Document -->\r\n              <div class=\"form-group\">\r\n                <label for=\"hospital_document\">Hospital Document</label>\r\n                    <div class=\"custom-file\">\r\n                    <label for=\"hospital_document\" class=\"custom-file-label\">Hospital Document </label>\r\n                    <input type=\"file\" class=\"custom-file-input\"\r\n                      [class.is-invalid]=\"registrationForm.get('hospital_document').invalid &&\r\n                    registrationForm.get('hospital_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \r\n\r\n                    <small [class.d-none]=\"registrationForm.get('hospital_document').valid ||\r\n                    registrationForm.get('hospital_document').untouched\"\r\n                    class=\"text-danger\"> Hospital Document is required </small>\r\n              </div>\r\n            </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Hospital</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute } from '@angular/router';\nimport { HospitalDetails } from 'src/app/hospital/hospital-login/authentication-hospital.service';\n\n@Component({\n  selector: 'app-hospital-details',\n  templateUrl: './hospital-details.component.html',\n  styleUrls: ['./hospital-details.component.css']\n})\nexport class HospitalDetailsComponent implements OnInit {\n\n  hospital_id: string;\n  hospitalDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('hospital_id')) {\n        this.hospital_id = parameter.get('hospital_id');\n        console.log(this.hospital_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.gethospitalDetails();\n\n  }\n\n  gethospitalDetails(){\n    this.httpClient.get<HospitalDetails>(`http://127.0.0.1:5000/api/hospital/${this.hospital_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.hospitalDetails = response;\n      console.log(typeof this.hospitalDetails.dob)\n    })\n    console.log(this.hospitalDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Hospital Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Hospital Name</th>\n            <td>{{hospitalDetails.hospital_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{hospitalDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{hospitalDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Owner Name</th>\n            <td>{{hospitalDetails.owner_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{hospitalDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{hospitalDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{hospitalDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{hospitalDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{hospitalDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{hospitalDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{hospitalDetails.landmark}}</td>\n        </tr>\n\n        <a [href]=\"hospitalDetails.hospital_document\" target=\"_blank\">View Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-list',\n  templateUrl: './hospital-list.component.html',\n  styleUrls: ['./hospital-list.component.css']\n})\nexport class HospitalListComponent implements OnInit {\n  hospitals:string\n  searchText= this.hospitals\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/hospital/list').subscribe(users => (this.hospitals = users as string))\n    console.log(this.hospitals)\n  }\n\n\n\n\n\n  NewHospital(){\n    this.route.navigateByUrl('/admin/hospital/add-hospital')\n  }\n}","<div class=\"container\">\n    <h2>List of Hospitals</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewHospital()\">New Hospital</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Hospital by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let hospital of hospitals | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/hospital/details/',hospital._id]\"> {{hospital.hospital_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationLaboratoryService, AddLaboratory } from 'src/app/laboratory/laboratory-login/authentication-Laboratory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-laboratory',\n  templateUrl: './add-laboratory.component.html',\n  styleUrls: ['./add-laboratory.component.css']\n})\nexport class AddLaboratoryComponent {\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationLaboratoryService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    laboratory_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    street: ['', Validators.required],\n    owner_name: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    laboratory_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const laboratory_document = (event.target as HTMLInputElement).files[0];\n    console.log(laboratory_document);\n    this.registrationForm.get('laboratory_document').patchValue(laboratory_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewLaboratoryCredentials: AddLaboratory;\n  onSubmit(){\n    this.NewLaboratoryCredentials = this.registrationForm.value;\n    this.auth.AddLaboratory(this.NewLaboratoryCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/laboratory/add-laboratory')\n        console.log(this.NewLaboratoryCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewLaboratoryCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Laboratory</h1>\n          <hr>\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\n            \n          <!-- Laboratory Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"laboratory_name\">Laboratory Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"laboratory_name\" [class.is-invalid]=\"registrationForm.get('laboratory_name').invalid && registrationForm.get('laboratory_name').touched\" \n            placeholder=\"Enter Laboratory Name\" >\n              <small [class.d-none]=\"registrationForm.get('laboratory_name').valid || registrationForm.get('laboratory_name').untouched\" class=\"text-danger\"> Laboratory Name is required </small>\n          </div>\n\n             \n          <!-- Owner Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"owner_name\">Owner Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \n            placeholder=\"Enter Owner Name\" >\n              <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\n          </div>\n\n        \n             <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n\n            <!-- Established Date -->\n            <div class=\"form-group\">\n              <label for=\"established_date\">Established Date</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\n                registrationForm.get('established_date').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\n              registrationForm.get('established_date').untouched\"\n              class=\"text-danger\">Established Date is required </small>\n            </div>\n\n\n\n    \n              <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n    \n            <!-- LABORATORY ADDRESS -->\n            <h3 class=\"h5 mb-3 font-weight-normal\">Laboratory Address</h3>\n            <hr>\n              <!-- ADDRESS STREET -->\n          \n            <div class=\"form-group\">\n              <label for=\"street\">Street</label>\n              <input type=\"text\" minlength=\"5\" \n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                registrationForm.get('street').touched\" class=\"form-control\"\n                                  formControlName=\"street\"\n                                  placeholder=\"Enter your street\" >\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                      registrationForm.get('street').untouched\"\n                                      class=\"text-danger\"> Street is required </small>\n            </div>\n\n\n            \n              <!-- ADDRESS CITY -->\n\n            <div class=\"form-group\">\n              <label for=\"city\">City</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                registrationForm.get('city').touched\" class=\"form-control\"\n                                  formControlName=\"city\"\n                                  placeholder=\"Enter your city\" >\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                      registrationForm.get('city').untouched\"\n                                      class=\"text-danger\"> City is required </small>\n            </div>\n\n            <!-- ADDRESS LANDMARK -->\n\n          <div class=\"form-group\">\n            <label for=\"landmark\">Landmark</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\n                                formControlName=\"landmark\"\n                                placeholder=\"Enter your landmark\" >\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                    registrationForm.get('landmark').untouched\"\n                                    class=\"text-danger\"> Landmark is required </small>\n          </div>\n\n          <!-- ADDRESS STATE -->\n          <div class=\"form-group\">\n            <label for=\"state\">State</label>\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n            registrationForm.get('state').touched\"\n            class=\"form-control\">\n                <option disabled>Select State</option>\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\n            registrationForm.get('state').untouched\"\n            class=\"text-danger\"> State is required </small>\n          </div>\n\n            \n              <!-- ADDRESS PINCODE -->\n          \n            <div class=\"form-group\">\n              <label for=\"pincode\">Pincode</label>\n              <input type=\"number\"  minlength=\"6\" \n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\n                                  formControlName=\"pincode\"\n                                  placeholder=\"Enter your last name\" >\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                      registrationForm.get('pincode').untouched\"\n                                      class=\"text-danger\"> Pincode is required </small>\n            </div>\n          \n            <!-- Contact number -->\n            <div class=\"form-group\">\n              <label for=\"contact_number\">Contact Number</label>\n              <input type=\"number\"   minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n              registrationForm.get('contact_number').touched\"\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n              registrationForm.get('contact_number').untouched\"\n              class=\"text-danger\"> Contact Number is required </small>\n            </div>\n\n\n            <!-- Emergency Contact Number -->\n            <div class=\"form-group\">\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n              <input type=\"number\"  minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n              registrationForm.get('emergency_contact_number').touched\"\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n              registrationForm.get('emergency_contact_number').untouched\"\n              class=\"text-danger\"> Emergency Contact Number is required </small>\n            </div>\n            \n\n\n              <!-- Laboratory Document -->\n              <div class=\"form-group\">\n                <label for=\"laboratory_document\">Laboratory Document</label>\n                    <div class=\"custom-file\">\n                    <label for=\"laboratory_document\" class=\"custom-file-label\">Laboratory Document </label>\n                    <input type=\"file\" class=\"custom-file-input\"\n                      [class.is-invalid]=\"registrationForm.get('laboratory_document').invalid &&\n                    registrationForm.get('laboratory_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n                    <small [class.d-none]=\"registrationForm.get('laboratory_document').valid ||\n                    registrationForm.get('laboratory_document').untouched\"\n                    class=\"text-danger\"> Laboratory Document is required </small>\n              </div>\n            </div>\n\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Laboratory</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { LaboratoryDetails } from 'src/app/laboratory/laboratory-login/authentication-Laboratory.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-details',\n  templateUrl: './laboratory-details.component.html',\n  styleUrls: ['./laboratory-details.component.css']\n})\nexport class LaboratoryDetailsComponent implements OnInit {\n  laboratory_id: string;\n  laboratoryDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('laboratory_id')) {\n        this.laboratory_id = parameter.get('laboratory_id');\n        console.log(this.laboratory_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getLaboratoryDetails();\n\n  }\n\n  getLaboratoryDetails(){\n    this.httpClient.get<LaboratoryDetails>(`http://127.0.0.1:5000/api/laboratory/${this.laboratory_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.laboratoryDetails = response;\n      console.log(typeof this.laboratoryDetails.dob)\n    })\n    console.log(this.laboratoryDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Laboratory Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Laboratory Name</th>\n            <td>{{laboratoryDetails.laboratory_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{laboratoryDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{laboratoryDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{laboratoryDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{laboratoryDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{laboratoryDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{laboratoryDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{laboratoryDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{laboratoryDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{laboratoryDetails.landmark}}</td>\n        </tr>\n   \n        <a [href]=\"laboratoryDetails.laboratory_document\" target=\"_blank\">View Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-list',\n  templateUrl: './laboratory-list.component.html',\n  styleUrls: ['./laboratory-list.component.css']\n})\nexport class LaboratoryListComponent implements OnInit {\n\n  laboratories:string\n  searchText= this.laboratories\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/laboratory/laboratory-list').subscribe(users => (this.laboratories = users as string))\n    console.log(this.laboratories)\n  }\n\n\n  \n  NewLaboratory(){\n    this.route.navigateByUrl('/admin/laboratory/add-laboratory')\n  }\n}\n","<div class=\"container\">\n    <h2>List of Laboratory</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewLaboratory()\">New Laboratory</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Laboratory by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let laboratory of laboratories | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/laboratory/details/',laboratory._id]\"> {{laboratory.laboratory_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, AbstractControl, Validators } from '@angular/forms';\nimport { AuthenticationMedicalStoreService, AddMedical } from 'src/app/medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-medical-store',\n  templateUrl: './add-medical-store.component.html',\n  styleUrls: ['./add-medical-store.component.css']\n})\nexport class AddMedicalStoreComponent {\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationMedicalStoreService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    medical_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    street: ['', Validators.required],\n    owner_name: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    medical_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const medical_document = (event.target as HTMLInputElement).files[0];\n    console.log(medical_document);\n    this.registrationForm.get('medical_document').patchValue(medical_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewLaboratoryCredentials: AddMedical;\n  onSubmit(){\n    this.NewLaboratoryCredentials = this.registrationForm.value;\n    this.auth.AddMedical(this.NewLaboratoryCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/medical/add-medical')\n        console.log(this.NewLaboratoryCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewLaboratoryCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Medical</h1>\n          <hr>\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\n            \n          <!-- Medical Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"medical_name\">Medical Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"medical_name\" [class.is-invalid]=\"registrationForm.get('medical_name').invalid && registrationForm.get('medical_name').touched\" \n            placeholder=\"Enter Medical Name\" >\n              <small [class.d-none]=\"registrationForm.get('medical_name').valid || registrationForm.get('medical_name').untouched\" class=\"text-danger\"> Medical Name is required </small>\n          </div>\n\n        \n             <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n\n                 \n          <!-- Owner Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"owner_name\">Owner Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \n            placeholder=\"Enter Owner Name\" >\n              <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\n          </div>\n\n\n            <!-- Established Date -->\n            <div class=\"form-group\">\n              <label for=\"established_date\">Established Date</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\n                registrationForm.get('established_date').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\n              registrationForm.get('established_date').untouched\"\n              class=\"text-danger\">Established Date is required </small>\n            </div>\n\n\n\n    \n              <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n    \n            <!-- MEDICAL ADDRESS -->\n            <h3 class=\"h5 mb-3 font-weight-normal\">Medical Address</h3>\n            <hr>\n              <!-- ADDRESS STREET -->\n          \n            <div class=\"form-group\">\n              <label for=\"street\">Street</label>\n              <input type=\"text\" minlength=\"5\" \n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                registrationForm.get('street').touched\" class=\"form-control\"\n                                  formControlName=\"street\"\n                                  placeholder=\"Enter your street\" >\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                      registrationForm.get('street').untouched\"\n                                      class=\"text-danger\"> Street is required </small>\n            </div>\n\n\n            \n              <!-- ADDRESS CITY -->\n\n            <div class=\"form-group\">\n              <label for=\"city\">City</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                registrationForm.get('city').touched\" class=\"form-control\"\n                                  formControlName=\"city\"\n                                  placeholder=\"Enter your city\" >\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                      registrationForm.get('city').untouched\"\n                                      class=\"text-danger\"> City is required </small>\n            </div>\n\n            <!-- ADDRESS LANDMARK -->\n\n          <div class=\"form-group\">\n            <label for=\"landmark\">Landmark</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\n                                formControlName=\"landmark\"\n                                placeholder=\"Enter your landmark\" >\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                    registrationForm.get('landmark').untouched\"\n                                    class=\"text-danger\"> Landmark is required </small>\n          </div>\n\n          <!-- ADDRESS STATE -->\n          <div class=\"form-group\">\n            <label for=\"state\">State</label>\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n            registrationForm.get('state').touched\"\n            class=\"form-control\">\n                <option disabled>Select State</option>\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\n            registrationForm.get('state').untouched\"\n            class=\"text-danger\"> State is required </small>\n          </div>\n\n            \n              <!-- ADDRESS PINCODE -->\n          \n            <div class=\"form-group\">\n              <label for=\"pincode\">Pincode</label>\n              <input type=\"number\"  minlength=\"6\" \n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\n                                  formControlName=\"pincode\"\n                                  placeholder=\"Enter your last name\" >\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                      registrationForm.get('pincode').untouched\"\n                                      class=\"text-danger\"> Pincode is required </small>\n            </div>\n          \n            <!-- Contact number -->\n            <div class=\"form-group\">\n              <label for=\"contact_number\">Contact Number</label>\n              <input type=\"number\"   minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n              registrationForm.get('contact_number').touched\"\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n              registrationForm.get('contact_number').untouched\"\n              class=\"text-danger\"> Contact Number is required </small>\n            </div>\n\n\n            <!-- Emergency Contact Number -->\n            <div class=\"form-group\">\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n              <input type=\"number\"  minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n              registrationForm.get('emergency_contact_number').touched\"\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n              registrationForm.get('emergency_contact_number').untouched\"\n              class=\"text-danger\"> Emergency Contact Number is required </small>\n            </div>\n            \n\n\n              <!-- Medical Document -->\n              <div class=\"form-group\">\n                <label for=\"medical_document\">Medical Document</label>\n                    <div class=\"custom-file\">\n                    <label for=\"medical_document\" class=\"custom-file-label\">Medical Document </label>\n                    <input type=\"file\" class=\"custom-file-input\"\n                      [class.is-invalid]=\"registrationForm.get('medical_document').invalid &&\n                    registrationForm.get('medical_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n                    <small [class.d-none]=\"registrationForm.get('medical_document').valid ||\n                    registrationForm.get('medical_document').untouched\"\n                    class=\"text-danger\"> Medical Document is required </small>\n              </div>\n            </div>\n\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Medical</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { MedicalDetails } from 'src/app/medicalstore/medicalstore-login/authentication-medicalstore.service';\n\n@Component({\n  selector: 'app-medical-store-details',\n  templateUrl: './medical-store-details.component.html',\n  styleUrls: ['./medical-store-details.component.css']\n})\nexport class MedicalStoreDetailsComponent implements OnInit {\n  medical_id: string;\n  medicalDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('medical_id')) {\n        this.medical_id = parameter.get('medical_id');\n        console.log(this.medical_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getMedicalDetails();\n\n  }\n\n  getMedicalDetails(){\n    this.httpClient.get<MedicalDetails>(`http://127.0.0.1:5000/api/medical/${this.medical_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.medicalDetails = response;\n      console.log(typeof this.medicalDetails.dob)\n    })\n    console.log(this.medicalDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Medical Store Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Medical Name</th>\n            <td>{{medicalDetails.medical_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{medicalDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Owner Name</th>\n            <td>{{medicalDetails.owner_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{medicalDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{medicalDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{medicalDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{medicalDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{medicalDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{medicalDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{medicalDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{medicalDetails.landmark}}</td>\n        </tr>\n   \n      \n        <a [href]=\"medicalDetails.medical_document\" target=\"_blank\">View Document PDF</a>\n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-store-list',\n  templateUrl: './medical-store-list.component.html',\n  styleUrls: ['./medical-store-list.component.css']\n})\nexport class MedicalStoreListComponent implements OnInit {\n\n  medicalstores:string\n  searchText= this.medicalstores\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/medical/list').subscribe(users => (this.medicalstores = users as string))\n    console.log(this.medicalstores)\n  }\n\n\n  \n  NewMedicalStore(){\n    this.route.navigateByUrl('/admin/medical/add-medical')\n  }\n}\n","<div class=\"container\">\n    <h2>List of Medical Stores</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewMedicalStore()\">New Medical Store</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Medical Store by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let medical of medicalstores | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/medical/details/',medical._id]\"> {{medical.medical_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component } from '@angular/core';\nimport { AuthenticationAdminService } from 'src/app/admin/admin-login/authentication-admin.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { NewUserDetails } from './new-user-details';\n// import { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-new-user',\n  templateUrl: './add-new-user.component.html',\n  styleUrls: ['./add-new-user.component.css']\n})\nexport class AddNewUserComponent {\n\n  NewUsercredentials: NewUserDetails\n\n  blood_group : string;\n  blood_group_list: any = ['A+', 'A-', 'B+','B-', 'AB+', 'AB-','O+', 'O-']\n\n\n  marital_status: string;\n  marital_status_list: any = ['Married', 'Unmarried', 'Widowed','Divorced', 'Separated']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n  'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n  'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n  'Goa','Gujarat','Haryana','Himachal Pradesh',\n  'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n  'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n  'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n  'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n  'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n  ]\n  // maxDate =  new Date(new Date().setDate(new Date().getDate()-1))\n\n\n  selectFile(event) {\n    const profile_pic = (event.target as HTMLInputElement).files[0];\n    console.log(profile_pic);\n    this.registrationForm.get('profile_photo').patchValue(profile_pic);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n \n\n\n  changeBloodGroup(e) {\n    console.log(e.target.value);\n    console.log(new Date(this.registrationForm.value.dob))\n    // console.log(this.maxDate)\n  }\n  changeMaritalStatus(e) {\n    console.log(e.target.value);\n  }\n  changeAddressState(e) {\n    console.log(e.target.value);\n  }\n\n\n    constructor(public fb:FormBuilder,private auth:AuthenticationAdminService,private router:Router) {}\n\n    registrationForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required,Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n      father_name:['', Validators.required],\n      mother_name:['', Validators.required],\n      age:['',[Validators.required,Validators.min(0),Validators.max(110)]],\n      contact_number:['',Validators.required],\n      emergency_contact_number:['',Validators.required],\n      gender:['',Validators.required],\n      profile_photo:['',Validators.required],\n      blood_group:['',Validators.required],\n      dob:['',[Validators.required, this.DateValidator]],\n      marital_status:['',Validators.required],\n      aadhar_number:['',[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\n      street:['',Validators.required],\n      city:['',Validators.required],\n      state:['',Validators.required],\n      pincode:['',Validators.required],\n      landmark:['',Validators.required]\n     });\n\n  DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n    \n    onSubmit(){\n      this.NewUsercredentials = this.registrationForm.value;\n      this.auth.AddUser(this.NewUsercredentials).subscribe(\n        () =>{\n          this.router.navigateByUrl('/admin/dashboard')\n          console.log(this.NewUsercredentials)\n\n        },\n        err =>{\n          console.error(err);\n          console.log(this.NewUsercredentials)\n          \n        }\n      )\n    }\n\n   \n  }","<!-- <head><script type=\"text/javascript\">\n  function checkDOB() {\n      var dateString = document.getElementById('dateofbirth').value;\n      var myDate = new Date(dateString);\n      var today = new Date();\n      if ( myDate > today ) { \n          $('#dateofbirth').after('<p>You cannot enter a date in the future!.</p>');\n          return false;\n      }\n      return true;\n  }\n</script>\n</head> -->\n\n<!-- <body> -->\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New User</h1>    \n           <hr>\n          <h3 class=\"h4 mb-3 font-weight-normal\">Basic Information</h3>\n           <!-- First Name -->\n           \n            <div class=\"form-group\">\n              <label for=\"name\">First Name</label>\n              <input type=\"text\" class=\"form-control\" minlength=\"2\" \n              maxlength=\"20\"\n              formControlName=\"first_name\" [class.is-invalid]=\"registrationForm.get('first_name').invalid && registrationForm.get('first_name').touched\" placeholder=\"Enter your first name\" >\n                <small [class.d-none]=\"registrationForm.get('first_name').valid || registrationForm.get('first_name').untouched\" class=\"text-danger\"> First Name is required </small>\n            </div>\n\n            <!-- Last Name -->\n            <div class=\"form-group\">\n                <label for=\"name\">Last Name</label>\n                <input type=\"text\"  minlength=\"2\" \n                maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('last_name').invalid &&\n                                  registrationForm.get('last_name').touched\" class=\"form-control\"\n                                    formControlName=\"last_name\"\n                                    placeholder=\"Enter your last name\" >\n\n                <small [class.d-none]=\"registrationForm.get('last_name').valid ||\n                                        registrationForm.get('last_name').untouched\"\n                                        class=\"text-danger\"> Last Name is required </small>\n              </div>\n\n               <!-- AADHAR CARD NUMBER -->\n              \n              <div class=\"form-group\">\n                <label for=\"aadhar_number\">AADHAR Number</label>\n                <input type=\"text\"  minlength=\"12\" maxlength=\"12\" [class.is-invalid]=\"registrationForm.get('aadhar_number').invalid &&\n                                  registrationForm.get('aadhar_number').touched\" class=\"form-control\"\n                                    formControlName=\"aadhar_number\"\n                                    placeholder=\"Enter your 12 digit AADHAR Number\" >\n\n                <small [class.d-none]=\"registrationForm.get('aadhar_number').valid ||\n                                        registrationForm.get('aadhar_number').untouched\"\n                                        class=\"text-danger\"> 12 digit AADHAR Number is required </small>\n              </div>\n\n\n\n      \n                <!-- EMAIL -->\n              <div class=\"form-group\">\n                <label for=\"email\">Email address</label>\n                <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n                registrationForm.get('email').touched\" class=\"form-control\"\n                formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n                <small [class.d-none]=\"registrationForm.get('email').valid ||\n                registrationForm.get('email').untouched\"\n                class=\"text-danger\"> Email is required </small>\n              </div>\n\n               <!-- Password -->\n               <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\"  minlength=\"8\" \n                maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n                registrationForm.get('password').touched\"\n                class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n                <small [class.d-none]=\"registrationForm.get('password').valid ||\n                registrationForm.get('password').untouched\"\n                class=\"text-danger\"> Password is required </small>\n              </div>\n\n              <!-- PROFILE PHOTO -->\n              <div class=\"form-group\">\n                <label for=\"profile_photo\">Profile Photo</label>\n                <input type=\"file\" class=\"form-control-file\"\n                  [class.is-invalid]=\"registrationForm.get('profile_photo').invalid &&\n                registrationForm.get('profile_photo').touched\" (change)=\"selectFile($event)\" accept=\"image/*\"> \n\n                <small [class.d-none]=\"registrationForm.get('profile_photo').valid ||\n                registrationForm.get('profile_photo').untouched\"\n                class=\"text-danger\"> Profile Photo is required </small>\n              </div>\n\n            <!-- GENDER -->\n              <div class=\"form-group\" [class.is-invalid]=\"registrationForm.get('gender').invalid &&\n              registrationForm.get('gender').touched\" >    \n                <label for=\"Gender\">Gender</label>\n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Male\">Male</label>\n                </div>\n                  \n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Female\">Female</label>\n                </div>   \n                <small [class.d-none]=\"registrationForm.get('gender').valid ||\n                registrationForm.get('gender').untouched\"\n                class=\"text-danger\"> Gender is required </small>\n              </div>\n\n              <!-- Age -->\n              <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input type=\"number\" \n                 \n                [class.is-invalid]=\"registrationForm.get('age').invalid &&\n                registrationForm.get('age').touched\" \n                class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\n\n                <small [class.d-none]=\"registrationForm.get('age').valid ||\n                registrationForm.get('age').untouched\"\n                class=\"text-danger\"> Age is required </small>\n\n              </div>\n\n              <!-- Date of Birth -->\n              <div class=\"form-group\">\n                <label for=\"dob\">Date of Birth</label>\n                <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\n                  registrationForm.get('dob').touched\" \n                   class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\n                    <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\n                    registrationForm.get('dob').untouched\">Date should not be greater than today</small>\n                   <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\n                registrationForm.get('dob').untouched\"\n                class=\"text-danger\"> Date of birth is required </small>\n\n              </div>\n\n\n              <!-- Marital Status -->\n               <div class=\"form-group\">\n                <label for=\"marital_status\">Marital Status</label>\n                <select formControlName=\"marital_status\"  [class.is-invalid]=\"registrationForm.get('marital_status').invalid &&\n                registrationForm.get('marital_status').touched\"\n                class=\"form-control\" (change)=\"changeMaritalStatus($event)\">\n                    <option disabled>Select Marital Status</option>\n                    <option *ngFor=\"let maritalstatus of marital_status_list\">{{maritalstatus}}</option>\n                </select>\n\n                <small [class.d-none]=\"registrationForm.get('marital_status').valid ||\n                registrationForm.get('marital_status').untouched\"\n                class=\"text-danger\"> Marital Status is required </small>\n              </div>\n\n              <!-- Blood Group -->\n              <div class=\"form-group\">\n                <label for=\"blood_group\">Blood Group</label>\n                <select formControlName=\"blood_group\"  [class.is-invalid]=\"registrationForm.get('blood_group').invalid &&\n                registrationForm.get('blood_group').touched\"\n                class=\"form-control\" (change)=\"changeBloodGroup($event)\">\n                    <option disabled>Select Blood Group</option>\n                    <option *ngFor=\"let bloodGroup of blood_group_list\">{{bloodGroup}}</option>\n                </select>\n\n                <small [class.d-none]=\"registrationForm.get('blood_group').valid ||\n                registrationForm.get('blood_group').untouched\"\n                class=\"text-danger\"> Blood Group is required </small>\n              </div>\n\n\n              <!-- ADDRESS -->\n              <h3 class=\"h4 mb-3 font-weight-normal\">Permanent Address</h3>\n                <!-- ADDRESS STREET -->\n            \n              <div class=\"form-group\">\n                <label for=\"street\">Street</label>\n                <input type=\"text\"  minlength=\"5\" \n                maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                  registrationForm.get('street').touched\" class=\"form-control\"\n                                    formControlName=\"street\"\n                                    placeholder=\"Enter your street\" >\n                <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                        registrationForm.get('street').untouched\"\n                                        class=\"text-danger\"> Street is required </small>\n              </div>\n\n\n              \n                <!-- ADDRESS CITY -->\n\n              <div class=\"form-group\">\n                <label for=\"city\">City</label>\n                <input type=\"text\"  minlength=\"2\" \n                maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                  registrationForm.get('city').touched\" class=\"form-control\"\n                                    formControlName=\"city\"\n                                    placeholder=\"Enter your city\" >\n                <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                        registrationForm.get('city').untouched\"\n                                        class=\"text-danger\"> City is required </small>\n              </div>\n\n              <!-- ADDRESS LANDMARK -->\n\n            <div class=\"form-group\">\n              <label for=\"landmark\">Landmark</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                                registrationForm.get('landmark').touched\" class=\"form-control\"\n                                  formControlName=\"landmark\"\n                                  placeholder=\"Enter your landmark\" >\n              <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                      registrationForm.get('landmark').untouched\"\n                                      class=\"text-danger\"> Landmark is required </small>\n            </div>\n\n            <!-- ADDRESS STATE -->\n            <div class=\"form-group\">\n              <label for=\"state\">State</label>\n              <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n              registrationForm.get('state').touched\"\n              class=\"form-control\" (change)=\"changeAddressState($event)\">\n                  <option disabled>Select State</option>\n                  <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n              </select>\n\n              <small [class.d-none]=\"registrationForm.get('state').valid ||\n              registrationForm.get('state').untouched\"\n              class=\"text-danger\"> State is required </small>\n            </div>\n\n              \n                <!-- ADDRESS PINCODE -->\n            \n              <div class=\"form-group\">\n                <label for=\"pincode\">Pincode</label>\n                <input type=\"number\"  minlength=\"6\" \n                maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                  registrationForm.get('pincode').touched\" class=\"form-control\"\n                                    formControlName=\"pincode\"\n                                    placeholder=\"Enter your last name\" >\n                <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                        registrationForm.get('pincode').untouched\"\n                                        class=\"text-danger\"> Pincode is required </small>\n              </div>\n\n              \n                \n\n                \n              <!-- Father Name -->\n            \n              <div class=\"form-group\">\n                <label for=\"father_name\">Fathers Name</label>\n                <input type=\"text\" minlength=\"2\" \n                maxlength=\"32\" [class.is-invalid]=\"registrationForm.get('father_name').invalid &&\n                registrationForm.get('father_name').touched\"\n                class=\"form-control\" placeholder=\"Enter Father's Name\" formControlName=\"father_name\">\n                \n                <small [class.d-none]=\"registrationForm.get('father_name').valid ||\n                registrationForm.get('father_name').untouched\"\n                class=\"text-danger\"> Father Name is required </small>\n              </div>\n\n\n              <!-- Mothers Name -->\n              <div class=\"form-group\">\n                <label for=\"mother_name\">Mothers Name</label>\n                <input type=\"text\" minlength=\"2\" \n                maxlength=\"32\" [class.is-invalid]=\"registrationForm.get('mother_name').invalid &&\n                registrationForm.get('mother_name').touched\"\n                class=\"form-control\" placeholder=\"Enter Mother's Name\" formControlName=\"mother_name\">\n\n                <small [class.d-none]=\"registrationForm.get('mother_name').valid ||\n                registrationForm.get('mother_name').untouched\"\n                class=\"text-danger\"> Mother Name is required </small>\n              </div>\n\n            \n              <!-- Contact number -->\n              <div class=\"form-group\">\n                <label for=\"contact_number\">Contact Number</label>\n                <input type=\"number\"   minlength=\"10\" \n                maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n                registrationForm.get('contact_number').touched\"\n                 class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n                 <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n                registrationForm.get('contact_number').untouched\"\n                class=\"text-danger\"> Contact Number is required </small>\n              </div>\n\n\n              <!-- Emergency Contact Number -->\n              <div class=\"form-group\">\n                <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n                <input type=\"number\"  minlength=\"10\" \n                maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n                registrationForm.get('emergency_contact_number').touched\"\n                 class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n                <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n                registrationForm.get('emergency_contact_number').untouched\"\n                class=\"text-danger\"> Emergency Contact Number is required </small>\n              </div>\n              \n\n              <!-- <div class=\"form-group form-check\">\n                <input type=\"checkbox\" class=\"form-check-input\">\n                <label class=\"form-check-label\" for=\"exampleCheck1\">I hereby declare that the above furnished details are true to the best of my knowledge</label>\n              </div> -->\n          \n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add User</button>\n      </form>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-case-details',\n  templateUrl: './user-case-details.component.html',\n  styleUrls: ['./user-case-details.component.css']\n})\nexport class UserCaseDetailsComponent implements OnInit {\n\n  case_id:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('case_id')) {\n        this.case_id = parameter.get('case_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.case_id}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-case-list',\n  templateUrl: './user-case-list.component.html',\n  styleUrls: ['./user-case-list.component.css']\n})\nexport class UserCaseListComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  user_id:string\n  // case_name:any\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n\n   ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.user_id}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n}\n","<div class=\"container\">\n    <br>\n    <h3>User Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/admin/user/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {UserDetails} from './user-details'\nimport {HttpClient} from '@angular/common/http'\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit{\n  user_id: string;\n  userDetails: any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        console.log(this.user_id);\n      }\n    })\n   }\n\n  ngOnInit(){\n    this.getUserDetails();\n  }\n\n  getUserDetails(){\n    this.httpClient.get<UserDetails>(`http://127.0.0.1:5000/api/user/${this.user_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.userDetails = response;\n      console.log(typeof this.userDetails.dob)\n    })\n    console.log(this.userDetails);\n  }\n\n  ViewCases(){\n\n    this.router.navigateByUrl(`user/profile/case-list/${this.user_id}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n<div class=\"container\">\n        <h2>User Details</h2>\n        \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>View Cases</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <img src={{userDetails.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n        </div>\n\n        <table class=\"table table-dark\">\n          \n            <tr>\n              <th>Unique ID</th>\n                <td>{{userDetails.user_id}}</td>\n            </tr>\n            <tr>\n              <th>First Name</th>\n                <td>{{userDetails.first_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Last Name</th>\n                <td>{{userDetails.last_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Father Name</th>\n                <td>{{userDetails.father_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Mother Name</th>\n                <td>{{userDetails.mother_name}}</td>\n            </tr>\n              \n            <tr>\n              <th>Age</th>\n                <td>{{userDetails.age}}</td>\n            </tr>\n\n            <tr>\n              <th>Gender</th>\n                <td>{{userDetails.gender}}</td>\n            </tr>\n\n            <tr>\n              <th>Contact Number</th>\n                <td>{{userDetails.contact_number}}</td>\n            </tr>\n\n            <tr>\n              <th>Emergency Contact Number</th>\n                <td>{{userDetails.emergency_contact_number}}</td>\n            </tr>\n\n            <tr>\n              <th>Email Address</th>\n                <td>{{userDetails.email}}</td>\n            </tr>\n       \n            <tr>\n              <th>Date of Birth</th>\n                <td>{{userDetails.dob | date}}</td>\n            </tr>\n       \n        </table>\n     \n     \n     \n </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n \n  users;\n  searchText= this.users\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get('http://127.0.0.1:5000/api/users/').subscribe(users => (this.users = users))\n    console.log(this.users)\n\n   \n  }\n\n  NewUser(){\n    this.route.navigateByUrl('/admin/user/add-user')\n  }\n    \n}\n\n\n\n\n  \n\n\n \n//   }\n//   getUsers():void{\n//     this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => (this.users = users as JSON))\n\n//   }\n//   add(name:string):void{\n//     this.editUser = undefined\n//     name = name.trim()\n//     if(!name){\n//       return\n//     }\n//     const newUser: User = {name} as User\n//     this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(() => this.getUsers())\n//   }\n\n//   delete(user: User):void{\n//     //  this.users =this.users.filter(h => h !== user)\n//     this.httpClient.get('http://127.0.0.1:5000/api/user')\n//     .subscribe(() => console.log('User Deleted'))\n\n//   }\n//   edit(user){\n//     this.editUser = user\n\n//   }\n//   update(){\n//     if(this.editUser){\n//       this.httpClient.get('http://127.0.0.1:5000/userss').subscribe(() => {\n//         this.getUsers()\n//       })\n//       this.editUser = undefined\n//     }\n//   }\n\n// }\n  \n\n  \n\n\n\n \n","<div class=\"container\">\n    <h2>List of Users</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewUser()\">New User</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any users by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let user of users | filter:searchText\">\n         <td [routerLink]=\"['/admin/user/details/',user._id]\"> {{user.first_name}} {{user.last_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component } from '@angular/core';\nimport { AuthenticationAdminService, AdminTokenPayload } from './authentication-admin.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent {\n\n  error: string;\n  credentials: AdminTokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email:'',\n    password: '',\n    gender: '',\n    age: ''\n  }\n  constructor(private auth: AuthenticationAdminService, private route:Router) { }\n  login(){\n    this.auth.login(this.credentials).subscribe(response =>{\n\n    if(response.token){\n      // this.auth.loginData(response);\n      this.route.navigateByUrl('/admin/dashboard')\n    }\n    else{\n      this.error = response.result;\n    }\n    // err =>\n      // console.error(err)\n  })\n}\n}\n    \n\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n      <form (submit)=\"login()\">\n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">ADMIN LOGIN</h1>\n        <div class=\"form-group\">\n          <label for=\"email\">Email Address</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n        </div>\n        <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationAdminService } from './authentication-admin.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardAdminService implements CanActivate {\r\n  constructor(private authAdmin: AuthenticationAdminService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authAdmin.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of, EMPTY } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { Router } from '@angular/router'\r\nimport { NewUserDetails } from '../admin-dashboard/users-list/add-new-user/new-user-details'\r\n\r\nexport interface AdminDetails {\r\n  _id: string\r\n  identity: {\r\n    first_name: string,\r\n    last_name: string,\r\n    email: string\r\n  }\r\n  password: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface AdminTokenResponse {\r\n  token: string\r\n}\r\n\r\nexport interface AdminTokenPayload {\r\n  _id: string\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  password: string\r\n  gender: string\r\n  age: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationAdminService {\r\n  private token: string\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('admintoken', token)\r\n    this.token = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('admintoken')\r\n    }\r\n    return this.token\r\n  }\r\n\r\n  public getAdminDetails(): AdminDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if (token) {\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      return JSON.parse(payload)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getAdminDetails()\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  public AddUser(user: NewUserDetails): Observable<any> {\r\n    const formData = new FormData;\r\n    for (const [key, value] of Object.entries(user)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n    // return EMPTY\r\n    return this.httpClient.post(`http://127.0.0.1:5000/api/register`, formData)\r\n  }\r\n  \r\n\r\n  public login(user: AdminTokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/login`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: AdminTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = ''\r\n    window.localStorage.removeItem('admintoken')\r\n    this.router.navigateByUrl('')\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './login/login.component'\nimport { RegisterComponent } from './register/register.component'\nimport { HomeComponent } from './home/home.component'\nimport { ProfileComponent } from './user/profile/profile.component';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AuthGuardAdminService } from '../app/admin/admin-login/auth-guard-admin.service'\nimport { UserDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-details.component';\nimport { DoctorsListComponent } from './admin/admin-dashboard/doctors-list/doctors-list.component';\nimport { AddDoctorComponent } from './admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component';\nimport { UsersListComponent } from './admin/admin-dashboard/users-list/users-list.component';\nimport { AddNewUserComponent } from './admin/admin-dashboard/users-list/add-new-user/add-new-user.component';\nimport { ClinicListComponent } from './admin/admin-dashboard/clinic-list/clinic-list.component';\nimport { AddClinicComponent } from './admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component';\nimport { AddHospitalComponent } from './admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component';\nimport { HospitalListComponent } from './admin/admin-dashboard/hospital-list/hospital-list.component';\nimport { LaboratoryListComponent } from './admin/admin-dashboard/laboratory-list/laboratory-list.component';\nimport { AddLaboratoryComponent } from './admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component';\nimport { MedicalStoreListComponent } from './admin/admin-dashboard/medical-store-list/medical-store-list.component';\nimport { AddMedicalStoreComponent } from './admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DoctorLoginComponent } from './doctor/doctor-login/doctor-login.component';\nimport { DoctorDashboardComponent } from './doctor/doctor-dashboard/doctor-dashboard.component';\nimport { AuthGuardDoctorService } from './doctor/doctor-login/auth-guard-doctor.service';\nimport { AuthGuardHospitalService } from './hospital/hospital-login/auth-guard-hospital.service';\nimport { HospitalLoginComponent } from './hospital/hospital-login/hospital-login.component';\nimport { HospitalDashboardComponent } from './hospital/hospital-dashboard/hospital-dashboard.component';\nimport { HospitalPatientDetailsComponent } from './hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component';\nimport { HospitalNewCaseComponent } from './hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component';\nimport { HospitalViewCasesComponent } from './hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component';\nimport { HospitalNewPatientComponent } from './hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component';\nimport { ClinicDetailsComponent } from './admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component';\nimport { HospitalDetailsComponent } from './admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component';\nimport { LaboratoryDetailsComponent } from './admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component';\nimport { DoctorDetailsComponent } from './admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component';\nimport { MedicalStoreDetailsComponent } from './admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component';\nimport { DoctorNewCaseComponent } from './doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component';\nimport { DoctorCaseDetailsComponent } from './doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component';\nimport { DoctorPatientDetailsComponent } from './doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component';\nimport { DoctorViewCasesComponent } from './doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component';\nimport { HospitalCaseDetailsComponent } from './hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component';\nimport { ClinicLoginComponent } from './clinic/clinic-login/clinic-login.component';\nimport { AuthGuardClinicService } from './clinic/clinic-login/auth-guard-clinic.service';\nimport { ClinicNewPatientComponent } from './clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component';\nimport { ClinicDashboardComponent } from './clinic/clinic-dashboard/clinic-dashboard.component';\nimport { ClinicPatientDetailsComponent } from './clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component';\nimport { ClinicNewCaseComponent } from './clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component';\nimport { ClinicViewCasesComponent } from './clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component';\nimport { ClinicCaseDetailsComponent } from './clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component';\nimport { LaboratoryLoginComponent } from './laboratory/laboratory-login/laboratory-login.component';\nimport { LaboratoryDashboardComponent } from './laboratory/laboratory-dashboard/laboratory-dashboard.component';\nimport { AuthGuardLaboratoryService } from './laboratory/laboratory-login/auth-guard-laboratory.service';\nimport { DoctorNewPatientComponent } from './doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component';\nimport { MedicalstoreLoginComponent } from './medicalstore/medicalstore-login/medicalstore-login.component';\nimport { MedicalstoreDashboardComponent } from './medicalstore/medicalstore-dashboard/medicalstore-dashboard.component';\nimport { AuthGuardMedicalStoreService } from './medicalstore/medicalstore-login/auth-guard-medicalstoreservice';\nimport { UserCaseListComponent } from './admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component';\nimport { UserCaseDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component';\nimport { UserProfileCaseListComponent } from './user/profile/user-profile-case-list/user-profile-case-list.component';\nimport { UserProfileCaseDetailsComponent } from './user/profile/user-profile-case-details/user-profile-case-details.component';\nimport { MedicalNewPatientComponent } from './medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component';\nimport { LaboratoryNewPatientComponent } from './laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component';\nimport { LaboratoryViewAndUpdateCaseDetailsComponent } from './laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component';\nimport { LaboratoryViewCasesComponent } from './laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component';\nimport { MedicalViewCasesComponent } from './medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component';\nimport { MedicalViewAndUpdateCaseDetailsComponent } from './medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'user', component: UserComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'user/profile', component:  ProfileComponent,canActivate:[AuthGuardService] },\n  { path: 'user/profile/case-list/:user_id', component: UserProfileCaseListComponent },\n  { path: 'user/profile/case-list/caste-details/:case_id', component: UserProfileCaseDetailsComponent },\n\n\n\n  // ADMIN\n  { path: 'admin/login', component: AdminLoginComponent},\n  { path: 'admin/dashboard', component: AdminDashboardComponent,canActivate:[AuthGuardAdminService] },\n  \n  //ADMIN USER Thing\n  { path: 'admin/user/users-list', component: UsersListComponent },\n  { path: 'admin/user/add-user', component: AddNewUserComponent },\n  { path: 'admin/user/details/:user_id',component: UserDetailsComponent },\n  { path: 'admin/user/case-list/:user_id',component: UserCaseListComponent },\n  { path: 'admin/user/case-details/:case_id',component:  UserCaseDetailsComponent},\n\n\n  // Admin CLINIC \n  { path: 'admin/clinic/clinic-list', component: ClinicListComponent },\n  { path: 'admin/clinic/add-clinic', component: AddClinicComponent },\n  { path: 'admin/clinic/details/:clinic_id',component:ClinicDetailsComponent},\n  \n\n  //ADMIN HOSPITAL\n  { path: 'admin/hospital/hospital-list', component: HospitalListComponent },\n  { path: 'admin/hospital/add-hospital', component: AddHospitalComponent},\n  { path: 'admin/hospital/details/:hospital_id', component: HospitalDetailsComponent},\n\n  //ADMIN LABORATORY\n  { path: 'admin/laboratory/laboratory-list', component: LaboratoryListComponent},\n  { path: 'admin/laboratory/add-laboratory', component: AddLaboratoryComponent},\n  { path: 'admin/laboratory/details/:laboratory_id', component: LaboratoryDetailsComponent},\n\n  //ADMIN MEDICAL\n  { path: 'admin/medical/medical-store-list', component: MedicalStoreListComponent},\n  { path: 'admin/medical/add-medical', component: AddMedicalStoreComponent},\n  { path: 'admin/medical/details/:medical_id', component: MedicalStoreDetailsComponent},\n\n  //ADMIN DOCTOR\n  { path: 'admin/doctor/doctor-list', component: DoctorsListComponent},\n  { path: 'admin/doctor/add-doctor', component: AddDoctorComponent},\n  { path: 'admin/doctor/details/:doctor_id', component: DoctorDetailsComponent},\n\n\n\n  \n  { path: 'upload', component: UploadComponent},\n\n\n  // DOCTOR USER Department\n  { path: 'doctor/login', component: DoctorLoginComponent},\n  { path: 'doctor/dashboard', component: DoctorDashboardComponent,canActivate:[AuthGuardDoctorService]},  \n  { path: 'doctor/new-patient', component: DoctorNewPatientComponent},\n  { path: 'doctor/patient-details/:patientID', component: DoctorPatientDetailsComponent},\n  { path: 'doctor/patient-details/new-case/:patientID', component: DoctorNewCaseComponent},\n  { path: 'doctor/patient-details/view-cases/:patientID', component: DoctorViewCasesComponent},\n  { path: 'doctor/patient-details/case-details/:caseID', component: DoctorCaseDetailsComponent},\n\n\n  //HOSPITAL USER DEPARTMENT\n  { path: 'hospital/login', component: HospitalLoginComponent},\n  { path: 'hospital/dashboard', component: HospitalDashboardComponent,canActivate:[AuthGuardHospitalService]},  \n  { path: 'hospital/new-patient', component: HospitalNewPatientComponent},   \n  { path: 'hospital/patient-details/:patientID', component: HospitalPatientDetailsComponent},  \n  { path: 'hospital/patient-details/new-case/:patientID', component: HospitalNewCaseComponent},  \n  { path: 'hospital/patient-details/view-cases/:patientID', component: HospitalViewCasesComponent},  \n  { path: 'hospital/patient-details/case-details/:caseID', component: HospitalCaseDetailsComponent},\n\n  //CLINIC USER DEPARTMENT\n  { path: 'clinic/login', component: ClinicLoginComponent},\n  { path: 'clinic/dashboard', component: ClinicDashboardComponent,canActivate:[AuthGuardClinicService]},  \n  { path: 'clinic/new-patient', component: ClinicNewPatientComponent},   \n  { path: 'clinic/patient-details/:patientID', component: ClinicPatientDetailsComponent},  \n  { path: 'clinic/patient-details/new-case/:patientID', component: ClinicNewCaseComponent},  \n  { path: 'clinic/patient-details/view-cases/:patientID', component: ClinicViewCasesComponent},  \n  { path: 'clinic/patient-details/case-details/:caseID', component: ClinicCaseDetailsComponent},\n\n  //LABORATORY USER DEPARTMENT\n  { path: 'laboratory/login', component: LaboratoryLoginComponent},\n  { path: 'laboratory/dashboard', component: LaboratoryDashboardComponent,canActivate:[AuthGuardLaboratoryService]},  \n  { path: 'laboratory/new-patient', component: LaboratoryNewPatientComponent},   \n  { path: 'laboratory/patient-details/case-details/:caseID', component: LaboratoryViewAndUpdateCaseDetailsComponent},  \n  { path: 'laboratory/patient-details/:patientID', component: LaboratoryViewCasesComponent},  \n\n  \n  //MEDICAL USER DEPARTMENT\n  { path: 'medical/login', component: MedicalstoreLoginComponent},\n  { path: 'medical/dashboard', component: MedicalstoreDashboardComponent,canActivate:[AuthGuardMedicalStoreService]},\n  { path: 'medical/new-patient',component:MedicalNewPatientComponent }  ,\n  { path: 'medical/patient-details/case-details/:caseID',component: MedicalViewAndUpdateCaseDetailsComponent },  \n  { path: 'medical/patient-details/:patientID',component:MedicalViewCasesComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthenticationAdminService } from './admin/admin-login/authentication-admin.service';\nimport { AuthenticationDoctorService } from './doctor/doctor-login/authentication-doctor.service';\nimport { AuthenticationHospitalService } from './hospital/hospital-login/authentication-hospital.service';\nimport { AuthenticationLaboratoryService } from './laboratory/laboratory-login/authentication-Laboratory.service';\nimport { AuthenticationMedicalStoreService } from './medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { AuthenticationClinicService } from './clinic/clinic-login/authentication-clinic.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Health Card';\n  public isMenuCollapsed = true;\n  \n  constructor(public authUser: AuthenticationService, \n              public authAdmin : AuthenticationAdminService, \n              public authDoctor : AuthenticationDoctorService,\n              public authHospital : AuthenticationHospitalService,\n              public authLaboratory : AuthenticationLaboratoryService,\n              public authMedical : AuthenticationMedicalStoreService,\n              public authClinic : AuthenticationClinicService,\n               ){}\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n\n  <a class=\"navbar-brand\" href=\"\">\n    <img src=\"assets/logo.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n    Health Card\n  </a>\n  \n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"authUser.isLoggedIn()\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n      </li>\n    </ul>\n      <ul class=\"navbar-nav\">\n        <!-- <a *ngIf=\"!auth.isLoggedIn() && !authAdmin.isLoggedIn()\" class=\"nav-link\" routerLink=\"/login\" >Login</a> -->\n        <a *ngIf=\"authAdmin.isLoggedIn() && \n                  !authUser.isLoggedIn() && \n                  !authAdmin.isLoggedIn() &&\n                  !authMedical.isLoggedIn() &&\n                  !authLaboratory.isLoggedIn() &&\n                  !authHospital.isLoggedIn()\" \n                  class=\"nav-link\" routerLink=\"/admin/dashboard\">Dashboard</a>\n        <!-- <a *ngIf=\"!auth.isLoggedIn()\" class=\"nav-link\" routerLink=\"/admin-login\" >Admin Login</a> -->\n        <!-- <a *ngIf=\"!auth.isLoggedIn()\" class=\"nav-link\" routerLink=\"/register\">Register</a> -->\n        <!-- <a *ngIf=\"auth.isLoggedIn()-\" class=\"nav-link\" routerLink=\"/user\">Users List</a> -->\n        <a *ngIf=\"authUser.isLoggedIn()\" class=\"nav-link\" routerLink=\"/profile\" >Welcome {{ authUser.getUserDetails()?.identity.first_name }}</a>\n        <a *ngIf=\"authUser.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authUser.logout()\">Logout</a>\n        <a *ngIf=\"authAdmin.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authAdmin.logout()\">Logout Admin</a>\n        <a *ngIf=\"authDoctor.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authDoctor.logout()\">Logout</a>\n        <a *ngIf=\"authHospital.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authHospital.logout()\">Logout</a>\n        <a *ngIf=\"authClinic.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authClinic.logout()\">Logout</a>\n        <a *ngIf=\"authLaboratory.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authLaboratory.logout()\">Logout</a>\n        <a *ngIf=\"authMedical.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authMedical.logout()\">Logout</a>\n        </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AuthGuardAdminService } from './admin/admin-login/auth-guard-admin.service';\nimport { AuthenticationAdminService } from './admin/admin-login/authentication-admin.service';\nimport { DoctorsListComponent } from './admin/admin-dashboard/doctors-list/doctors-list.component';\nimport { AddDoctorComponent } from './admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component';\nimport { UserDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-details.component';\nimport { AddNewUserComponent } from './admin/admin-dashboard/users-list/add-new-user/add-new-user.component';\nimport { UsersListComponent } from './admin/admin-dashboard/users-list/users-list.component';\nimport { HospitalListComponent } from './admin/admin-dashboard/hospital-list/hospital-list.component';\nimport { ClinicListComponent } from './admin/admin-dashboard/clinic-list/clinic-list.component';\nimport { MedicalStoreListComponent } from './admin/admin-dashboard/medical-store-list/medical-store-list.component';\nimport { LaboratoryListComponent } from './admin/admin-dashboard/laboratory-list/laboratory-list.component';\nimport { AddClinicComponent } from './admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component';\nimport { AddHospitalComponent } from './admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component';\nimport { AddLaboratoryComponent } from './admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component';\nimport { AddMedicalStoreComponent } from './admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { UploadComponent } from './upload/upload.component';\nimport { DoctorDashboardComponent } from './doctor/doctor-dashboard/doctor-dashboard.component';\nimport { DoctorLoginComponent } from './doctor/doctor-login/doctor-login.component';\nimport { DoctorPatientDetailsComponent } from './doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component';\nimport { DoctorViewCasesComponent } from './doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component';\nimport { AuthGuardDoctorService } from './doctor/doctor-login/auth-guard-doctor.service';\nimport { AuthenticationDoctorService } from './doctor/doctor-login/authentication-doctor.service';\nimport { HospitalDashboardComponent } from './hospital/hospital-dashboard/hospital-dashboard.component';\nimport { HospitalLoginComponent } from './hospital/hospital-login/hospital-login.component';\nimport { AuthenticationHospitalService } from './hospital/hospital-login/authentication-hospital.service';\nimport { AuthGuardHospitalService } from './hospital/hospital-login/auth-guard-hospital.service';\nimport { HospitalViewCasesComponent } from './hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component';\nimport { HospitalNewCaseComponent } from './hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component';\nimport { HospitalNewPatientComponent } from './hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component';\nimport { LaboratoryDashboardComponent } from './laboratory/laboratory-dashboard/laboratory-dashboard.component';\nimport { LaboratoryLoginComponent } from './laboratory/laboratory-login/laboratory-login.component';\nimport { ClinicDashboardComponent } from './clinic/clinic-dashboard/clinic-dashboard.component';\nimport { ClinicLoginComponent } from './clinic/clinic-login/clinic-login.component';\nimport { ClinicDetailsComponent } from './admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component';\nimport { AuthGuardClinicService } from './clinic/clinic-login/auth-guard-clinic.service';\nimport { AuthenticationClinicService } from './clinic/clinic-login/authentication-clinic.service';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { DoctorDetailsComponent } from './admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component';\nimport { HospitalDetailsComponent } from './admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component';\nimport { LaboratoryDetailsComponent } from './admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component';\nimport { MedicalStoreDetailsComponent } from './admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component';\nimport { MedicalstoreLoginComponent } from './medicalstore/medicalstore-login/medicalstore-login.component';\nimport { MedicalstoreDashboardComponent } from './medicalstore/medicalstore-dashboard/medicalstore-dashboard.component';\nimport { ClinicNewCaseComponent } from './clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component';\nimport { ClinicCaseDetailsComponent } from './clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component';\nimport { ClinicViewCasesComponent } from './clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component';\nimport { ClinicNewPatientComponent } from './clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component';\nimport { ClinicPatientDetailsComponent } from './clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component';\nimport { DoctorCaseDetailsComponent } from './doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component';\nimport { DoctorNewCaseComponent } from './doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component';\nimport { AuthGuardLaboratoryService } from './laboratory/laboratory-login/auth-guard-laboratory.service';\nimport { AuthenticationLaboratoryService } from './laboratory/laboratory-login/authentication-Laboratory.service';\nimport { AuthGuardMedicalStoreService } from './medicalstore/medicalstore-login/auth-guard-medicalstoreservice';\nimport { AuthenticationMedicalStoreService } from './medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { HospitalCaseDetailsComponent } from './hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component';\nimport { DoctorNewPatientComponent } from './doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component';\nimport { UserCaseListComponent } from './admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component';\nimport { UserCaseDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component';\nimport { ProfileComponent } from './user/profile/profile.component';\nimport { UserProfileCaseDetailsComponent } from './user/profile/user-profile-case-details/user-profile-case-details.component';\nimport { UserProfileCaseListComponent } from './user/profile/user-profile-case-list/user-profile-case-list.component';\nimport { MedicalNewPatientComponent } from './medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component';\nimport { LaboratoryNewPatientComponent } from './laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component';\nimport { LaboratoryViewCasesComponent } from './laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component';\nimport { LaboratoryViewAndUpdateCaseDetailsComponent } from './laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component';\nimport { MedicalViewAndUpdateCaseDetailsComponent } from './medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component';\nimport { MedicalViewCasesComponent } from './medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AdminLoginComponent,\n    DoctorsListComponent,\n    AddDoctorComponent,\n    UserDetailsComponent,\n    AddNewUserComponent,\n    UsersListComponent,\n    HospitalListComponent,\n    ClinicListComponent,\n    MedicalStoreListComponent,\n    LaboratoryListComponent,\n    AddClinicComponent,\n    AddHospitalComponent,\n    AddLaboratoryComponent,\n    AddMedicalStoreComponent,\n    UploadComponent,\n    DoctorDashboardComponent,\n    DoctorLoginComponent,\n    HospitalDashboardComponent,\n    HospitalLoginComponent,\n    HospitalViewCasesComponent,\n    HospitalNewCaseComponent,\n    HospitalNewPatientComponent,\n    LaboratoryDashboardComponent,\n    LaboratoryLoginComponent,\n    ClinicNewCaseComponent,\n    ClinicCaseDetailsComponent,\n    ClinicDashboardComponent,\n    ClinicLoginComponent,\n    ClinicViewCasesComponent,\n    ClinicDetailsComponent,\n    ClinicViewCasesComponent,\n    ClinicCaseDetailsComponent,\n    ClinicNewPatientComponent,\n    ClinicPatientDetailsComponent,\n    DoctorDetailsComponent,\n    HospitalDetailsComponent,\n    LaboratoryDetailsComponent,\n    MedicalStoreDetailsComponent,\n    MedicalstoreLoginComponent,\n    MedicalstoreDashboardComponent,\n    DoctorCaseDetailsComponent,\n    DoctorNewCaseComponent,\n    DoctorViewCasesComponent,\n    DoctorPatientDetailsComponent,\n    HospitalCaseDetailsComponent,\n    DoctorNewPatientComponent,\n    UserCaseListComponent,\n    UserCaseDetailsComponent,\n    UserProfileCaseDetailsComponent,\n    UserProfileCaseListComponent,\n    MedicalNewPatientComponent,\n    LaboratoryNewPatientComponent,\n    LaboratoryViewCasesComponent,\n    LaboratoryViewAndUpdateCaseDetailsComponent,\n    MedicalViewAndUpdateCaseDetailsComponent,\n    MedicalViewCasesComponent\n\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule,\n    PdfViewerModule,\n\n    \n   \n  ],\n  providers: [AuthenticationService, AuthGuardService,\n              AuthGuardAdminService, AuthenticationAdminService, \n              AuthGuardDoctorService, AuthenticationDoctorService, \n              AuthenticationHospitalService, AuthGuardHospitalService,\n              AuthGuardClinicService, AuthenticationClinicService,\n            AuthGuardLaboratoryService,AuthenticationLaboratoryService,\n          AuthGuardMedicalStoreService,AuthenticationMedicalStoreService],\n              \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationService } from './authentication.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface UserDetails {\r\n  _id: string\r\n  identity: {\r\n    user_id: string\r\n    first_name: string\r\n    last_name: string\r\n    email: string\r\n    gender: string\r\n    age: number\r\n    contact_number:number\r\n    emergency_contact_number:number\r\n    father_name:string\r\n    mother_name:string\r\n    blood_group:string\r\n    profile_photo:string\r\n    marital_status:string\r\n    aadhar_number:number\r\n    street:string\r\n    city:string\r\n    state:string\r\n    pincode:number\r\n    landmark:string\r\n    dob:Date\r\n  }\r\n  password: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface UserTokenResponse {\r\n  token: string\r\n}\r\n\r\nexport interface TokenPayload {\r\n  _id: string\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  private UserToken: string\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('usertoken', token)\r\n    this.UserToken = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.UserToken) {\r\n      this.UserToken = localStorage.getItem('usertoken')\r\n    }\r\n    return this.UserToken\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if (token) {\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      // console.log(window.atob(payload))\r\n      return JSON.parse(payload)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails()\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/register`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: UserTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/user/login`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: UserTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public logout(): void {\r\n    this.UserToken = ''\r\n    window.localStorage.removeItem('usertoken')\r\n    this.router.navigateByUrl('/')\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-case-details',\n  templateUrl: './clinic-case-details.component.html',\n  styleUrls: ['./clinic-case-details.component.css']\n})\nexport class ClinicCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-new-case',\n  templateUrl: './clinic-new-case.component.html',\n  styleUrls: ['./clinic-new-case.component.css']\n})\nexport class ClinicNewCaseComponent implements OnInit {\n\n \n  patientID:string \n  // Cartoon:string\n\n\n  \n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: number;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.medicine_dosage,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \n           <hr>\n          <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\n          \n          \n          <!-- Disease Name -->\n          <label for=\"disease_name\"> Disease name</label>\n          <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\n          <br>\n\n          <!-- observation Summary -->\n          <label for=\"disease_observation\">Observations</label>\n          <textarea formControlName=\"disease_observation\" class=\"form-control\" rows=\"3\"> </textarea>\n          <br>\n\n          <!-- Lab Test Required -->\n          <label> Lab Test Required</label>\n          <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\n            <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\n            {{ cartoon }}\n          </div>\n        <br>\n        </form>\n\n        <label for=\"medicine_name\">Medicine Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_name\">\n\n        <label for=\"\">Medicine Dosage</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_dosage\">\n\n        <label for=\"\">Medicine Quantity</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_quantity\">\n        <br>\n        <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\n        \n        <h2>Medicines List</h2>\n        <table class=\"table bg-white text-dark\">\n          <tr>\n            <th>Sr No.</th>\n            <th>Medicine</th>\n            <th>Dosage</th>\n            <th>Quantity</th>\n            <th>Delete</th>\n            <!-- <th>isTaken</th> -->\n            \n          </tr>\n          <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\n          <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\n            <td>{{ i+1 }}</td>\n            <td>{{medicine.medicine_name}}</td>\n            <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.medicine_quantity}}</td>\n            <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\n          </tr>\n        </table>\n        \n        \n\n    \n\n        <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CaseDetails } from 'src/app/doctor/doctor-dashboard/cases/doctor-case-details/CaseDetails';\n\n@Component({\n  selector: 'app-view-cases',\n  templateUrl: './clinic-view-cases.component.html',\n  styleUrls: ['./clinic-view-cases.component.css']\n})\nexport class ClinicViewCasesComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/clinic/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-dashboard',\n  templateUrl: './clinic-dashboard.component.html',\n  styleUrls: ['./clinic-dashboard.component.css']\n})\nexport class ClinicDashboardComponent implements OnInit {\n\n\n  constructor(private router:Router) { }\n\n  \n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Clinic Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          <!-- <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"PatientList()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-warning\">\n                      <i class=\"fa fa-stethoscope \" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Patient List</p>\n                  </div>\n                  \n        </div>\n          </div> -->\n      </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-patient',\n  templateUrl: './clinic-new-patient.component.html',\n  styleUrls: ['./clinic-new-patient.component.css']\n})\nexport class ClinicNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/clinic/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientDetails } from 'src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './clinic-patient-details.component.html',\n  styleUrls: ['./clinic-patient-details.component.css']\n})\nexport class ClinicPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: PatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<PatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`clinic/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`clinic/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n  </head>\n  \n  <body>\n    <div class=\"container\">\n      <h2>Patient Details</h2>\n      <div class=\"row justify-content-center\">\n  \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>Add Case</p>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>View Cases</p>\n            </div>\n          </div>\n        </div>\n  \n      <br>\n      <br>\n      <br>\n      <br>\n      <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n      <table class=\"table table-dark\">\n      \n          <tr>\n            <th>First Name</th>\n              <td>{{patientDetails.first_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Last Name</th>\n              <td>{{patientDetails.last_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Father Name</th>\n              <td>{{patientDetails.father_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Mother Name</th>\n              <td>{{patientDetails.mother_name}}</td>\n          </tr>\n            \n          <tr>\n            <th>Age</th>\n              <td>{{patientDetails.age}}</td>\n          </tr>\n  \n          <tr>\n            <th>Gender</th>\n              <td>{{patientDetails.gender}}</td>\n          </tr>\n\n          <tr>\n            <th>Blood Group</th>\n              <td>{{patientDetails.blood_group}}</td>\n          </tr>\n  \n          <tr>\n            <th>Contact Number</th>\n              <td>{{patientDetails.contact_number}}</td>\n          </tr>\n  \n          <tr>\n            <th>Emergency Contact Number</th>\n              <td>{{patientDetails.emergency_contact_number}}</td>\n          </tr>\n  \n          <tr>\n            <th>Email Address</th>\n              <td>{{patientDetails.email}}</td>\n          </tr>\n     \n          \n      </table>\n      <!-- <div if=\"casesResult.length > 0\">\n        <div ngfor></div>\n      </div>\n    -->\n   \n   \n  </div>\n  </div>\n  </body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationClinicService } from './authentication-clinic.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardClinicService implements CanActivate {\r\n  constructor(private authClinic: AuthenticationClinicService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authClinic.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface ClinicDetails {\r\n  _id: string,\r\n  clinic_name: string,\r\n  license_number: string,\r\n  established_date: Date\r\n  doctor_name: string,\r\n  qualification:string,\r\n  gender: string,\r\n  age:number,\r\n  dob:Date,\r\n  street: string,\r\n  city: string,\r\n  state: string,\r\n  pincode: number,\r\n  landmark: string,\r\n  email: string,\r\n  password: string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  clinic_document:File\r\n}\r\n\r\nexport interface AddClinic {\r\n  _id: string,\r\n  clinic_name: string,\r\n  license_number: string,\r\n  established_date: Date\r\n  doctor_name: string,\r\n  qualification:string,\r\n  gender: string,\r\n  age:number,\r\n  dob:Date,\r\n  street: string,\r\n  city: string,\r\n  state: string,\r\n  pincode: number,\r\n  landmark: string,\r\n  email: string,\r\n  password: string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  clinic_document:File\r\n}\r\n\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  clinic_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationClinicService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(clinic:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/clinic/login`, clinic);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('clinic_name',data.clinic_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const clinic_name = localStorage.getItem('clinic_name');\r\n    if (token && _id && clinic_name) {\r\n      return { token: token, _id: _id, clinic_name: clinic_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('clinic_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public AddClinic(clinic: ClinicDetails): Observable<any> {\r\n    const formData = new FormData;\r\n    for (const [key, value] of Object.entries(clinic)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n    return this.httpClient.post(`http://127.0.0.1:5000/api/clinic/register`, formData)\r\n  }\r\n}","import { Component } from '@angular/core';\nimport { AuthenticationClinicService } from './authentication-clinic.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-login',\n  templateUrl: './clinic-login.component.html',\n  styleUrls: ['./clinic-login.component.css']\n})\nexport class ClinicLoginComponent{\n\n  error : string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n  constructor(private auth:AuthenticationClinicService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n      this.auth.loginData(response);\n      this.router.navigate(['/clinic/dashboard'])\n    }\n    else {\n      this.error = response.result;\n    }\n  })\n}\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-case-details',\n  templateUrl: './doctor-case-details.component.html',\n  styleUrls: ['./doctor-case-details.component.css']\n})\nexport class DoctorCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-new-case',\n  templateUrl: './doctor-new-case.component.html',\n  styleUrls: ['./doctor-new-case.component.css']\n})\nexport class DoctorNewCaseComponent implements OnInit{\n\n\n  patientID:string \n  // Cartoon:string\n\n\n \n  // DosageList: any = ['1-1-1',\n  //                           '1-0-1', \n  //                           '1-0-0',\n  //                           '1-1-0',\n  //                           '0-1-1',\n  //                           '0-1-0',\n  //                           '0-0-1',\n  //                         ]\n  \n  DosageList: any = ['1-1-1']\n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: string;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.DosageList,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \r\n           <hr>\r\n          <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\r\n          \r\n          \r\n          <!-- Disease Name -->\r\n          <label for=\"disease_name\"> Disease name</label>\r\n          <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\r\n          <br>\r\n\r\n          <!-- observation Summary -->\r\n          <label for=\"disease_observation\">Observations</label>\r\n          <textarea formControlName=\"disease_observation\" class=\"form-control\" placeholder=\"enter symptoms or observations\" rows=\"3\"> </textarea>\r\n          <br>\r\n\r\n          <!-- Lab Test Required -->\r\n          \r\n        </form>\r\n\r\n        <label for=\"medicine_name\">Medicine Name</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"enter medicine name\" [(ngModel)]=\"medicine_name\">\r\n        <br>\r\n\r\n        <!-- Dosage -->\r\n        <div class=\"form-group\">\r\n          <label for=\"dosage\">Medicine Dosage</label>\r\n          <select formControlName=\"dosage\" class=\"form-control\">\r\n              <option disabled>Select Dosage</option>\r\n              <option *ngFor=\"let dosage of DosageList\">{{dosage}}</option>\r\n          </select>\r\n\r\n                 </div>\r\n\r\n\r\n        <label for=\"\">Medicine Quantity</label>\r\n        <input type=\"number\" class=\"form-control\" placeholder=\"enter quantity\" [(ngModel)]=\"medicine_quantity\">\r\n        <br>\r\n        <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\r\n        <br>\r\n        <br>\r\n        <h5>Medicines List</h5>\r\n        <table class=\"table bg-white text-dark\">\r\n          <tr>\r\n            <th>Sr No.</th>\r\n            <th>Medicine</th>\r\n            <th>Dosage</th>\r\n            <th>Quantity</th>\r\n            <th>Delete</th>\r\n            <!-- <th>isTaken</th> -->\r\n            \r\n          </tr>\r\n          <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\r\n          <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\r\n            <td>{{ i+1 }}</td>\r\n            <td>{{medicine.medicine_name}}</td>\r\n            <td>{{medicine.medicine_dosage}}</td>\r\n            <td>{{medicine.medicine_quantity}}</td>\r\n            <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\r\n          </tr>\r\n        </table>\r\n        \r\n        \r\n\r\n        <label class=\"label\"> Lab Test Required</label>\r\n        <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\r\n          <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\r\n          {{ cartoon }}\r\n        </div>\r\n      <br>\r\n\r\n        <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { viewCases } from './doctor-viewCases';\n\n\n@Component({\n  selector: 'app-view-cases',\n  templateUrl: './doctor-view-cases.component.html',\n  styleUrls: ['./doctor-view-cases.component.css']\n})\nexport class DoctorViewCasesComponent implements OnInit {\n\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  // CasesList:viewCases\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n","<div class=\"container\">\n    <br>\n    <h3>Patient Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/doctor/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-dashboard',\n  templateUrl: './doctor-dashboard.component.html',\n  styleUrls: ['./doctor-dashboard.component.css']\n})\nexport class DoctorDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/doctor/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n  <div class=\"container main-section\" >\n\n    <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Doctor Dashboard</h1>\n\n\n\t<div class=\"row justify-content-md-center\">\n\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n\t\t\t\t\t<p>Find Patient</p>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n    \n\n\t\t\n\t</div>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctor-new-patient',\n  templateUrl: './doctor-new-patient.component.html',\n  styleUrls: ['./doctor-new-patient.component.css']\n})\nexport class DoctorNewPatientComponent implements OnInit {\n  patientID:'';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n    \n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n        <div class=\"form-group\">\n          <label for=\"text\">Patient ID</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/doctor/patient-details',patientID]\" >Find</button>\n    \n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientDetails } from './doctor-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './doctor-patient-details.component.html',\n  styleUrls: ['./doctor-patient-details.component.css']\n})\nexport class DoctorPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: PatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<PatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`doctor/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`doctor/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n  <div class=\"container\">\n    <h2>Patient Details</h2>\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>Add Case</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n\n    <br>\n    <br>\n    <br>\n    <br>\n    <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n    <table class=\"table table-dark\">\n    \n        <tr>\n          <th>First Name</th>\n            <td>{{patientDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Last Name</th>\n            <td>{{patientDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Father Name</th>\n            <td>{{patientDetails.father_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Mother Name</th>\n            <td>{{patientDetails.mother_name}}</td>\n        </tr>\n          \n        <tr>\n          <th>Age</th>\n            <td>{{patientDetails.age}}</td>\n        </tr>\n\n        <tr>\n          <th>Gender</th>\n            <td>{{patientDetails.gender}}</td>\n        </tr>\n\n        <tr>\n          <th>Contact Number</th>\n            <td>{{patientDetails.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Emergency Contact Number</th>\n            <td>{{patientDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Email Address</th>\n            <td>{{patientDetails.email}}</td>\n        </tr>\n   \n        \n    </table>\n    <!-- <div if=\"casesResult.length > 0\">\n      <div ngfor></div>\n    </div>\n  -->\n \n \n</div>\n</div>\n</body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationDoctorService } from './authentication-doctor.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardDoctorService implements CanActivate {\r\n  constructor(private authDoctor: AuthenticationDoctorService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authDoctor.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface DoctorDetails {\r\n  _id: string,\r\n  first_name: string,\r\n  last_name: string,\r\n  email: string,\r\n  age:number,\r\n  gender:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  qualification:string,\r\n  license_number:string,\r\n  doctor_document:File,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  pincode:number,\r\n  landmark:string\r\n}\r\nexport interface AddDoctor {\r\n  _id: string,\r\n  first_name: string,\r\n  last_name: string,\r\n  email: string,\r\n  age:number,\r\n  gender:string,\r\n  profile_photo:File,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  qualification:string,\r\n  license_number:string,\r\n  doctor_document:File,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  pincode:number,\r\n  landmark:string\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  doctor_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationDoctorService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/doctor/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('doctor_name',data.doctor_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const doctor_name = localStorage.getItem('doctor_name');\r\n    if (token && _id && doctor_name) {\r\n      return { token: token, _id: _id, doctor_name: doctor_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('doctor_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddUser(doctor: DoctorDetails): Observable<any> {\r\n      const formData = new FormData;\r\n      for (const [key, value] of Object.entries(doctor)) {\r\n        formData.append(key, value);\r\n      }\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/doctor/register`, formData)\r\n  }\r\n\r\n \r\n\r\n}","import { Component } from '@angular/core';\nimport { AuthenticationDoctorService } from './authentication-doctor.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-login',\n  templateUrl: './doctor-login.component.html',\n  styleUrls: ['./doctor-login.component.css']\n})\nexport class DoctorLoginComponent{\n\n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n  constructor(private auth:AuthenticationDoctorService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/doctor/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  UserLogin(){\n    this.router.navigateByUrl('user/login')\n  }\n\n  DoctorLogin(){\n    this.router.navigateByUrl('doctor/login')\n  }\n\n  HospitalLogin(){\n    this.router.navigateByUrl('hospital/login')\n  }\n\n  LaboratoryLogin(){\n    this.router.navigateByUrl('laboratory/login')\n  }\n\n  MedicalStoreLogin(){\n    this.router.navigateByUrl('medical/login')\n  }\n\n  ClinicLogin(){\n    this.router.navigateByUrl('clinic/login')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n      <div class=\"col-sm-8 mx-auto\">\n        <div class=\"text-center\">\n        <img src=\"assets/logo.png\"  width=\"300\" height=\"300\"> \n      </div>\n                <h1 class=\"text-center\">HEALTH CARD \n          <br>\n          <h4 class=\"text-center\"> \n            Welcome to Health Card. Please Login to proceed\n          </h4>\n        </h1>\n        <hr class=\"hr\">\n\n        <div class=\"row justify-content-md-center\">\n\n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"UserLogin()\">\n            <div class=\"row main-box-layout img-thumbnail\">\n              <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                <p>User Login</p>\n              </div>\n            </div>\n          </div>\n        \n\n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"HospitalLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Hospital Login</p>\n                </div>\n              </div>\n            </div>\n      \n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"DoctorLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-stethoscope\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Doctor Login</p>\n                </div>\n              </div>\n            </div>\n\n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"LaboratoryLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-flask\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Lab Login</p>\n                </div>\n              </div>\n            </div>\n\n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"MedicalStoreLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-medkit\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Medical Login</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"ClinicLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Clinic Login</p>\n                </div>\n              </div>\n          \n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-case-details',\n  templateUrl: './hospital-case-details.component.html',\n  styleUrls: ['./hospital-case-details.component.css']\n})\nexport class HospitalCaseDetailsComponent implements OnInit {\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-hospital-new-case',\n  templateUrl: './hospital-new-case.component.html',\n  styleUrls: ['./hospital-new-case.component.css']\n})\nexport class HospitalNewCaseComponent implements OnInit {\n\n  patientID:string \n  // Cartoon:string\n\n\n \n  // DosageList: any = ['1-1-1',\n  //                           '1-0-1', \n  //                           '1-0-0',\n  //                           '1-1-0',\n  //                           '0-1-1',\n  //                           '0-1-0',\n  //                           '0-0-1',\n  //                         ]\n  \n  DosageList: any = ['1-1-1']\n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: string;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.DosageList,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n      <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \n         <hr>\n        <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\n        \n        \n        <!-- Disease Name -->\n        <label for=\"disease_name\"> Disease name</label>\n        <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\n        <br>\n\n        <!-- observation Summary -->\n        <label for=\"disease_observation\">Observations</label>\n        <textarea formControlName=\"disease_observation\" class=\"form-control\" placeholder=\"enter symptoms or observations\" rows=\"3\"> </textarea>\n        <br>\n\n        <!-- Lab Test Required -->\n        \n      </form>\n\n      <label for=\"medicine_name\">Medicine Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"enter medicine name\" [(ngModel)]=\"medicine_name\">\n      <br>\n\n      <!-- Dosage -->\n    \n        <label for=\"medicine_dosage\">Medicine Dosage</label>\n        <select formControlName=\"medicine_dosage\" class=\"form-control\">\n            <option disabled>Select Dosage</option>\n            <option *ngFor=\"let dosage of DosageList\">{{dosage}}</option>\n        </select>\n\n        \n     \n\n\n      <label for=\"\">Medicine Quantity</label>\n      <input type=\"number\" class=\"form-control\" placeholder=\"enter quantity\" [(ngModel)]=\"medicine_quantity\">\n      <br>\n      <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\n      <br>\n      <br>\n      <h5>Medicines List</h5>\n      <table class=\"table bg-white text-dark\">\n        <tr>\n          <th>Sr No.</th>\n          <th>Medicine</th>\n          <th>Dosage</th>\n          <th>Quantity</th>\n          <th>Delete</th>\n          <!-- <th>isTaken</th> -->\n          \n        </tr>\n        <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\n        <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\n          <td>{{ i+1 }}</td>\n          <td>{{medicine.medicine_name}}</td>\n          <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.medicine_quantity}}</td>\n          <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\n        </tr>\n      </table>\n      \n      \n\n      <label class=\"label\"> Lab Test Required</label>\n      <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\n        <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\n        {{ cartoon }}\n      </div>\n    <br>\n\n      <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-view-cases',\n  templateUrl: './hospital-view-cases.component.html',\n  styleUrls: ['./hospital-view-cases.component.css']\n})\nexport class HospitalViewCasesComponent implements OnInit {\n\n  \n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  // CasesList:viewCases\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/hospital/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-dashboard',\n  templateUrl: './hospital-dashboard.component.html',\n  styleUrls: ['./hospital-dashboard.component.css']\n})\nexport class HospitalDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/hospital/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n  <div class=\"container main-section\" >\n\n    <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Hospital Dashboard</h1>\n\n\n\t<div class=\"row justify-content-md-center\">\n\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n\t\t\t\t\t<p>Find Patient</p>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n    \n\n\t\t\n\t</div>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hospital-new-patient',\n  templateUrl: './hospital-new-patient.component.html',\n  styleUrls: ['./hospital-new-patient.component.css']\n})\nexport class HospitalNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n      \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/hospital/patient-details',patientID]\" >Find</button>\n     \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HospitalPatientDetails } from './hospital-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-patient-details',\n  templateUrl: './hospital-patient-details.component.html',\n  styleUrls: ['./hospital-patient-details.component.css']\n})\nexport class HospitalPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: HospitalPatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<HospitalPatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`hospital/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`hospital/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n  <div class=\"container\">\n    <h2>Patient Details</h2>\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>Add Case</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n\n    <br>\n    <br>\n    <br>\n    <br>\n    <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n    <table class=\"table table-dark\">\n    \n        <tr>\n          <th>First Name</th>\n            <td>{{patientDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Last Name</th>\n            <td>{{patientDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Father Name</th>\n            <td>{{patientDetails.father_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Mother Name</th>\n            <td>{{patientDetails.mother_name}}</td>\n        </tr>\n          \n        <tr>\n          <th>Age</th>\n            <td>{{patientDetails.age}}</td>\n        </tr>\n\n        <tr>\n          <th>Gender</th>\n            <td>{{patientDetails.gender}}</td>\n        </tr>\n\n        <tr>\n          <th>Contact Number</th>\n            <td>{{patientDetails.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Emergency Contact Number</th>\n            <td>{{patientDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Email Address</th>\n            <td>{{patientDetails.email}}</td>\n        </tr>\n   \n        \n    </table>\n    <!-- <div if=\"casesResult.length > 0\">\n      <div ngfor></div>\n    </div>\n  -->\n \n \n</div>\n</div>\n</body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationHospitalService } from './authentication-hospital.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardHospitalService implements CanActivate {\r\n  constructor(private authHospital: AuthenticationHospitalService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authHospital.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface HospitalDetails {\r\n  _id: string,\r\n  hospital_name:string,\r\n  email: string,\r\n  password: string,\r\n  license_number:string,\r\n  established_date:Date,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  owner_name:string,\r\n  steet:string\r\n  city:string\r\n  state:string\r\n  pincode:number\r\n  landmark:string\r\n  hospital_document:File\r\n}\r\nexport interface AddHospital {\r\n  _id: string,\r\n  hospital_name:string,\r\n  email: string,\r\n  password: string,\r\n  license_number:string,\r\n  established_date:Date,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  owner_name:string,\r\n  steet:string\r\n  city:string\r\n  state:string\r\n  pincode:number\r\n  landmark:string\r\n  hospital_document:File\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  hospital_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationHospitalService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/hospital/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('hospital_name',data.hospital_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const hospital_name = localStorage.getItem('hospital_name');\r\n    if (token && _id && hospital_name) {\r\n      return { token: token, _id: _id, hospital_name: hospital_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('hospital_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddHospital(hospital: HospitalDetails): Observable<any> {\r\n      const formData = new FormData;\r\n      for (const [key, value] of Object.entries(hospital)) {\r\n        formData.append(key, value);\r\n      }\r\n      console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/hospital/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component } from '@angular/core';\nimport {  AuthenticationHospitalService } from './authentication-hospital.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-login',\n  templateUrl: './hospital-login.component.html',\n  styleUrls: ['./hospital-login.component.css']\n})\nexport class HospitalLoginComponent{\n  error : string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n  constructor(private auth:AuthenticationHospitalService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n      this.auth.loginData(response);\n      this.router.navigate(['/hospital/dashboard'])\n    }\n    else {\n      this.error = response.result;\n    }\n  })\n}\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-dashboard',\n  templateUrl: './laboratory-dashboard.component.html',\n  styleUrls: ['./laboratory-dashboard.component.css']\n})\nexport class LaboratoryDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  FindPatient(){\n    this.router.navigateByUrl('/laboratory/new-patient')\n  }\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Medical Store Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          \n      </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-new-patient',\n  templateUrl: './laboratory-new-patient.component.html',\n  styleUrls: ['./laboratory-new-patient.component.css']\n})\nexport class LaboratoryNewPatientComponent implements OnInit {\n\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/laboratory/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { LaboratoryFile } from './laboratoryFile';\n\n@Component({\n  selector: 'app-laboratory-view-and-update-case-details',\n  templateUrl: './laboratory-view-and-update-case-details.component.html',\n  styleUrls: ['./laboratory-view-and-update-case-details.component.css']\n})\nexport class LaboratoryViewAndUpdateCaseDetailsComponent implements OnInit {\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(public fb:FormBuilder, private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  PatientUploadLabReport = this.fb.group({\n    patient_lab_report: [''],\n   });\n\n   selectFile(event) {\n    const patient_lab_report = (event.target as HTMLInputElement).files[0];\n    console.log(patient_lab_report);\n    this.PatientUploadLabReport.get('patient_lab_report').patchValue(patient_lab_report);\n    this.PatientUploadLabReport.updateValueAndValidity();\n    console.log(this.PatientUploadLabReport.value);\n  }\n\n\n    getCaseDetails(){\n      this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n        this.caseDetails = response;\n      console.log(this.caseDetails);\n      console.log(response)\n    });\n  }\n\n  NewPatientUploadLabReport : LaboratoryFile\n\nonSubmit(){\nthis.NewPatientUploadLabReport = this.PatientUploadLabReport.value;\n\nconst formData = new FormData;\nfor (const [key, value] of Object.entries(this.NewPatientUploadLabReport)) {\n  formData.append(key, value);\n}\nthis.httpClient.post(`http://127.0.0.1:5000/api/user/cases/upload/${this.caseID}`,formData)\n.subscribe(\n  () =>{\n    this.router.navigateByUrl('/laboratory/dashboard')\n    console.log(this.NewPatientUploadLabReport)\n  },\n  err =>{\n    console.log(err);\n\n  }\n)\n      \n      }\n}","<div class=\"container\">\n    <h2>Case Details</h2>\n    <form [formGroup]=\"PatientUploadLabReport\" (ngSubmit)=\"onSubmit()\">\n     <!-- Lab Reports -->\n        <div class=\"form-group\">\n            <label for=\"patient_lab_report\">Lab Reports</label>\n            <div class=\"custom-file\">\n            <label for=\"patient_lab_report\" class=\"custom-file-label\">Lab Reports</label>\n            <input type=\"file\" class=\"custom-file-input\"\n              (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n            </div>\n            <br>\n            <br>\n        \n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Add Report</button>\n\n        </div>\n        </form>\n\n    <table class=\"table table-dark\">\n  \n        <tr>\n            <th>Disease Name</th>\n            <td>{{caseDetails.disease_name}}</td>\n        </tr>\n  \n        <tr>\n            <th>Observations</th>\n            <td><pre>{{caseDetails.disease_observation}}</pre></td>\n        </tr>\n      </table>\n  \n      <br>\n      <h5>Medicines Prescribed</h5>\n      <hr>  \n  \n      <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n        <tr>\n          <th>Sr. No.</th>\n          <th>Medicines</th>\n          <th>Dosage</th>\n          <th>Taken</th>\n            <!-- <td>{{caseDetails.temp}}</td> -->\n        </tr>\n  \n  \n  \n        <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n          <td>{{i+1}}</td>\n             <td>{{medicine.medicine_name}}</td>\n             <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.isTaken}}</td>\n           </tr>\n          </table>\n  \n          <br>\n            <h5>Test Reuired</h5>\n          <hr> \n  \n            <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Lab Test </th>\n                </tr>\n  \n  \n              <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n                <td>{{i+1}}</td>\n                  <td>{{test_required}}</td>\n                </tr>\n            </table>\n         \n\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-view-cases',\n  templateUrl: './laboratory-view-cases.component.html',\n  styleUrls: ['./laboratory-view-cases.component.css']\n})\nexport class LaboratoryViewCasesComponent implements OnInit {\n\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/laboratory/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationLaboratoryService } from './authentication-Laboratory.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardLaboratoryService implements CanActivate {\r\n  constructor(private authLaboratory: AuthenticationLaboratoryService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authLaboratory.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\n\r\nexport interface LaboratoryDetails {\r\n  _id: string,\r\n  laboratory_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  laboratory_document:File\r\n  established_date:Date\r\n}\r\nexport interface AddLaboratory {\r\n  _id: string,\r\n  laboratory_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  password:string\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  laboratory_document:File\r\n  established_date:Date\r\n\r\n\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  laboratory_name: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationLaboratoryService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/laboratory/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('laboratory_name',data.laboratory_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const laboratory_name = localStorage.getItem('laboratory_name');\r\n    if (token && _id && laboratory_name) {\r\n      return { token: token, _id: _id, laboratory_name: laboratory_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('laboratory_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddLaboratory(laboratory: LaboratoryDetails): Observable<any> {\r\n      const formData = new FormData;\r\n    for (const [key, value] of Object.entries(laboratory)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/laboratory/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component } from '@angular/core';\nimport { AuthenticationLaboratoryService } from './authentication-Laboratory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-login',\n  templateUrl: './laboratory-login.component.html',\n  styleUrls: ['./laboratory-login.component.css']\n})\nexport class LaboratoryLoginComponent{\n  \n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n\n  constructor(private auth:AuthenticationLaboratoryService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/laboratory/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n  }\n  ","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\n  error: string;\n\n  credentials: TokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email:'',\n    password: ''\n  }\n  constructor(private auth: AuthenticationService, private route:Router) { }\n  login(){\n    this.auth.login(this.credentials).subscribe(response => {\n      if(response.token){\n        this.route.navigate(['/user/profile'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-new-patient',\n  templateUrl: './medical-new-patient.component.html',\n  styleUrls: ['./medical-new-patient.component.css']\n})\nexport class MedicalNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/medical/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/medical/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-medical-view-and-update-case-details',\n  templateUrl: './medical-view-and-update-case-details.component.html',\n  styleUrls: ['./medical-view-and-update-case-details.component.css']\n})\nexport class MedicalViewAndUpdateCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n    <h2>Case Details</h2>\n    <table class=\"table table-dark\">\n  \n        <tr>\n            <th>Disease Name</th>\n            <td>{{caseDetails.disease_name}}</td>\n        </tr>\n  \n        <tr>\n            <th>Observations</th>\n            <td><pre>{{caseDetails.disease_observation}}</pre></td>\n        </tr>\n      </table>\n  \n      <br>\n      <h5>Medicines Prescribed</h5>\n      <hr>  \n  \n      <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n        <tr>\n          <th>Sr. No.</th>\n          <th>Medicines</th>\n          <th>Dosage</th>\n          <th>Taken</th>\n            <!-- <td>{{caseDetails.temp}}</td> -->\n        </tr>\n  \n  \n  \n        <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n          <td>{{i+1}}</td>\n             <td>{{medicine.medicine_name}}</td>\n             <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.isTaken}}</td>\n           </tr>\n          </table>\n  \n          <br>\n            <h5>Test Reuired</h5>\n          <hr> \n  \n            <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Lab Test </th>\n                </tr>\n  \n  \n              <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n                <td>{{i+1}}</td>\n                  <td>{{test_required}}</td>\n                </tr>\n            </table>\n         \n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-view-cases',\n  templateUrl: './medical-view-cases.component.html',\n  styleUrls: ['./medical-view-cases.component.css']\n})\nexport class MedicalViewCasesComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/medical/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medicalstore-dashboard',\n  templateUrl: './medicalstore-dashboard.component.html',\n  styleUrls: ['./medicalstore-dashboard.component.css']\n})\nexport class MedicalstoreDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/medical/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Medical Store Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          \n      </div>\n  </div>\n  </body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationMedicalStoreService } from './authentication-medicalstore.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardMedicalStoreService implements CanActivate {\r\n  constructor(private authMedicalStore: AuthenticationMedicalStoreService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authMedicalStore.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\n\r\nexport interface MedicalDetails {\r\n  _id: string,\r\n  medical_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  established_date:Date\r\n  medical_document:File\r\n}\r\nexport interface AddMedical {\r\n  _id: string,\r\n  medical_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  password:string\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  established_date:Date\r\n  medical_document:File\r\n\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  medical_name: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationMedicalStoreService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/medical/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('medical_name',data.medical_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const medical_name = localStorage.getItem('medical_name');\r\n    if (token && _id && medical_name) {\r\n      return { token: token, _id: _id, medical_name: medical_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('medical_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddMedical(medical: MedicalDetails): Observable<any> {\r\n      const formData = new FormData;\r\n    for (const [key, value] of Object.entries(medical)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/medical/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationMedicalStoreService } from './authentication-medicalstore.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medicalstore-login',\n  templateUrl: './medicalstore-login.component.html',\n  styleUrls: ['./medicalstore-login.component.css']\n})\nexport class MedicalstoreLoginComponent {\n\n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n constructor(private auth:AuthenticationMedicalStoreService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/medical/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent{\n  credentials: TokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: ''\n  }\n\n  constructor( private auth:AuthenticationService, private router:Router) { }\n\n  register(){\n    this.auth.register(this.credentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/profile')\n      },\n      err =>{\n        console.error(err);\n        \n      }\n    )\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"register()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n          <div class=\"form-group\">\n            <label for=\"name\">First name</label>\n            <input type=\"text\" class=\"form-control\" name=\"first_name\" placeholder=\"Enter your first name\" [(ngModel)]=\"credentials.first_name\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Last name</label>\n            <input type=\"text\" class=\"form-control\" name=\"last_name\" placeholder=\"Enter your lastname name\" [(ngModel)]=\"credentials.last_name\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Register!</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpClient, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http: HttpClient) { }\n  filename: string;\n\n  pushFileToStorage(file: File): Observable<HttpEvent<{}>> {\n    const formdata: FormData = new FormData();\n\n    formdata.append('file', file);\n\n    const req = new HttpRequest('POST', 'http://127.0.0.1:5000/api/file-upload', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n\n\n\n  serFilename(value: string) {\n    this.filename = value;\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\n// import { Router } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { ServiceService } from './service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  // constructor(private route:Router, private httpClient:HttpClient) { }\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  // progress: { percentage: number } = { percentage: 0 };\n  @Input() filename: string;\n\n  constructor(private uploadService: ServiceService) {\n    // this.uploadService.getFiles();\n  }\n\n  ngOnInit(){\n\n\n  }\n  \nselectFile(event) {\n    const file = event.target.files[0];\n    this.selectedFiles = event.target.files;\n    this.filename = file.name;\n    console.log(this.filename);\n    console.log(file);\n    this.uploadService.serFilename(this.filename);\n    // console.log(this.uploadService.getFiles());\n  }\n\n// ## HTTP call\n  upload() {\n  // this.progress.percentage = 0;\n\n  this.currentFileUpload = this.selectedFiles.item(0);\n  this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(event => {\n    \n  });\n\n  this.selectedFiles = undefined;\n}\n}\n","\n  <!-- <div class=\"progress-bar progress-bar-info progress-bar-striped\" role=\"progressbar\" attr.aria-valuenow=\"{{progress.percentage}}\"\n    aria-valuemin=\"0\" aria-valuemax=\"100\" [ngStyle]=\"{width:progress.percentage+'%'}\">\n    {{progress.percentage}}%</div>\n</div> -->\n<div class=\"container\">\n<label class=\"btn btn-default\">\n  <input type=\"file\" (change)=\"selectFile($event)\" accept=\".pcap\">\n</label>\n\n<button class=\"btn btn-success\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">Upload</button>\n</div>s","import { Component, OnInit } from '@angular/core';\nimport { UserDetails, AuthenticationService } from '../../authentication.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  details: UserDetails\n  user_id:string\n\n\n  constructor(private auth:AuthenticationService, private router:Router , private route:ActivatedRoute) { \n  //   this.route.paramMap.subscribe((parameter: ParamMap) => {\n  //     if (parameter.has('user_id')) {\n  //       this.user_id = parameter.get('user_id');\n  //       console.log(this.user_id);\n  //     }\n  //   })\n   }\n  \n\n  ngOnInit(){\n    this.details = this.auth.getUserDetails();\n  \n    console.log(this.details._id)\n  }\n\n  ViewCases(){\n    this.user_id = this.details.identity.user_id;\n    console.log(this.user_id)\n\n    this.router.navigateByUrl(`user/profile/case-list/${this.user_id}`)\n  }\n\n}\n\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n<body>\n\n\n\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n      <div class=\"col-sm-8 mx-auto\">\n        <h1 class=\"text-center\">PROFILE</h1>\n      </div>\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"text-center\">\n        <img src={{details.identity.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n      </div>\n      <table class=\"table col-md-6 mx-auto\">\n\n        \n        \n        <tr>\n          <td>Unique ID</td>\n          <td>{{ details.identity.user_id }}</td>\n        </tr>\n\n\n        <tr>\n          <td>First Name</td>\n          <td>{{ details.identity.first_name }}</td>\n        </tr>\n\n        <tr>\n          <td>Last Name</td>\n          <td>{{ details.identity.last_name }}</td>\n        </tr>\n\n        <tr>\n          <td>Email</td>\n          <td>{{ details.identity.email }}</td>\n        </tr>\n\n\n        <tr>\n          <td>Father Name</td>\n            <td>{{details.identity.father_name}}</td>\n        </tr>\n\n        <tr>\n          <td>Mother Name</td>\n            <td>{{details.identity.mother_name}}</td>\n        </tr>\n\n        <tr>\n          <td>Date of Birth</td>\n            <td>{{details.identity.dob | date}}</td>\n        </tr>\n\n        <tr>\n          <td>Gender</td>\n            <td>{{details.identity.gender}}</td>\n        </tr>\n\n        <tr>\n          <td>Contact Number</td>\n            <td>{{details.identity.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <td>Emergency Contact Number</td>\n            <td>{{details.identity.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <td>Blood Group</td>\n            <td>{{details.identity.blood_group}}</td>\n        </tr>\n        <tr>\n          <td>Marital Status</td>\n            <td>{{details.identity.marital_status}}</td>\n        </tr>\n        <tr>\n          <td>Aadhar Numberr</td>\n            <td>{{details.identity.aadhar_number}}</td>\n        </tr>\n        <tr>\n          <td>Street</td>\n            <td>{{details.identity.street}}</td>\n        </tr>\n        <tr>\n          <td>City</td>\n            <td>{{details.identity.city}}</td>\n        </tr>\n        <tr>\n          <td>State</td>\n            <td>{{details.identity.state}}</td>\n        </tr>\n        <tr>\n          <td>Pincode</td>\n            <td>{{details.identity.pincode}}</td>\n        </tr>\n        <tr>\n          <td>Landmark</td>\n            <td>{{details.identity.landmark}}</td>\n        </tr>\n\n\n   \n       \n      </table>\n    </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-profile-case-details',\n  templateUrl: './user-profile-case-details.component.html',\n  styleUrls: ['./user-profile-case-details.component.css']\n})\nexport class UserProfileCaseDetailsComponent implements OnInit {\n\n  case_id:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('case_id')) {\n        this.case_id = parameter.get('case_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.case_id}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile-case-list',\n  templateUrl: './user-profile-case-list.component.html',\n  styleUrls: ['./user-profile-case-list.component.css']\n})\nexport class UserProfileCaseListComponent implements OnInit {\n  \n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  user_id:string\n  // case_name:any\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n\n   ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.user_id}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n}\n","<div class=\"container\">\n    <br>\n    <h3>User Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/user/profile/case-list/caste-details',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport {UserDetails } from './users'\n// import {UserServices} from './user.service'\nimport {HttpClient} from '@angular/common/http'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  // providers: [UserServices],\n  styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit {\n  \n  details:UserDetails\n\n  users: JSON\n  editUser: JSON\n\n  constructor(private httpClient: HttpClient){}\n\n\n  ngOnInit(){\n    this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => (this.users = users as JSON))\n  }\n\n  getUsers():void{\n    this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => {\n      this.users = users as JSON;\n      console.log(this.users);\n    })\n  }\n\n  // add(name:string):void{\n  //   this.editUser = undefined\n  //   name = name.trim()\n  //   if(!name){\n  //     return\n  //   }\n  //   const newUser: UserDetails = {identity.first_name} as UserDetails\n  //   this.httpClient.post('http://127.0.0.1:5000/api/users',{ \"first_name\": name}).subscribe(() => this.getUsers())\n  // }\n\n  delete(user: UserDetails):void{\n    // this.users =this.users.filter(h => h !== user)\n    // console.log(user);\n    this.httpClient.delete(`http://127.0.0.1:5000/api/user/${user._id}`).subscribe(() => this.getUsers())\n  }\n  edit(user){\n    this.editUser = user\n\n  }\n  update(user: UserDetails){\n    if(this.editUser){\n      this.httpClient.put(`http://127.0.0.1:5000/api/user/${user._id}`, {\"first_name\": user.identity.first_name}).subscribe(() => {\n        this.getUsers()\n      })\n      this.editUser = undefined\n    }\n  }\n  ViewDetails(user:UserDetails){\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/${user._id}`)\n    console.log(user)\n\n  }\n\n}\n\n\n","<table class=\"table\">\n    <tr *ngFor=\"let user of users\">\n        <td class=\"text-left\">\n            <a [routerLink]=\"['/user-details/', user._id]\">\n            <!-- <a (click)=\"edit(user)\"> -->\n                <span>{{user.name}}</span>\n                <!-- <input *ngIf=\"user==editUser\" [(ngModel)]=\"user.name\" (blur)=\"update(user)\" (keyup.enter)=\"update(user)\"> -->\n            </a>\n        </td>\n    </tr>\n</table> \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}