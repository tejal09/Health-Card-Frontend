{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component.ts","webpack:///src/app/admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component.html","webpack:///src/app/admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component.ts","webpack:///src/app/admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component.html","webpack:///src/app/admin/admin-dashboard/clinic-list/clinic-list.component.ts","webpack:///src/app/admin/admin-dashboard/clinic-list/clinic-list.component.html","webpack:///src/app/admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component.ts","webpack:///src/app/admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component.html","webpack:///src/app/admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component.ts","webpack:///src/app/admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component.html","webpack:///src/app/admin/admin-dashboard/doctors-list/doctors-list.component.ts","webpack:///src/app/admin/admin-dashboard/doctors-list/doctors-list.component.html","webpack:///src/app/admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component.ts","webpack:///src/app/admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component.html","webpack:///src/app/admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component.ts","webpack:///src/app/admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component.html","webpack:///src/app/admin/admin-dashboard/hospital-list/hospital-list.component.ts","webpack:///src/app/admin/admin-dashboard/hospital-list/hospital-list.component.html","webpack:///src/app/admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component.ts","webpack:///src/app/admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component.html","webpack:///src/app/admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component.ts","webpack:///src/app/admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component.html","webpack:///src/app/admin/admin-dashboard/laboratory-list/laboratory-list.component.ts","webpack:///src/app/admin/admin-dashboard/laboratory-list/laboratory-list.component.html","webpack:///src/app/admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component.ts","webpack:///src/app/admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component.html","webpack:///src/app/admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component.ts","webpack:///src/app/admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component.html","webpack:///src/app/admin/admin-dashboard/medical-store-list/medical-store-list.component.ts","webpack:///src/app/admin/admin-dashboard/medical-store-list/medical-store-list.component.html","webpack:///src/app/admin/admin-dashboard/users-list/add-new-user/add-new-user.component.ts","webpack:///src/app/admin/admin-dashboard/users-list/add-new-user/add-new-user.component.html","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component.ts","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component.html","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component.ts","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component.html","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-details.component.ts","webpack:///src/app/admin/admin-dashboard/users-list/user-details/user-details.component.html","webpack:///src/app/admin/admin-dashboard/users-list/users-list.component.ts","webpack:///src/app/admin/admin-dashboard/users-list/users-list.component.html","webpack:///src/app/admin/admin-login/admin-login.component.ts","webpack:///src/app/admin/admin-login/admin-login.component.html","webpack:///src/app/admin/admin-login/auth-guard-admin.service.ts","webpack:///src/app/admin/admin-login/authentication-admin.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component.ts","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component.html","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component.ts","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component.html","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component.ts","webpack:///src/app/clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component.html","webpack:///src/app/clinic/clinic-dashboard/clinic-dashboard.component.ts","webpack:///src/app/clinic/clinic-dashboard/clinic-dashboard.component.html","webpack:///src/app/clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component.ts","webpack:///src/app/clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component.html","webpack:///src/app/clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component.ts","webpack:///src/app/clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component.html","webpack:///src/app/clinic/clinic-login/auth-guard-clinic.service.ts","webpack:///src/app/clinic/clinic-login/authentication-clinic.service.ts","webpack:///src/app/clinic/clinic-login/clinic-login.component.ts","webpack:///src/app/clinic/clinic-login/clinic-login.component.html","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component.ts","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component.html","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component.ts","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component.html","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component.ts","webpack:///src/app/doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component.html","webpack:///src/app/doctor/doctor-dashboard/doctor-dashboard.component.ts","webpack:///src/app/doctor/doctor-dashboard/doctor-dashboard.component.html","webpack:///src/app/doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component.ts","webpack:///src/app/doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component.html","webpack:///src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component.ts","webpack:///src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component.html","webpack:///src/app/doctor/doctor-login/auth-guard-doctor.service.ts","webpack:///src/app/doctor/doctor-login/authentication-doctor.service.ts","webpack:///src/app/doctor/doctor-login/doctor-login.component.ts","webpack:///src/app/doctor/doctor-login/doctor-login.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component.ts","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component.html","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component.ts","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component.html","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component.ts","webpack:///src/app/hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component.html","webpack:///src/app/hospital/hospital-dashboard/hospital-dashboard.component.ts","webpack:///src/app/hospital/hospital-dashboard/hospital-dashboard.component.html","webpack:///src/app/hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component.ts","webpack:///src/app/hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component.html","webpack:///src/app/hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component.ts","webpack:///src/app/hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component.html","webpack:///src/app/hospital/hospital-login/auth-guard-hospital.service.ts","webpack:///src/app/hospital/hospital-login/authentication-hospital.service.ts","webpack:///src/app/hospital/hospital-login/hospital-login.component.ts","webpack:///src/app/hospital/hospital-login/hospital-login.component.html","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-dashboard.component.ts","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-dashboard.component.html","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component.ts","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component.html","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component.ts","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component.html","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component.ts","webpack:///src/app/laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component.html","webpack:///src/app/laboratory/laboratory-login/auth-guard-laboratory.service.ts","webpack:///src/app/laboratory/laboratory-login/authentication-Laboratory.service.ts","webpack:///src/app/laboratory/laboratory-login/laboratory-login.component.ts","webpack:///src/app/laboratory/laboratory-login/laboratory-login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component.ts","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component.html","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component.ts","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component.html","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component.ts","webpack:///src/app/medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component.html","webpack:///src/app/medicalstore/medicalstore-dashboard/medicalstore-dashboard.component.ts","webpack:///src/app/medicalstore/medicalstore-dashboard/medicalstore-dashboard.component.html","webpack:///src/app/medicalstore/medicalstore-login/auth-guard-medicalstoreservice.ts","webpack:///src/app/medicalstore/medicalstore-login/authentication-medicalstore.service.ts","webpack:///src/app/medicalstore/medicalstore-login/medicalstore-login.component.ts","webpack:///src/app/medicalstore/medicalstore-login/medicalstore-login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/upload/service.ts","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/app/user/profile/profile.component.ts","webpack:///src/app/user/profile/profile.component.html","webpack:///src/app/user/profile/user-profile-case-details/user-profile-case-details.component.ts","webpack:///src/app/user/profile/user-profile-case-details/user-profile-case-details.component.html","webpack:///src/app/user/profile/user-profile-case-list/user-profile-case-list.component.ts","webpack:///src/app/user/profile/user-profile-case-list/user-profile-case-list.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///zlib (ignored)","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)","webpack:///url (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminDashboardComponent","router","httpClient","get","subscribe","response","console","log","counts","navigateByUrl","UserList","DoctorList","HospitalList","ClinicList","MedicalStoreList","LaboratoryList","selector","templateUrl","styleUrls","AddClinicComponent","fb","auth","qualificationList","state_list","registrationForm","group","clinic_name","required","email","pattern","password","min","max","license_number","established_date","DateValidator","doctor_name","gender","age","contact_number","emergency_contact_number","qualification","dob","street","city","state","pincode","landmark","clinic_document","target","value","event","files","patchValue","updateValueAndValidity","control","pristine","dobValue","Date","setValue","NewClinicCredentials","AddClinic","err","error","onSubmit","selectFile","ClinicDetailsComponent","route","paramMap","parameter","has","clinic_id","getClinicDetails","clinicDetails","ClinicListComponent","searchText","clinics","users","NewClinic","AddDoctorComponent","first_name","last_name","profile_photo","doctor_document","profile_pic","NewDoctorcredentials","AddUser","selectFileProfilePhoto","DoctorDetailsComponent","doctor_id","doctorDetails","DoctorsListComponent","doctors","NewDoctor","AddHospitalComponent","hospital_name","owner_name","hospital_document","current_date","NewHospitalCredentials","AddHospital","HospitalDetailsComponent","hospital_id","gethospitalDetails","hospitalDetails","HospitalListComponent","hospitals","NewHospital","AddLaboratoryComponent","laboratory_name","laboratory_document","NewLaboratoryCredentials","AddLaboratory","LaboratoryDetailsComponent","laboratory_id","getLaboratoryDetails","laboratoryDetails","LaboratoryListComponent","laboratories","NewLaboratory","AddMedicalStoreComponent","medical_name","medical_document","AddMedical","MedicalStoreDetailsComponent","medical_id","getMedicalDetails","medicalDetails","MedicalStoreListComponent","medicalstores","NewMedicalStore","AddNewUserComponent","blood_group_list","marital_status_list","father_name","mother_name","blood_group","marital_status","aadhar_number","NewUsercredentials","changeMaritalStatus","changeBloodGroup","changeAddressState","UserCaseDetailsComponent","case_id","getCaseDetails","caseDetails","UserCaseListComponent","cases","user_id","UserDetailsComponent","getUserDetails","userDetails","ViewCases","UsersListComponent","NewUser","AdminLoginComponent","credentials","_id","login","token","result","AuthGuardAdminService","authAdmin","isLoggedIn","AuthenticationAdminService","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","user","getAdminDetails","exp","now","formData","FormData","Object","entries","key","append","post","base","request","pipe","data","saveToken","removeItem","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","authUser","authDoctor","authHospital","authClinic","authLaboratory","authMedical","AppComponent","title","isMenuCollapsed","AppModule","declarations","providers","bootstrap","AuthGuardService","AuthenticationService","UserToken","ClinicCaseDetailsComponent","caseID","ClinicNewCaseComponent","http","activatedRoute","cartoonsData","patientID","i","testcases","NewCaseForm","checked","push","removeAt","disease_observation","medicines","array","test_required","disease_name","medicine","medicine_name","medicine_dosage","medicine_quantity","isTaken","getMedicine","put","OnSubmit","addMedicine","ClinicViewCasesComponent","ClinicDashboardComponent","FindPatient","ClinicNewPatientComponent","ClinicPatientDetailsComponent","patientDetails","NewCase","AuthGuardClinicService","AuthenticationClinicService","clinic","removeData","saveData","getData","ClinicLoginComponent","loginData","navigate","DoctorCaseDetailsComponent","DoctorNewCaseComponent","DosageList","DoctorViewCasesComponent","DoctorDashboardComponent","DoctorNewPatientComponent","DoctorPatientDetailsComponent","AuthGuardDoctorService","AuthenticationDoctorService","doctor","DoctorLoginComponent","HomeComponent","UserLogin","HospitalLogin","DoctorLogin","LaboratoryLogin","MedicalStoreLogin","ClinicLogin","HospitalCaseDetailsComponent","HospitalNewCaseComponent","HospitalViewCasesComponent","HospitalDashboardComponent","HospitalNewPatientComponent","HospitalPatientDetailsComponent","AuthGuardHospitalService","AuthenticationHospitalService","hospital","HospitalLoginComponent","LaboratoryDashboardComponent","LaboratoryNewPatientComponent","LaboratoryViewAndUpdateCaseDetailsComponent","PatientUploadLabReport","patient_lab_report","NewPatientUploadLabReport","LaboratoryViewCasesComponent","AuthGuardLaboratoryService","AuthenticationLaboratoryService","laboratory","LaboratoryLoginComponent","LoginComponent","MedicalNewPatientComponent","MedicalViewAndUpdateCaseDetailsComponent","MedicalViewCasesComponent","MedicalstoreDashboardComponent","AuthGuardMedicalStoreService","authMedicalStore","AuthenticationMedicalStoreService","medical","MedicalstoreLoginComponent","RegisterComponent","register","ServiceService","file","formdata","reportProgress","responseType","filename","providedIn","UploadComponent","uploadService","selectedFiles","name","serFilename","currentFileUpload","item","pushFileToStorage","undefined","upload","ProfileComponent","details","identity","UserProfileCaseDetailsComponent","UserProfileCaseListComponent","UserComponent","getUsers","editUser","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { counts } from './counts';\n\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  // counts;\n  counts: any;\n\n  \n  constructor( private router:Router, private httpClient: HttpClient) { }\n\n  ngOnInit() {\n      this.httpClient.get<counts>(`http://127.0.0.1:5000/api/count`).subscribe(response => {\n        console.log(response);\n        this.counts = response;\n      })\n      console.log(this.counts);\n    }\n\n   \n  \n\n\n\n  UserList(){\n    this.router.navigateByUrl('/admin/user/users-list')\n    \n  }\n  DoctorList(){\n    this.router.navigateByUrl('/admin/doctor/doctor-list')\n    \n  }\n  HospitalList(){\n    this.router.navigateByUrl('/admin/hospital/hospital-list')\n    \n  }\n  ClinicList(){\n    this.router.navigateByUrl('/admin/clinic/clinic-list')\n    \n  }\n\n  MedicalStoreList(){\n    this.router.navigateByUrl('/admin/medical/medical-store-list')\n    \n  }\n  LaboratoryList(){\n    this.router.navigateByUrl('/admin/laboratory/laboratory-list')\n    \n  }\n\n \n}\n","<html>\r\n<head>\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\r\n</head>\r\n<body>\r\n  <div class=\"container main-section\" >\r\n\t\r\n\t<h3 class=\"justify-content-center\">Admin Dashboard</h3>\r\n\t<div class=\"row justify-content-md-center\">\r\n\t\t\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"UserList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\r\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Users List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-primary\">{{counts.users_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    \r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"DoctorList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-warning\">\r\n\t\t\t\t\t<i class=\"fa fa-stethoscope \" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Doctors List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-warning\">{{counts.doctors_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"HospitalList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-danger\">\r\n\t\t\t\t\t<i class=\"fa fa-hospital-o \" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Hospitals List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-danger\">{{counts.hospitals_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"row justify-content-md-center\">\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"ClinicList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-info\">\r\n\t\t\t\t\t<i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Clinic List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-info\">{{counts.clinics_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"MedicalStoreList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-success\">\r\n\t\t\t\t\t<i class=\"fa fa-medkit\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Medical Store List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-success\">{{counts.medicals_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"LaboratoryList()\">\r\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-secondary\">\r\n\t\t\t\t\t<i class=\"fa fa-flask\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\r\n\t\t\t\t\t<p>Laboratory List</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"label\">\r\n\t\t\t\t\t<h3><span class=\"badge badge-pill bg-success\">{{counts.laboratory_count}}</span></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationClinicService, AddClinic } from 'src/app/clinic/clinic-login/authentication-clinic.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-clinic',\n  templateUrl: './add-clinic.component.html',\n  styleUrls: ['./add-clinic.component.css']\n})\nexport class AddClinicComponent {\n\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationClinicService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    clinic_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    doctor_name: ['',Validators.required],\n    gender:['',Validators.required],\n    age:['',Validators.required],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    qualification: ['', Validators.required],\n    dob: ['',[ Validators.required,this.DateValidator]],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    clinic_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const clinic_document = (event.target as HTMLInputElement).files[0];\n    console.log(clinic_document);\n    this.registrationForm.get('clinic_document').patchValue(clinic_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewClinicCredentials: AddClinic;\n  onSubmit(){\n    this.NewClinicCredentials = this.registrationForm.value;\n    this.auth.AddClinic(this.NewClinicCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/doctor/add-doctor')\n        console.log(this.NewClinicCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewClinicCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Clinic</h1>\r\n          <hr>\r\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\r\n            \r\n          <!-- Clinic Name-->\r\n           \r\n          <div class=\"form-group\">\r\n            <label for=\"clinic_name\">Clinic Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"clinic_name\" [class.is-invalid]=\"registrationForm.get('clinic_name').invalid && registrationForm.get('clinic_name').touched\" \r\n            placeholder=\"Enter Clinic Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('clinic_name').valid || registrationForm.get('clinic_name').untouched\" class=\"text-danger\"> Clinic Name is required </small>\r\n          </div>\r\n\r\n        \r\n             <!-- License NUMBER -->\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"license_number\">License Number</label>\r\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\r\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\r\n                                  formControlName=\"license_number\"\r\n                                  placeholder=\"Enter your License Number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\r\n                                      registrationForm.get('license_number').untouched\"\r\n                                      class=\"text-danger\">License Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Established Date -->\r\n            <div class=\"form-group\">\r\n              <label for=\"established_date\">Established Date</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\r\n                registrationForm.get('established_date').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\r\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\r\n              registrationForm.get('established_date').untouched\"\r\n              class=\"text-danger\">Established Date is required </small>\r\n            </div>\r\n\r\n\r\n\r\n    \r\n              <!-- EMAIL -->\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email address</label>\r\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\r\n              registrationForm.get('email').touched\" class=\"form-control\"\r\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\r\n              registrationForm.get('email').untouched\"\r\n              class=\"text-danger\"> Email is required </small>\r\n            </div>\r\n\r\n             <!-- Password -->\r\n             <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"password\"  minlength=\"8\" \r\n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\r\n              registrationForm.get('password').touched\"\r\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\r\n              registrationForm.get('password').untouched\"\r\n              class=\"text-danger\"> Password is required </small>\r\n            </div>\r\n\r\n\r\n             <!-- Doctor Name-->\r\n          <div class=\"form-group\">\r\n            <label for=\"doctor_name\">Doctor Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"doctor_name\" [class.is-invalid]=\"registrationForm.get('doctor_name').invalid && registrationForm.get('doctor_name').touched\" \r\n            placeholder=\"Enter Doctor Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('doctor_name').valid || registrationForm.get('doctor_name').untouched\" class=\"text-danger\"> Doctor Name is required </small>\r\n          </div>\r\n\r\n          <!-- GENDER -->\r\n            <div class=\"form-group\" [class.is-invalid]=\"registrationForm.get('gender').invalid &&\r\n            registrationForm.get('gender').touched\" >    \r\n              <label for=\"Gender\">Gender</label>\r\n\r\n              <div class=\"custom-control custom-radio\">\r\n                <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\r\n                <label class=\"custom-control-label\" for=\"Male\">Male</label>\r\n              </div>\r\n                \r\n              <div class=\"custom-control custom-radio\">\r\n                <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\r\n                <label class=\"custom-control-label\" for=\"Female\">Female</label>\r\n              </div>   \r\n              <small [class.d-none]=\"registrationForm.get('gender').valid ||\r\n              registrationForm.get('gender').untouched\"\r\n              class=\"text-danger\"> Gender is required </small>\r\n            </div>\r\n\r\n            <!-- Age -->\r\n            <div class=\"form-group\">\r\n              <label for=\"age\">Age</label>\r\n              <input type=\"number\" \r\n               \r\n              [class.is-invalid]=\"registrationForm.get('age').invalid &&\r\n              registrationForm.get('age').touched\" \r\n              class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('age').valid ||\r\n              registrationForm.get('age').untouched\"\r\n              class=\"text-danger\"> Age is required </small>\r\n            </div>\r\n\r\n            <!-- Date of Birth -->\r\n            <div class=\"form-group\">\r\n              <label for=\"dob\">Date of Birth</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\r\n                registrationForm.get('dob').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\r\n                  registrationForm.get('dob').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\r\n              registrationForm.get('dob').untouched\"\r\n              class=\"text-danger\"> Date of birth is required </small>\r\n            </div>\r\n\r\n            <!-- Qualification -->\r\n          <div class=\"form-group\">\r\n            <label for=\"qualification\">Qualification</label>\r\n            <select formControlName=\"qualification\"  [class.is-invalid]=\"registrationForm.get('qualification').invalid &&\r\n            registrationForm.get('qualification').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select Qualification</option>\r\n                <option *ngFor=\"let qualification of qualificationList\">{{qualification}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('qualification').valid ||\r\n            registrationForm.get('qualification').untouched\"\r\n            class=\"text-danger\"> Qualification is required </small>\r\n          </div>\r\n\r\n\r\n            <!-- CLINIC ADDRESS -->\r\n            <h3 class=\"h5 mb-3 font-weight-normal\">Clinic Address</h3>\r\n            <hr>\r\n              <!-- ADDRESS STREET -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"street\">Street</label>\r\n              <input type=\"text\" minlength=\"5\" \r\n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\r\n                                registrationForm.get('street').touched\" class=\"form-control\"\r\n                                  formControlName=\"street\"\r\n                                  placeholder=\"Enter your street\" >\r\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\r\n                                      registrationForm.get('street').untouched\"\r\n                                      class=\"text-danger\"> Street is required </small>\r\n            </div>\r\n\r\n\r\n            \r\n              <!-- ADDRESS CITY -->\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">City</label>\r\n              <input type=\"text\"  minlength=\"2\" \r\n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\r\n                                registrationForm.get('city').touched\" class=\"form-control\"\r\n                                  formControlName=\"city\"\r\n                                  placeholder=\"Enter your city\" >\r\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\r\n                                      registrationForm.get('city').untouched\"\r\n                                      class=\"text-danger\"> City is required </small>\r\n            </div>\r\n\r\n            <!-- ADDRESS LANDMARK -->\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"landmark\">Landmark</label>\r\n            <input type=\"text\"  minlength=\"2\" \r\n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\r\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\r\n                                formControlName=\"landmark\"\r\n                                placeholder=\"Enter your landmark\" >\r\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\r\n                                    registrationForm.get('landmark').untouched\"\r\n                                    class=\"text-danger\"> Landmark is required </small>\r\n          </div>\r\n\r\n          <!-- ADDRESS STATE -->\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\r\n            registrationForm.get('state').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select State</option>\r\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\r\n            registrationForm.get('state').untouched\"\r\n            class=\"text-danger\"> State is required </small>\r\n          </div>\r\n\r\n            \r\n              <!-- ADDRESS PINCODE -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"pincode\">Pincode</label>\r\n              <input type=\"number\"  minlength=\"6\" \r\n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\r\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\r\n                                  formControlName=\"pincode\"\r\n                                  placeholder=\"Enter your last name\" >\r\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\r\n                                      registrationForm.get('pincode').untouched\"\r\n                                      class=\"text-danger\"> Pincode is required </small>\r\n            </div>\r\n          \r\n            <!-- Contact number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"contact_number\">Contact Number</label>\r\n              <input type=\"number\"   minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\r\n              registrationForm.get('contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\r\n\r\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\r\n              registrationForm.get('contact_number').untouched\"\r\n              class=\"text-danger\"> Contact Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Emergency Contact Number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\r\n              <input type=\"number\"  minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\r\n              registrationForm.get('emergency_contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\r\n              registrationForm.get('emergency_contact_number').untouched\"\r\n              class=\"text-danger\"> Emergency Contact Number is required </small>\r\n            </div>\r\n            \r\n\r\n\r\n              <!-- Clinic Document -->\r\n              <div class=\"form-group\">\r\n                <label for=\"clinic_document\">Clinic Document</label>\r\n                    <div class=\"custom-file\">\r\n                    <label for=\"clinic_document\" class=\"custom-file-label\">Clinic Document </label>\r\n                    <input type=\"file\" class=\"custom-file-input\"\r\n                      [class.is-invalid]=\"registrationForm.get('clinic_document').invalid &&\r\n                    registrationForm.get('clinic_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \r\n\r\n                    <small [class.d-none]=\"registrationForm.get('clinic_document').valid ||\r\n                    registrationForm.get('clinic_document').untouched\"\r\n                    class=\"text-danger\"> Clinic Document is required </small>\r\n              </div>\r\n            </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Clinic</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { ClinicDetails } from 'src/app/clinic/clinic-login/authentication-clinic.service';\n\n@Component({\n  selector: 'app-clinic-details',\n  templateUrl: './clinic-details.component.html',\n  styleUrls: ['./clinic-details.component.css']\n})\nexport class ClinicDetailsComponent implements OnInit {\n\n  clinic_id: string;\n  clinicDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('clinic_id')) {\n        this.clinic_id = parameter.get('clinic_id');\n        console.log(this.clinic_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getClinicDetails();\n\n  }\n\n  getClinicDetails(){\n    this.httpClient.get<ClinicDetails>(`http://127.0.0.1:5000/api/clinic/${this.clinic_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.clinicDetails = response;\n      console.log(typeof this.clinicDetails.dob)\n    })\n    console.log(this.clinicDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Clinic Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Clinic Name</th>\n            <td>{{clinicDetails.clinic_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{clinicDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{clinicDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Doctor Name</th>\n            <td>{{clinicDetails.doctor_name}}</td>\n        </tr>\n          \n        <tr>\n            <th>Qualification</th>\n            <td>{{clinicDetails.qualification}}</td>\n        </tr>\n\n        <tr>\n            <th>Gender</th>\n            <td>{{clinicDetails.gender}}</td>\n        </tr>\n\n        <tr>\n            <th>Age</th>\n            <td>{{clinicDetails.age}}</td>\n        </tr>\n\n        <tr>\n            <th>Date of Birth</th>\n            <td>{{clinicDetails.dob | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{clinicDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{clinicDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{clinicDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{clinicDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{clinicDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{clinicDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{clinicDetails.landmark}}</td>\n        </tr>\n   \n      \n   \n    </table>\n\n        <a [href]=\"clinicDetails.clinic_document\" target=\"_blank\">View Pdf</a>\n    <!-- <pdf-viewer src={{clinicDetails.clinic_document}} [external-link-target]=\"'blank'\" ></pdf-viewer> -->\n        \n        \n\n<!-- <pdf-viewer id=\"pdf-report-id\" class=\"pdf-container\" src={{clinicDetails.clinic_document}} [original-size]=\"false\" [fit-to-page]=\"true\"\n    [render-text]=\"true\" [zoom]=\"1\" (text-layer-rendered)=\"textLayerRendered($event)\">\n</pdf-viewer>\n \n \n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-list',\n  templateUrl: './clinic-list.component.html',\n  styleUrls: ['./clinic-list.component.css']\n})\nexport class ClinicListComponent implements OnInit {\n\n  clinics;\n  searchText= this.clinics\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get('http://127.0.0.1:5000/api/clinics/clinic-list').subscribe(users => (this.clinics = users))\n    console.log(this.clinics)\n\n   \n  }\n\n  NewClinic(){\n    this.route.navigateByUrl('/admin/clinic/add-clinic')\n  }\n    \n}\n\n","<div class=\"container\">\n    <h2>List of Clinics</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewClinic()\">New Clinic</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Clinic by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let clinic of clinics | filter:searchText\">\n      \n                \n         <td [routerLink]=\"['/admin/clinic/details/',clinic._id]\"> {{clinic.clinic_name}} </td>\n \n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, AbstractControl } from '@angular/forms';\nimport { AuthenticationDoctorService, AddDoctor } from 'src/app/doctor/doctor-login/authentication-doctor.service';\nimport { Router } from '@angular/router';\n// import { NewDoctorDetails } from './new-doctor-details';\n\n\n@Component({\n  selector: 'app-add-doctor',\n  templateUrl: './add-doctor.component.html',\n  styleUrls: ['./add-doctor.component.css']\n})\nexport class AddDoctorComponent{\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationDoctorService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    first_name: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    last_name: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    gender:['',Validators.required],\n    dob: ['',[ Validators.required,this.DateValidator]],\n    age:['',Validators.required],\n    qualification: ['', Validators.required],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    contact_number: ['',Validators.required],\n    profile_photo: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    doctor_document: ['', Validators.required],\n   });\n\n\n   selectFile(event) {\n    const doctor_document = (event.target as HTMLInputElement).files[0];\n    console.log(doctor_document);\n    this.registrationForm.get('doctor_document').patchValue(doctor_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n  selectFileProfilePhoto(event) {\n    const profile_pic = (event.target as HTMLInputElement).files[0];\n    console.log(profile_pic);\n    this.registrationForm.get('profile_photo').patchValue(profile_pic);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n  NewDoctorcredentials: AddDoctor ;\n  onSubmit(){\n    this.NewDoctorcredentials = this.registrationForm.value;\n    this.auth.AddUser(this.NewDoctorcredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/doctor/add-doctor')\n        console.log(this.NewDoctorcredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewDoctorcredentials)\n        \n      }\n    )\n  }\n\n\n\n\n  \n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Doctor</h1>\n          <hr>\n          <h3 class=\"h5 mb-3 font-weight-normal\">Basic Information</h3>\n          \n            <!-- First Name -->\n           \n              <div class=\"form-group\">\n                <label for=\"first_name\">First Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"first_name\" \n                class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n                [class.is-invalid]=\"registrationForm.get('first_name').invalid && registrationForm.get('first_name').touched\" \n                placeholder=\"Enter your first name\" >\n\n              <small [class.d-none]=\"registrationForm.get('first_name').valid || registrationForm.get('first_name').untouched\" class=\"text-danger\"> First Name is required </small>\n\n              </div>\n\n            <!-- Last Name -->\n\n              <div class=\"form-group\">\n                <label for=\"last_name\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"last_name\" \n                class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n                [class.is-invalid]=\"registrationForm.get('last_name').invalid && registrationForm.get('last_name').touched\" \n                placeholder=\"Enter your last name\" >\n\n              <small [class.d-none]=\"registrationForm.get('last_name').valid || registrationForm.get('last_name').untouched\" class=\"text-danger\"> Last Name is required </small>\n\n              </div>\n\n                \n      \n                <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n            <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n            <!-- PROFILE PHOTO -->\n            <div class=\"form-group\">\n              <label for=\"profile_photo\">Profile Photo</label>\n              <input type=\"file\" class=\"form-control-file\"\n                [class.is-invalid]=\"registrationForm.get('profile_photo').invalid &&\n              registrationForm.get('profile_photo').touched\" (change)=\"selectFileProfilePhoto($event)\" accept=\"image/*\"> \n\n              <small [class.d-none]=\"registrationForm.get('profile_photo').valid ||\n              registrationForm.get('profile_photo').untouched\"\n              class=\"text-danger\"> Profile Photo is required </small>\n            </div>\n\n            <!-- GENDER -->\n              <div>    \n                <label for=\"Gender\">Gender</label>\n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Male\">Male</label>\n                </div>  \n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Female\">Female</label>\n                </div>  \n                  \n              </div>\n\n               <!-- Date of Birth -->\n            <div class=\"form-group\">\n              <label for=\"dob\">Date of Birth</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\n                registrationForm.get('dob').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\n                  registrationForm.get('dob').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\n              registrationForm.get('dob').untouched\"\n              class=\"text-danger\"> Date of birth is required </small>\n            </div>\n\n            <!-- Age -->\n            <div class=\"form-group\">\n              <label for=\"age\">Age</label>\n              <input type=\"number\" \n               \n              [class.is-invalid]=\"registrationForm.get('age').invalid &&\n              registrationForm.get('age').touched\" \n              class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\n\n              <small [class.d-none]=\"registrationForm.get('age').valid ||\n              registrationForm.get('age').untouched\"\n              class=\"text-danger\"> Age is required </small>\n            </div>\n       \n              <h3 class=\"h5 mb-3 font-weight-normal\">Qualifications</h3>\n              <hr>\n\n              <!-- Qualification -->\n          <div class=\"form-group\">\n            <label for=\"qualification\">Qualification</label>\n            <select formControlName=\"qualification\"  [class.is-invalid]=\"registrationForm.get('qualification').invalid &&\n            registrationForm.get('qualification').touched\"\n            class=\"form-control\">\n                <option disabled>Select Qualification</option>\n                <option *ngFor=\"let qualification of qualificationList\">{{qualification}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('qualification').valid ||\n            registrationForm.get('qualification').untouched\"\n            class=\"text-danger\"> Qualification is required </small>\n          </div>\n\n\n          <!-- Doctor Home ADDRESS -->\n          <h3 class=\"h5 mb-3 font-weight-normal\">Permanent Address</h3>\n          <hr>\n            <!-- ADDRESS STREET -->\n        \n          <div class=\"form-group\">\n            <label for=\"street\">Street</label>\n            <input type=\"text\" minlength=\"5\" \n            maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                              registrationForm.get('street').touched\" class=\"form-control\"\n                                formControlName=\"street\"\n                                placeholder=\"Enter your street\" >\n            <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                    registrationForm.get('street').untouched\"\n                                    class=\"text-danger\"> Street is required </small>\n          </div>\n\n\n          \n            <!-- ADDRESS CITY -->\n\n          <div class=\"form-group\">\n            <label for=\"city\">City</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                              registrationForm.get('city').touched\" class=\"form-control\"\n                                formControlName=\"city\"\n                                placeholder=\"Enter your city\" >\n            <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                    registrationForm.get('city').untouched\"\n                                    class=\"text-danger\"> City is required </small>\n          </div>\n\n          <!-- ADDRESS LANDMARK -->\n\n        <div class=\"form-group\">\n          <label for=\"landmark\">Landmark</label>\n          <input type=\"text\"  minlength=\"2\" \n          maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                            registrationForm.get('landmark').touched\" class=\"form-control\"\n                              formControlName=\"landmark\"\n                              placeholder=\"Enter your landmark\" >\n          <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                  registrationForm.get('landmark').untouched\"\n                                  class=\"text-danger\"> Landmark is required </small>\n        </div>\n\n        <!-- ADDRESS STATE -->\n        <div class=\"form-group\">\n          <label for=\"state\">State</label>\n          <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n          registrationForm.get('state').touched\"\n          class=\"form-control\">\n              <option disabled>Select State</option>\n              <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n          </select>\n\n          <small [class.d-none]=\"registrationForm.get('state').valid ||\n          registrationForm.get('state').untouched\"\n          class=\"text-danger\"> State is required </small>\n        </div>\n\n          \n            <!-- ADDRESS PINCODE -->\n        \n          <div class=\"form-group\">\n            <label for=\"pincode\">Pincode</label>\n            <input type=\"number\"  minlength=\"6\" \n            maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                              registrationForm.get('pincode').touched\" class=\"form-control\"\n                                formControlName=\"pincode\"\n                                placeholder=\"Enter your pincode\" >\n            <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                    registrationForm.get('pincode').untouched\"\n                                    class=\"text-danger\"> Pincode is required </small>\n          </div>\n\n\n\n           <!-- Contact number -->\n           <div class=\"form-group\">\n            <label for=\"contact_number\">Contact Number</label>\n            <input type=\"number\"   minlength=\"10\" \n            maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n            registrationForm.get('contact_number').touched\"\n             class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n             <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n            registrationForm.get('contact_number').untouched\"\n            class=\"text-danger\"> Contact Number is required </small>\n          </div>\n\n\n          <!-- Emergency Contact Number -->\n          <div class=\"form-group\">\n            <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n            <input type=\"number\"  minlength=\"10\" \n            maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n            registrationForm.get('emergency_contact_number').touched\"\n             class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n            <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n            registrationForm.get('emergency_contact_number').untouched\"\n            class=\"text-danger\"> Emergency Contact Number is required </small>\n          </div>\n          \n\n\n            <!-- Doctor Document -->\n            <div class=\"form-group\">\n              <label for=\"doctor_document\">Clinic Document</label>\n                  <div class=\"custom-file\">\n                  <label for=\"doctor_document\" class=\"custom-file-label\">Clinic Document </label>\n                  <input type=\"file\" class=\"custom-file-input\"\n                    [class.is-invalid]=\"registrationForm.get('doctor_document').invalid &&\n                  registrationForm.get('doctor_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf, .doc, .docx\"> \n\n                  <small [class.d-none]=\"registrationForm.get('doctor_document').valid ||\n                  registrationForm.get('doctor_document').untouched\"\n                  class=\"text-danger\"> Clinic Document is required </small>\n            </div>\n          </div>\n\n            \n              <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Doctor</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DoctorDetails } from 'src/app/doctor/doctor-login/authentication-doctor.service';\n\n@Component({\n  selector: 'app-doctor-details',\n  templateUrl: './doctor-details.component.html',\n  styleUrls: ['./doctor-details.component.css']\n})\nexport class DoctorDetailsComponent implements OnInit {\n\n  doctor_id: string;\n  doctorDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('doctor_id')) {\n        this.doctor_id = parameter.get('doctor_id');\n        console.log(this.doctor_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getClinicDetails();\n\n  }\n\n  getClinicDetails(){\n    this.httpClient.get<DoctorDetails>(`http://127.0.0.1:5000/api/doctor/${this.doctor_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.doctorDetails = response;\n      console.log(typeof this.doctorDetails.dob)\n    })\n    console.log(this.doctorDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Doctor Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n\n        <div class=\"text-center justify-content-center\">\n            <img src={{doctorDetails.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n          </div>\n    \n        <tr>\n            <th>First Name</th>\n            <td>{{doctorDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Last Name</th>\n            <td>{{doctorDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{doctorDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email</th>\n            <td>{{doctorDetails.email}}</td>\n        </tr>\n          \n        <tr>\n            <th>Qualification</th>\n            <td>{{doctorDetails.qualification}}</td>\n        </tr>\n\n        <tr>\n            <th>Gender</th>\n            <td>{{doctorDetails.gender}}</td>\n        </tr>\n\n        <!-- <tr>\n            <th>Age</th>\n            <td>{{doctorDetails.age}}</td>\n        </tr> -->\n\n        <tr>\n            <th>Date of Birth</th>\n            <td>{{doctorDetails.dob | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{doctorDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{doctorDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{doctorDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{doctorDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{doctorDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{doctorDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{doctorDetails.landmark}}</td>\n        </tr>\n   \n        <a [href]=\"doctorDetails.doctor_document\" target=\"_blank\">View Doctor Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctors-list',\n  templateUrl: './doctors-list.component.html',\n  styleUrls: ['./doctors-list.component.css']\n})\nexport class DoctorsListComponent implements OnInit {\n  doctors:string\n  searchText= this.doctors\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/doctor/doctor-list').subscribe(users => (this.doctors = users as string))\n    console.log(this.doctors)\n  }\n\n\n\n\n  NewDoctor(){\n    this.route.navigateByUrl('/admin/doctor/add-doctor')\n  }\n}\n","<div class=\"container\">\r\n    <h2>List of Doctors</h2>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewDoctor()\">New Doctor</button>\r\n    <br>\r\n    <br>\r\n    <div class=\"search-users\">\r\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Doctor by name \">\r\n        <br>\r\n    </div>\r\n<table class=\"table table-dark table-hover\">\r\n    <tbody>\r\n    <tr *ngFor=\"let doctor of doctors | filter:searchText\">\r\n        <!-- <td class=\"text-left\"> -->\r\n            <!-- <a > -->\r\n            <!-- <a (click)=\"edit(user)\"> --> \r\n                \r\n         <td [routerLink]=\"['/admin/doctor/details',doctor._id]\"> {{doctor.first_name}}  {{doctor.last_name}}</td>\r\n                  \r\n                <!-- <input *ngIf=\"user==editUser\" [(ngModel)]=\"user.name\" (blur)=\"update(user)\" (keyup.enter)=\"update(user)\"> -->\r\n            <!-- </a> -->\r\n        <!-- </td> -->\r\n    </tr>\r\n</tbody> \r\n</table> \r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationHospitalService, HospitalDetails, AddHospital } from 'src/app/hospital/hospital-login/authentication-hospital.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-hospital',\n  templateUrl: './add-hospital.component.html',\n  styleUrls: ['./add-hospital.component.css']\n})\nexport class AddHospitalComponent {\n\n\n  qualification : string;\n  qualificationList: any = ['MBBS', 'BDS', 'ENT']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n  changeQualification(e) {\n    console.log(e.target.value);\n  }\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationHospitalService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    hospital_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    owner_name: ['',Validators.required],\n    street: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    hospital_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const hospital_document = (event.target as HTMLInputElement).files[0];\n    console.log(hospital_document);\n    this.registrationForm.get('hospital_document').patchValue(hospital_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const established_date = control;\n    if (established_date.pristine) {\n      return null;\n    }\n    const current_date = new Date(established_date.value)\n    if( current_date > new Date()){\n      established_date.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewHospitalCredentials: AddHospital;\n  onSubmit(){\n    this.NewHospitalCredentials = this.registrationForm.value;\n    this.auth.AddHospital(this.NewHospitalCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/hospital/add-hospital')\n        console.log(this.NewHospitalCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewHospitalCredentials)\n        \n      }\n    )\n  }  \n}\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Hospital</h1>\r\n          <hr>\r\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\r\n          \r\n          <!-- Hospital Name-->\r\n           \r\n          <div class=\"form-group\">\r\n            <label for=\"hospital_name\">Hospital Name</label>\r\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n            formControlName=\"hospital_name\" [class.is-invalid]=\"registrationForm.get('hospital_name').invalid && registrationForm.get('hospital_name').touched\" \r\n            placeholder=\"Enter Hospital Name\" >\r\n              <small [class.d-none]=\"registrationForm.get('hospital_name').valid || registrationForm.get('hospital_name').untouched\" class=\"text-danger\"> Hospital Name is required </small>\r\n          </div>\r\n\r\n        \r\n             <!-- License NUMBER -->\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"license_number\">License Number</label>\r\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\r\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\r\n                                  formControlName=\"license_number\"\r\n                                  placeholder=\"Enter your License Number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\r\n                                      registrationForm.get('license_number').untouched\"\r\n                                      class=\"text-danger\">License Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Established Date -->\r\n            <div class=\"form-group\">\r\n              <label for=\"established_date\">Established Date</label>\r\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\r\n                registrationForm.get('established_date').touched\" \r\n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\r\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\r\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\r\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\r\n              registrationForm.get('established_date').untouched\"\r\n              class=\"text-danger\">Established Date is required </small>\r\n            </div>\r\n\r\n\r\n\r\n    \r\n              <!-- EMAIL -->\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email address</label>\r\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\r\n              registrationForm.get('email').touched\" class=\"form-control\"\r\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\r\n              registrationForm.get('email').untouched\"\r\n              class=\"text-danger\"> Email is required </small>\r\n            </div>\r\n\r\n             <!-- Password -->\r\n             <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"password\"  minlength=\"8\" \r\n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\r\n              registrationForm.get('password').touched\"\r\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\r\n\r\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\r\n              registrationForm.get('password').untouched\"\r\n              class=\"text-danger\"> Password is required </small>\r\n            </div>\r\n\r\n\r\n             <!-- Owner Name-->\r\n             <div class=\"form-group\">\r\n              <label for=\"owner_name\">Owner Name</label>\r\n              <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\r\n              formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \r\n              placeholder=\"Enter Owner Name\" >\r\n                <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\r\n            </div>\r\n  \r\n\r\n\r\n\r\n\r\n            <!-- HOSPITAL ADDRESS -->\r\n            <h3 class=\"h5 mb-3 font-weight-normal\">Hospital Address</h3>\r\n            <hr>\r\n              <!-- ADDRESS STREET -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"street\">Street</label>\r\n              <input type=\"text\" minlength=\"5\" \r\n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\r\n                                registrationForm.get('street').touched\" class=\"form-control\"\r\n                                  formControlName=\"street\"\r\n                                  placeholder=\"Enter your street\" >\r\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\r\n                                      registrationForm.get('street').untouched\"\r\n                                      class=\"text-danger\"> Street is required </small>\r\n            </div>\r\n\r\n\r\n            \r\n              <!-- ADDRESS CITY -->\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">City</label>\r\n              <input type=\"text\"  minlength=\"2\" \r\n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\r\n                                registrationForm.get('city').touched\" class=\"form-control\"\r\n                                  formControlName=\"city\"\r\n                                  placeholder=\"Enter your city\" >\r\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\r\n                                      registrationForm.get('city').untouched\"\r\n                                      class=\"text-danger\"> City is required </small>\r\n            </div>\r\n\r\n            <!-- ADDRESS LANDMARK -->\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"landmark\">Landmark</label>\r\n            <input type=\"text\"  minlength=\"2\" \r\n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\r\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\r\n                                formControlName=\"landmark\"\r\n                                placeholder=\"Enter your landmark\" >\r\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\r\n                                    registrationForm.get('landmark').untouched\"\r\n                                    class=\"text-danger\"> Landmark is required </small>\r\n          </div>\r\n\r\n          <!-- ADDRESS STATE -->\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\r\n            registrationForm.get('state').touched\"\r\n            class=\"form-control\">\r\n                <option disabled>Select State</option>\r\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\r\n            </select>\r\n\r\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\r\n            registrationForm.get('state').untouched\"\r\n            class=\"text-danger\"> State is required </small>\r\n          </div>\r\n\r\n            \r\n              <!-- ADDRESS PINCODE -->\r\n          \r\n            <div class=\"form-group\">\r\n              <label for=\"pincode\">Pincode</label>\r\n              <input type=\"number\"  minlength=\"6\" \r\n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\r\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\r\n                                  formControlName=\"pincode\"\r\n                                  placeholder=\"Enter your last name\" >\r\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\r\n                                      registrationForm.get('pincode').untouched\"\r\n                                      class=\"text-danger\"> Pincode is required </small>\r\n            </div>\r\n          \r\n            <!-- Contact number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"contact_number\">Contact Number</label>\r\n              <input type=\"number\"   minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\r\n              registrationForm.get('contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\r\n\r\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\r\n              registrationForm.get('contact_number').untouched\"\r\n              class=\"text-danger\"> Contact Number is required </small>\r\n            </div>\r\n\r\n\r\n            <!-- Emergency Contact Number -->\r\n            <div class=\"form-group\">\r\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\r\n              <input type=\"number\"  minlength=\"10\" \r\n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\r\n              registrationForm.get('emergency_contact_number').touched\"\r\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\r\n\r\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\r\n              registrationForm.get('emergency_contact_number').untouched\"\r\n              class=\"text-danger\"> Emergency Contact Number is required </small>\r\n            </div>\r\n            \r\n\r\n\r\n              <!-- Hospital Document -->\r\n              <div class=\"form-group\">\r\n                <label for=\"hospital_document\">Hospital Document</label>\r\n                    <div class=\"custom-file\">\r\n                    <label for=\"hospital_document\" class=\"custom-file-label\">Hospital Document </label>\r\n                    <input type=\"file\" class=\"custom-file-input\"\r\n                      [class.is-invalid]=\"registrationForm.get('hospital_document').invalid &&\r\n                    registrationForm.get('hospital_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \r\n\r\n                    <small [class.d-none]=\"registrationForm.get('hospital_document').valid ||\r\n                    registrationForm.get('hospital_document').untouched\"\r\n                    class=\"text-danger\"> Hospital Document is required </small>\r\n              </div>\r\n            </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Hospital</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute } from '@angular/router';\nimport { HospitalDetails } from 'src/app/hospital/hospital-login/authentication-hospital.service';\n\n@Component({\n  selector: 'app-hospital-details',\n  templateUrl: './hospital-details.component.html',\n  styleUrls: ['./hospital-details.component.css']\n})\nexport class HospitalDetailsComponent implements OnInit {\n\n  hospital_id: string;\n  hospitalDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('hospital_id')) {\n        this.hospital_id = parameter.get('hospital_id');\n        console.log(this.hospital_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.gethospitalDetails();\n\n  }\n\n  gethospitalDetails(){\n    this.httpClient.get<HospitalDetails>(`http://127.0.0.1:5000/api/hospital/${this.hospital_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.hospitalDetails = response;\n      console.log(typeof this.hospitalDetails.dob)\n    })\n    console.log(this.hospitalDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Hospital Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Hospital Name</th>\n            <td>{{hospitalDetails.hospital_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{hospitalDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{hospitalDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Owner Name</th>\n            <td>{{hospitalDetails.owner_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{hospitalDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{hospitalDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{hospitalDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{hospitalDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{hospitalDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{hospitalDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{hospitalDetails.landmark}}</td>\n        </tr>\n\n        <a [href]=\"hospitalDetails.hospital_document\" target=\"_blank\">View Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-list',\n  templateUrl: './hospital-list.component.html',\n  styleUrls: ['./hospital-list.component.css']\n})\nexport class HospitalListComponent implements OnInit {\n  hospitals:string\n  searchText= this.hospitals\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/hospital/list').subscribe(users => (this.hospitals = users as string))\n    console.log(this.hospitals)\n  }\n\n\n\n\n\n  NewHospital(){\n    this.route.navigateByUrl('/admin/hospital/add-hospital')\n  }\n}","<div class=\"container\">\n    <h2>List of Hospitals</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewHospital()\">New Hospital</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Hospital by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let hospital of hospitals | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/hospital/details/',hospital._id]\"> {{hospital.hospital_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationLaboratoryService, AddLaboratory } from 'src/app/laboratory/laboratory-login/authentication-Laboratory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-laboratory',\n  templateUrl: './add-laboratory.component.html',\n  styleUrls: ['./add-laboratory.component.css']\n})\nexport class AddLaboratoryComponent {\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationLaboratoryService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    laboratory_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    street: ['', Validators.required],\n    owner_name: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    laboratory_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const laboratory_document = (event.target as HTMLInputElement).files[0];\n    console.log(laboratory_document);\n    this.registrationForm.get('laboratory_document').patchValue(laboratory_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewLaboratoryCredentials: AddLaboratory;\n  onSubmit(){\n    this.NewLaboratoryCredentials = this.registrationForm.value;\n    this.auth.AddLaboratory(this.NewLaboratoryCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/laboratory/add-laboratory')\n        console.log(this.NewLaboratoryCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewLaboratoryCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Laboratory</h1>\n          <hr>\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\n            \n          <!-- Laboratory Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"laboratory_name\">Laboratory Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"laboratory_name\" [class.is-invalid]=\"registrationForm.get('laboratory_name').invalid && registrationForm.get('laboratory_name').touched\" \n            placeholder=\"Enter Laboratory Name\" >\n              <small [class.d-none]=\"registrationForm.get('laboratory_name').valid || registrationForm.get('laboratory_name').untouched\" class=\"text-danger\"> Laboratory Name is required </small>\n          </div>\n\n             \n          <!-- Owner Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"owner_name\">Owner Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \n            placeholder=\"Enter Owner Name\" >\n              <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\n          </div>\n\n        \n             <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n\n            <!-- Established Date -->\n            <div class=\"form-group\">\n              <label for=\"established_date\">Established Date</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\n                registrationForm.get('established_date').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\n              registrationForm.get('established_date').untouched\"\n              class=\"text-danger\">Established Date is required </small>\n            </div>\n\n\n\n    \n              <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n    \n            <!-- LABORATORY ADDRESS -->\n            <h3 class=\"h5 mb-3 font-weight-normal\">Laboratory Address</h3>\n            <hr>\n              <!-- ADDRESS STREET -->\n          \n            <div class=\"form-group\">\n              <label for=\"street\">Street</label>\n              <input type=\"text\" minlength=\"5\" \n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                registrationForm.get('street').touched\" class=\"form-control\"\n                                  formControlName=\"street\"\n                                  placeholder=\"Enter your street\" >\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                      registrationForm.get('street').untouched\"\n                                      class=\"text-danger\"> Street is required </small>\n            </div>\n\n\n            \n              <!-- ADDRESS CITY -->\n\n            <div class=\"form-group\">\n              <label for=\"city\">City</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                registrationForm.get('city').touched\" class=\"form-control\"\n                                  formControlName=\"city\"\n                                  placeholder=\"Enter your city\" >\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                      registrationForm.get('city').untouched\"\n                                      class=\"text-danger\"> City is required </small>\n            </div>\n\n            <!-- ADDRESS LANDMARK -->\n\n          <div class=\"form-group\">\n            <label for=\"landmark\">Landmark</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\n                                formControlName=\"landmark\"\n                                placeholder=\"Enter your landmark\" >\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                    registrationForm.get('landmark').untouched\"\n                                    class=\"text-danger\"> Landmark is required </small>\n          </div>\n\n          <!-- ADDRESS STATE -->\n          <div class=\"form-group\">\n            <label for=\"state\">State</label>\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n            registrationForm.get('state').touched\"\n            class=\"form-control\">\n                <option disabled>Select State</option>\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\n            registrationForm.get('state').untouched\"\n            class=\"text-danger\"> State is required </small>\n          </div>\n\n            \n              <!-- ADDRESS PINCODE -->\n          \n            <div class=\"form-group\">\n              <label for=\"pincode\">Pincode</label>\n              <input type=\"number\"  minlength=\"6\" \n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\n                                  formControlName=\"pincode\"\n                                  placeholder=\"Enter your last name\" >\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                      registrationForm.get('pincode').untouched\"\n                                      class=\"text-danger\"> Pincode is required </small>\n            </div>\n          \n            <!-- Contact number -->\n            <div class=\"form-group\">\n              <label for=\"contact_number\">Contact Number</label>\n              <input type=\"number\"   minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n              registrationForm.get('contact_number').touched\"\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n              registrationForm.get('contact_number').untouched\"\n              class=\"text-danger\"> Contact Number is required </small>\n            </div>\n\n\n            <!-- Emergency Contact Number -->\n            <div class=\"form-group\">\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n              <input type=\"number\"  minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n              registrationForm.get('emergency_contact_number').touched\"\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n              registrationForm.get('emergency_contact_number').untouched\"\n              class=\"text-danger\"> Emergency Contact Number is required </small>\n            </div>\n            \n\n\n              <!-- Laboratory Document -->\n              <div class=\"form-group\">\n                <label for=\"laboratory_document\">Laboratory Document</label>\n                    <div class=\"custom-file\">\n                    <label for=\"laboratory_document\" class=\"custom-file-label\">Laboratory Document </label>\n                    <input type=\"file\" class=\"custom-file-input\"\n                      [class.is-invalid]=\"registrationForm.get('laboratory_document').invalid &&\n                    registrationForm.get('laboratory_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n                    <small [class.d-none]=\"registrationForm.get('laboratory_document').valid ||\n                    registrationForm.get('laboratory_document').untouched\"\n                    class=\"text-danger\"> Laboratory Document is required </small>\n              </div>\n            </div>\n\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Laboratory</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { LaboratoryDetails } from 'src/app/laboratory/laboratory-login/authentication-Laboratory.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-details',\n  templateUrl: './laboratory-details.component.html',\n  styleUrls: ['./laboratory-details.component.css']\n})\nexport class LaboratoryDetailsComponent implements OnInit {\n  laboratory_id: string;\n  laboratoryDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('laboratory_id')) {\n        this.laboratory_id = parameter.get('laboratory_id');\n        console.log(this.laboratory_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getLaboratoryDetails();\n\n  }\n\n  getLaboratoryDetails(){\n    this.httpClient.get<LaboratoryDetails>(`http://127.0.0.1:5000/api/laboratory/${this.laboratory_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.laboratoryDetails = response;\n      console.log(typeof this.laboratoryDetails.dob)\n    })\n    console.log(this.laboratoryDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Laboratory Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Laboratory Name</th>\n            <td>{{laboratoryDetails.laboratory_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{laboratoryDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{laboratoryDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{laboratoryDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{laboratoryDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{laboratoryDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{laboratoryDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{laboratoryDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{laboratoryDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{laboratoryDetails.landmark}}</td>\n        </tr>\n   \n        <a [href]=\"laboratoryDetails.laboratory_document\" target=\"_blank\">View Document PDF</a>\n      \n   \n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-list',\n  templateUrl: './laboratory-list.component.html',\n  styleUrls: ['./laboratory-list.component.css']\n})\nexport class LaboratoryListComponent implements OnInit {\n\n  laboratories:string\n  searchText= this.laboratories\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/laboratory/laboratory-list').subscribe(users => (this.laboratories = users as string))\n    console.log(this.laboratories)\n  }\n\n\n  \n  NewLaboratory(){\n    this.route.navigateByUrl('/admin/laboratory/add-laboratory')\n  }\n}\n","<div class=\"container\">\n    <h2>List of Laboratory</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewLaboratory()\">New Laboratory</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Laboratory by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let laboratory of laboratories | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/laboratory/details/',laboratory._id]\"> {{laboratory.laboratory_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, AbstractControl, Validators } from '@angular/forms';\nimport { AuthenticationMedicalStoreService, AddMedical } from 'src/app/medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-medical-store',\n  templateUrl: './add-medical-store.component.html',\n  styleUrls: ['./add-medical-store.component.css']\n})\nexport class AddMedicalStoreComponent {\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n                    'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n                    'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n                    'Goa','Gujarat','Haryana','Himachal Pradesh',\n                    'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n                    'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n                    'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n                    'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n                    'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n                    ]\n\n\n\n  constructor(public fb:FormBuilder,private auth:AuthenticationMedicalStoreService,private router:Router) { }\n\n\n  registrationForm = this.fb.group({\n    medical_name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n    password: ['', [Validators.required,Validators.min(8),Validators.max(16),Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n    license_number: ['',Validators.required],\n    established_date: ['',[Validators.required,this.DateValidator]],\n    contact_number: ['',Validators.required],\n    emergency_contact_number: ['',Validators.required],\n    street: ['', Validators.required],\n    owner_name: ['', Validators.required],\n    city: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\")]],\n    state: ['', Validators.required],\n    pincode: ['', Validators.required],\n    landmark: ['', Validators.required],\n    medical_document: ['', Validators.required],\n   });\n\n\n\n   selectFile(event) {\n    const medical_document = (event.target as HTMLInputElement).files[0];\n    console.log(medical_document);\n    this.registrationForm.get('medical_document').patchValue(medical_document);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n\n\n   DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n\n  NewLaboratoryCredentials: AddMedical;\n  onSubmit(){\n    this.NewLaboratoryCredentials = this.registrationForm.value;\n    this.auth.AddMedical(this.NewLaboratoryCredentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/admin/medical/add-medical')\n        console.log(this.NewLaboratoryCredentials)\n      },\n      err =>{\n        console.error(err);\n        console.log(this.NewLaboratoryCredentials)\n        \n      }\n    )\n  }  \n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-bold\">Add New Medical</h1>\n          <hr>\n          <h2 class=\"h5 mb-3 font-weight-normal\">Basic Information</h2>\n            \n          <!-- Medical Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"medical_name\">Medical Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"medical_name\" [class.is-invalid]=\"registrationForm.get('medical_name').invalid && registrationForm.get('medical_name').touched\" \n            placeholder=\"Enter Medical Name\" >\n              <small [class.d-none]=\"registrationForm.get('medical_name').valid || registrationForm.get('medical_name').untouched\" class=\"text-danger\"> Medical Name is required </small>\n          </div>\n\n        \n             <!-- License NUMBER -->\n            \n            <div class=\"form-group\">\n              <label for=\"license_number\">License Number</label>\n              <input type=\"text\"  [class.is-invalid]=\"registrationForm.get('license_number').invalid &&\n                                registrationForm.get('license_number').touched\" class=\"form-control\"\n                                  formControlName=\"license_number\"\n                                  placeholder=\"Enter your License Number\" >\n\n              <small [class.d-none]=\"registrationForm.get('license_number').valid ||\n                                      registrationForm.get('license_number').untouched\"\n                                      class=\"text-danger\">License Number is required </small>\n            </div>\n\n\n                 \n          <!-- Owner Name-->\n           \n          <div class=\"form-group\">\n            <label for=\"owner_name\">Owner Name</label>\n            <input type=\"text\" class=\"form-control\" minlength=\"2\" maxlength=\"30\"\n            formControlName=\"owner_name\" [class.is-invalid]=\"registrationForm.get('owner_name').invalid && registrationForm.get('owner_name').touched\" \n            placeholder=\"Enter Owner Name\" >\n              <small [class.d-none]=\"registrationForm.get('owner_name').valid || registrationForm.get('owner_name').untouched\" class=\"text-danger\"> Owner Name is required </small>\n          </div>\n\n\n            <!-- Established Date -->\n            <div class=\"form-group\">\n              <label for=\"established_date\">Established Date</label>\n              <input type=\"date\" [class.is-invalid]=\"registrationForm.get('established_date').invalid &&\n                registrationForm.get('established_date').touched\" \n                 class=\"form-control\" max=\"maxDate\" formControlName=\"established_date\">\n                  <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('established_date').errors?.greaterDate ||\n                  registrationForm.get('established_date').untouched\">Date should not be greater than today</small>\n                 <small [class.d-none]=\"!registrationForm.get('established_date').errors?.required ||\n              registrationForm.get('established_date').untouched\"\n              class=\"text-danger\">Established Date is required </small>\n            </div>\n\n\n\n    \n              <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"email\">Email address</label>\n              <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n              registrationForm.get('email').touched\" class=\"form-control\"\n              formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n              <small [class.d-none]=\"registrationForm.get('email').valid ||\n              registrationForm.get('email').untouched\"\n              class=\"text-danger\"> Email is required </small>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\"  minlength=\"8\" \n              maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n              registrationForm.get('password').touched\"\n              class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n              <small [class.d-none]=\"registrationForm.get('password').valid ||\n              registrationForm.get('password').untouched\"\n              class=\"text-danger\"> Password is required </small>\n            </div>\n\n    \n            <!-- MEDICAL ADDRESS -->\n            <h3 class=\"h5 mb-3 font-weight-normal\">Medical Address</h3>\n            <hr>\n              <!-- ADDRESS STREET -->\n          \n            <div class=\"form-group\">\n              <label for=\"street\">Street</label>\n              <input type=\"text\" minlength=\"5\" \n              maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                registrationForm.get('street').touched\" class=\"form-control\"\n                                  formControlName=\"street\"\n                                  placeholder=\"Enter your street\" >\n              <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                      registrationForm.get('street').untouched\"\n                                      class=\"text-danger\"> Street is required </small>\n            </div>\n\n\n            \n              <!-- ADDRESS CITY -->\n\n            <div class=\"form-group\">\n              <label for=\"city\">City</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                registrationForm.get('city').touched\" class=\"form-control\"\n                                  formControlName=\"city\"\n                                  placeholder=\"Enter your city\" >\n              <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                      registrationForm.get('city').untouched\"\n                                      class=\"text-danger\"> City is required </small>\n            </div>\n\n            <!-- ADDRESS LANDMARK -->\n\n          <div class=\"form-group\">\n            <label for=\"landmark\">Landmark</label>\n            <input type=\"text\"  minlength=\"2\" \n            maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                              registrationForm.get('landmark').touched\" class=\"form-control\"\n                                formControlName=\"landmark\"\n                                placeholder=\"Enter your landmark\" >\n            <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                    registrationForm.get('landmark').untouched\"\n                                    class=\"text-danger\"> Landmark is required </small>\n          </div>\n\n          <!-- ADDRESS STATE -->\n          <div class=\"form-group\">\n            <label for=\"state\">State</label>\n            <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n            registrationForm.get('state').touched\"\n            class=\"form-control\">\n                <option disabled>Select State</option>\n                <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n            </select>\n\n            <small [class.d-none]=\"registrationForm.get('state').valid ||\n            registrationForm.get('state').untouched\"\n            class=\"text-danger\"> State is required </small>\n          </div>\n\n            \n              <!-- ADDRESS PINCODE -->\n          \n            <div class=\"form-group\">\n              <label for=\"pincode\">Pincode</label>\n              <input type=\"number\"  minlength=\"6\" \n              maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                registrationForm.get('pincode').touched\" class=\"form-control\"\n                                  formControlName=\"pincode\"\n                                  placeholder=\"Enter your last name\" >\n              <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                      registrationForm.get('pincode').untouched\"\n                                      class=\"text-danger\"> Pincode is required </small>\n            </div>\n          \n            <!-- Contact number -->\n            <div class=\"form-group\">\n              <label for=\"contact_number\">Contact Number</label>\n              <input type=\"number\"   minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n              registrationForm.get('contact_number').touched\"\n               class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n               <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n              registrationForm.get('contact_number').untouched\"\n              class=\"text-danger\"> Contact Number is required </small>\n            </div>\n\n\n            <!-- Emergency Contact Number -->\n            <div class=\"form-group\">\n              <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n              <input type=\"number\"  minlength=\"10\" \n              maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n              registrationForm.get('emergency_contact_number').touched\"\n               class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n              <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n              registrationForm.get('emergency_contact_number').untouched\"\n              class=\"text-danger\"> Emergency Contact Number is required </small>\n            </div>\n            \n\n\n              <!-- Medical Document -->\n              <div class=\"form-group\">\n                <label for=\"medical_document\">Medical Document</label>\n                    <div class=\"custom-file\">\n                    <label for=\"medical_document\" class=\"custom-file-label\">Medical Document </label>\n                    <input type=\"file\" class=\"custom-file-input\"\n                      [class.is-invalid]=\"registrationForm.get('medical_document').invalid &&\n                    registrationForm.get('medical_document').touched\" (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n                    <small [class.d-none]=\"registrationForm.get('medical_document').valid ||\n                    registrationForm.get('medical_document').untouched\"\n                    class=\"text-danger\"> Medical Document is required </small>\n              </div>\n            </div>\n\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add Medical</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { MedicalDetails } from 'src/app/medicalstore/medicalstore-login/authentication-medicalstore.service';\n\n@Component({\n  selector: 'app-medical-store-details',\n  templateUrl: './medical-store-details.component.html',\n  styleUrls: ['./medical-store-details.component.css']\n})\nexport class MedicalStoreDetailsComponent implements OnInit {\n  medical_id: string;\n  medicalDetails : any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('medical_id')) {\n        this.medical_id = parameter.get('medical_id');\n        console.log(this.medical_id);\n      }\n    })\n   }\n\n\n\n  ngOnInit() {\n    this.getMedicalDetails();\n\n  }\n\n  getMedicalDetails(){\n    this.httpClient.get<MedicalDetails>(`http://127.0.0.1:5000/api/medical/${this.medical_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.medicalDetails = response;\n      console.log(typeof this.medicalDetails.dob)\n    })\n    console.log(this.medicalDetails);\n  }\n\n  // textLayerRendered(e: CustomEvent) {\n  //   let externalLinks: HTMLCollectionOf<HTMLAnchorElement>;\n  //   const pdfReport = document.getElementById('pdf-report-id');\n\n  //   if (pdfReport) {\n  //     externalLinks = pdfReport.getElementsByTagName('a');\n  //   }\n  //   for (let i = 0; i < externalLinks.length; i++) { externalLinks[i].setAttribute('target', '_blank'); }\n  // }\n\n}\n","<div class=\"container\">\n    <h2>Medical Store Details</h2>\n    \n    <table class=\"table table-dark\">\n      \n    \n        <tr>\n            <th>Medical Name</th>\n            <td>{{medicalDetails.medical_name}}</td>\n        </tr>\n\n        <tr>\n            <th>License Number</th>\n            <td>{{medicalDetails.license_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Owner Name</th>\n            <td>{{medicalDetails.owner_name}}</td>\n        </tr>\n\n        <tr>\n            <th>Established Date</th>\n            <td>{{medicalDetails.established_date | date}}</td>\n        </tr>\n\n        <tr>\n            <th>Emergency Contact Number</th>\n            <td>{{medicalDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n            <th>Email Address</th>\n            <td>{{medicalDetails.email}}</td>\n        </tr>\n   \n        <tr>\n            <th>Street</th>\n            <td>{{medicalDetails.street}}</td>\n        </tr>\n   \n        <tr>\n            <th>City</th>\n            <td>{{medicalDetails.city}}</td>\n        </tr>\n   \n        <tr>\n            <th>State</th>\n            <td>{{medicalDetails.state}}</td>\n        </tr>\n   \n        <tr>\n            <th>Pincode</th>\n            <td>{{medicalDetails.pincode}}</td>\n        </tr>\n   \n        <tr>\n            <th>Landmark</th>\n            <td>{{medicalDetails.landmark}}</td>\n        </tr>\n   \n      \n        <a [href]=\"medicalDetails.medical_document\" target=\"_blank\">View Document PDF</a>\n    </table>\n\n\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-store-list',\n  templateUrl: './medical-store-list.component.html',\n  styleUrls: ['./medical-store-list.component.css']\n})\nexport class MedicalStoreListComponent implements OnInit {\n\n  medicalstores:string\n  searchText= this.medicalstores\n\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n\n  ngOnInit(): void {\n    \n    this.httpClient.get('http://127.0.0.1:5000/api/medical/list').subscribe(users => (this.medicalstores = users as string))\n    console.log(this.medicalstores)\n  }\n\n\n  \n  NewMedicalStore(){\n    this.route.navigateByUrl('/admin/medical/add-medical')\n  }\n}\n","<div class=\"container\">\n    <h2>List of Medical Stores</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewMedicalStore()\">New Medical Store</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any Medical Store by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let medical of medicalstores | filter:searchText\">\n                \n         <td [routerLink]=\"['/admin/medical/details/',medical._id]\"> {{medical.medical_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component } from '@angular/core';\nimport { AuthenticationAdminService } from 'src/app/admin/admin-login/authentication-admin.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { NewUserDetails } from './new-user-details';\n// import { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-new-user',\n  templateUrl: './add-new-user.component.html',\n  styleUrls: ['./add-new-user.component.css']\n})\nexport class AddNewUserComponent {\n\n  NewUsercredentials: NewUserDetails\n\n  blood_group : string;\n  blood_group_list: any = ['A+', 'A-', 'B+','B-', 'AB+', 'AB-','O+', 'O-']\n\n\n  marital_status: string;\n  marital_status_list: any = ['Married', 'Unmarried', 'Widowed','Divorced', 'Separated']\n\n  state: string;\n  state_list: any = ['Andaman and Nicobar Islands','Andhra Pradesh',\n  'Arunachal Pradesh','Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', \n  'Dadra and Nagar Haveli','Daman and Diu','Delhi',\n  'Goa','Gujarat','Haryana','Himachal Pradesh',\n  'Jammu and Kashmir' ,'Jharkhand' ,'Karnataka',\n  'Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur',\n  'Meghalaya','Mizoram','Nagaland','Odisha' ,'Pondicherry',\n  'Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura',\n  'Uttar Pradesh' ,'Uttarakhand','West Bengal'\n  ]\n  // maxDate =  new Date(new Date().setDate(new Date().getDate()-1))\n\n\n  selectFile(event) {\n    const profile_pic = (event.target as HTMLInputElement).files[0];\n    console.log(profile_pic);\n    this.registrationForm.get('profile_photo').patchValue(profile_pic);\n    this.registrationForm.updateValueAndValidity();\n    console.log(this.registrationForm.value);\n  }\n\n \n\n\n  changeBloodGroup(e) {\n    console.log(e.target.value);\n    console.log(new Date(this.registrationForm.value.dob))\n    // console.log(this.maxDate)\n  }\n  changeMaritalStatus(e) {\n    console.log(e.target.value);\n  }\n  changeAddressState(e) {\n    console.log(e.target.value);\n  }\n\n\n    constructor(public fb:FormBuilder,private auth:AuthenticationAdminService,private router:Router) {}\n\n    registrationForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required,Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")]],\n      father_name:['', Validators.required],\n      mother_name:['', Validators.required],\n      age:['',[Validators.required,Validators.min(0),Validators.max(110)]],\n      contact_number:['',Validators.required],\n      emergency_contact_number:['',Validators.required],\n      gender:['',Validators.required],\n      profile_photo:['',Validators.required],\n      blood_group:['',Validators.required],\n      dob:['',[Validators.required, this.DateValidator]],\n      marital_status:['',Validators.required],\n      aadhar_number:['',[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\n      street:['',Validators.required],\n      city:['',Validators.required],\n      state:['',Validators.required],\n      pincode:['',Validators.required],\n      landmark:['',Validators.required]\n     });\n\n  DateValidator(control: AbstractControl): {[key:string]:boolean} | null {\n    const dob = control;\n    if (dob.pristine) {\n      return null;\n    }\n    const dobValue = new Date(dob.value)\n    if( dobValue > new Date()){\n      dob.setValue(null);\n      return {'greaterDate': true}\n    }\n    else{\n      return null;\n    }\n  \n  }\n\n    \n    onSubmit(){\n      this.NewUsercredentials = this.registrationForm.value;\n      this.auth.AddUser(this.NewUsercredentials).subscribe(\n        () =>{\n          this.router.navigateByUrl('/admin/dashboard')\n          console.log(this.NewUsercredentials)\n\n        },\n        err =>{\n          console.error(err);\n          console.log(this.NewUsercredentials)\n          \n        }\n      )\n    }\n\n   \n  }","<!-- <head><script type=\"text/javascript\">\n  function checkDOB() {\n      var dateString = document.getElementById('dateofbirth').value;\n      var myDate = new Date(dateString);\n      var today = new Date();\n      if ( myDate > today ) { \n          $('#dateofbirth').after('<p>You cannot enter a date in the future!.</p>');\n          return false;\n      }\n      return true;\n  }\n</script>\n</head> -->\n\n<!-- <body> -->\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New User</h1>    \n           <hr>\n          <h3 class=\"h4 mb-3 font-weight-normal\">Basic Information</h3>\n           <!-- First Name -->\n           \n            <div class=\"form-group\">\n              <label for=\"name\">First Name</label>\n              <input type=\"text\" class=\"form-control\" minlength=\"2\" \n              maxlength=\"20\"\n              formControlName=\"first_name\" [class.is-invalid]=\"registrationForm.get('first_name').invalid && registrationForm.get('first_name').touched\" placeholder=\"Enter your first name\" >\n                <small [class.d-none]=\"registrationForm.get('first_name').valid || registrationForm.get('first_name').untouched\" class=\"text-danger\"> First Name is required </small>\n            </div>\n\n            <!-- Last Name -->\n            <div class=\"form-group\">\n                <label for=\"name\">Last Name</label>\n                <input type=\"text\"  minlength=\"2\" \n                maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('last_name').invalid &&\n                                  registrationForm.get('last_name').touched\" class=\"form-control\"\n                                    formControlName=\"last_name\"\n                                    placeholder=\"Enter your last name\" >\n\n                <small [class.d-none]=\"registrationForm.get('last_name').valid ||\n                                        registrationForm.get('last_name').untouched\"\n                                        class=\"text-danger\"> Last Name is required </small>\n              </div>\n\n               <!-- AADHAR CARD NUMBER -->\n              \n              <div class=\"form-group\">\n                <label for=\"aadhar_number\">AADHAR Number</label>\n                <input type=\"text\"  minlength=\"12\" maxlength=\"12\" [class.is-invalid]=\"registrationForm.get('aadhar_number').invalid &&\n                                  registrationForm.get('aadhar_number').touched\" class=\"form-control\"\n                                    formControlName=\"aadhar_number\"\n                                    placeholder=\"Enter your 12 digit AADHAR Number\" >\n\n                <small [class.d-none]=\"registrationForm.get('aadhar_number').valid ||\n                                        registrationForm.get('aadhar_number').untouched\"\n                                        class=\"text-danger\"> 12 digit AADHAR Number is required </small>\n              </div>\n\n\n\n      \n                <!-- EMAIL -->\n              <div class=\"form-group\">\n                <label for=\"email\">Email address</label>\n                <input type=\"email\" [class.is-invalid]=\"registrationForm.get('email').invalid &&\n                registrationForm.get('email').touched\" class=\"form-control\"\n                formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\">\n\n                <small [class.d-none]=\"registrationForm.get('email').valid ||\n                registrationForm.get('email').untouched\"\n                class=\"text-danger\"> Email is required </small>\n              </div>\n\n               <!-- Password -->\n               <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\"  minlength=\"8\" \n                maxlength=\"32\"[class.is-invalid]=\"registrationForm.get('password').invalid &&\n                registrationForm.get('password').touched\"\n                class=\"form-control\"  data-toggle=\"tooltip\" data-trigger=\"click hover focus\" title=\"Password should contain atleast one&#013;capital letter&#013;small letter&#013;number&#013;one special character\"  placeholder=\"Password\" formControlName=\"password\">\n\n                <small [class.d-none]=\"registrationForm.get('password').valid ||\n                registrationForm.get('password').untouched\"\n                class=\"text-danger\"> Password is required </small>\n              </div>\n\n              <!-- PROFILE PHOTO -->\n              <div class=\"form-group\">\n                <label for=\"profile_photo\">Profile Photo</label>\n                <input type=\"file\" class=\"form-control-file\"\n                  [class.is-invalid]=\"registrationForm.get('profile_photo').invalid &&\n                registrationForm.get('profile_photo').touched\" (change)=\"selectFile($event)\" accept=\"image/*\"> \n\n                <small [class.d-none]=\"registrationForm.get('profile_photo').valid ||\n                registrationForm.get('profile_photo').untouched\"\n                class=\"text-danger\"> Profile Photo is required </small>\n              </div>\n\n            <!-- GENDER -->\n              <div class=\"form-group\" [class.is-invalid]=\"registrationForm.get('gender').invalid &&\n              registrationForm.get('gender').touched\" >    \n                <label for=\"Gender\">Gender</label>\n\n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Male\" value=\"male\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Male\">Male</label>\n                </div>\n                  \n                <div class=\"custom-control custom-radio\">\n                  <input  type=\"radio\" class=\"custom-control-input\" id=\"Female\" value=\"female\" name=\"gender\" formControlName=\"gender\">\n                  <label class=\"custom-control-label\" for=\"Female\">Female</label>\n                </div>   \n                <small [class.d-none]=\"registrationForm.get('gender').valid ||\n                registrationForm.get('gender').untouched\"\n                class=\"text-danger\"> Gender is required </small>\n              </div>\n\n              <!-- Age -->\n              <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input type=\"number\" \n                 \n                [class.is-invalid]=\"registrationForm.get('age').invalid &&\n                registrationForm.get('age').touched\" \n                class=\"form-control\" placeholder=\"Enter age\" formControlName=\"age\" >\n\n                <small [class.d-none]=\"registrationForm.get('age').valid ||\n                registrationForm.get('age').untouched\"\n                class=\"text-danger\"> Age is required </small>\n\n              </div>\n\n              <!-- Date of Birth -->\n              <div class=\"form-group\">\n                <label for=\"dob\">Date of Birth</label>\n                <input type=\"date\" [class.is-invalid]=\"registrationForm.get('dob').invalid &&\n                  registrationForm.get('dob').touched\" \n                   class=\"form-control\" max=\"maxDate\" formControlName=\"dob\">\n                    <small class=\"text-danger\" [class.d-none]=\"!registrationForm.get('dob').errors?.greaterDate ||\n                    registrationForm.get('dob').untouched\">Date should not be greater than today</small>\n                   <small [class.d-none]=\"!registrationForm.get('dob').errors?.required ||\n                registrationForm.get('dob').untouched\"\n                class=\"text-danger\"> Date of birth is required </small>\n\n              </div>\n\n\n              <!-- Marital Status -->\n               <div class=\"form-group\">\n                <label for=\"marital_status\">Marital Status</label>\n                <select formControlName=\"marital_status\"  [class.is-invalid]=\"registrationForm.get('marital_status').invalid &&\n                registrationForm.get('marital_status').touched\"\n                class=\"form-control\" (change)=\"changeMaritalStatus($event)\">\n                    <option disabled>Select Marital Status</option>\n                    <option *ngFor=\"let maritalstatus of marital_status_list\">{{maritalstatus}}</option>\n                </select>\n\n                <small [class.d-none]=\"registrationForm.get('marital_status').valid ||\n                registrationForm.get('marital_status').untouched\"\n                class=\"text-danger\"> Marital Status is required </small>\n              </div>\n\n              <!-- Blood Group -->\n              <div class=\"form-group\">\n                <label for=\"blood_group\">Blood Group</label>\n                <select formControlName=\"blood_group\"  [class.is-invalid]=\"registrationForm.get('blood_group').invalid &&\n                registrationForm.get('blood_group').touched\"\n                class=\"form-control\" (change)=\"changeBloodGroup($event)\">\n                    <option disabled>Select Blood Group</option>\n                    <option *ngFor=\"let bloodGroup of blood_group_list\">{{bloodGroup}}</option>\n                </select>\n\n                <small [class.d-none]=\"registrationForm.get('blood_group').valid ||\n                registrationForm.get('blood_group').untouched\"\n                class=\"text-danger\"> Blood Group is required </small>\n              </div>\n\n\n              <!-- ADDRESS -->\n              <h3 class=\"h4 mb-3 font-weight-normal\">Permanent Address</h3>\n                <!-- ADDRESS STREET -->\n            \n              <div class=\"form-group\">\n                <label for=\"street\">Street</label>\n                <input type=\"text\"  minlength=\"5\" \n                maxlength=\"50\"[class.is-invalid]=\"registrationForm.get('street').invalid &&\n                                  registrationForm.get('street').touched\" class=\"form-control\"\n                                    formControlName=\"street\"\n                                    placeholder=\"Enter your street\" >\n                <small [class.d-none]=\"registrationForm.get('street').valid ||\n                                        registrationForm.get('street').untouched\"\n                                        class=\"text-danger\"> Street is required </small>\n              </div>\n\n\n              \n                <!-- ADDRESS CITY -->\n\n              <div class=\"form-group\">\n                <label for=\"city\">City</label>\n                <input type=\"text\"  minlength=\"2\" \n                maxlength=\"25\"[class.is-invalid]=\"registrationForm.get('city').invalid &&\n                                  registrationForm.get('city').touched\" class=\"form-control\"\n                                    formControlName=\"city\"\n                                    placeholder=\"Enter your city\" >\n                <small [class.d-none]=\"registrationForm.get('city').valid ||\n                                        registrationForm.get('city').untouched\"\n                                        class=\"text-danger\"> City is required </small>\n              </div>\n\n              <!-- ADDRESS LANDMARK -->\n\n            <div class=\"form-group\">\n              <label for=\"landmark\">Landmark</label>\n              <input type=\"text\"  minlength=\"2\" \n              maxlength=\"20\"[class.is-invalid]=\"registrationForm.get('landmark').invalid &&\n                                registrationForm.get('landmark').touched\" class=\"form-control\"\n                                  formControlName=\"landmark\"\n                                  placeholder=\"Enter your landmark\" >\n              <small [class.d-none]=\"registrationForm.get('landmark').valid ||\n                                      registrationForm.get('landmark').untouched\"\n                                      class=\"text-danger\"> Landmark is required </small>\n            </div>\n\n            <!-- ADDRESS STATE -->\n            <div class=\"form-group\">\n              <label for=\"state\">State</label>\n              <select formControlName=\"state\"  [class.is-invalid]=\"registrationForm.get('state').invalid &&\n              registrationForm.get('state').touched\"\n              class=\"form-control\" (change)=\"changeAddressState($event)\">\n                  <option disabled>Select State</option>\n                  <option *ngFor=\"let addressState of state_list\">{{addressState}}</option>\n              </select>\n\n              <small [class.d-none]=\"registrationForm.get('state').valid ||\n              registrationForm.get('state').untouched\"\n              class=\"text-danger\"> State is required </small>\n            </div>\n\n              \n                <!-- ADDRESS PINCODE -->\n            \n              <div class=\"form-group\">\n                <label for=\"pincode\">Pincode</label>\n                <input type=\"number\"  minlength=\"6\" \n                maxlength=\"6\" [class.is-invalid]=\"registrationForm.get('pincode').invalid &&\n                                  registrationForm.get('pincode').touched\" class=\"form-control\"\n                                    formControlName=\"pincode\"\n                                    placeholder=\"Enter your last name\" >\n                <small [class.d-none]=\"registrationForm.get('pincode').valid ||\n                                        registrationForm.get('pincode').untouched\"\n                                        class=\"text-danger\"> Pincode is required </small>\n              </div>\n\n              \n                \n\n                \n              <!-- Father Name -->\n            \n              <div class=\"form-group\">\n                <label for=\"father_name\">Fathers Name</label>\n                <input type=\"text\" minlength=\"2\" \n                maxlength=\"32\" [class.is-invalid]=\"registrationForm.get('father_name').invalid &&\n                registrationForm.get('father_name').touched\"\n                class=\"form-control\" placeholder=\"Enter Father's Name\" formControlName=\"father_name\">\n                \n                <small [class.d-none]=\"registrationForm.get('father_name').valid ||\n                registrationForm.get('father_name').untouched\"\n                class=\"text-danger\"> Father Name is required </small>\n              </div>\n\n\n              <!-- Mothers Name -->\n              <div class=\"form-group\">\n                <label for=\"mother_name\">Mothers Name</label>\n                <input type=\"text\" minlength=\"2\" \n                maxlength=\"32\" [class.is-invalid]=\"registrationForm.get('mother_name').invalid &&\n                registrationForm.get('mother_name').touched\"\n                class=\"form-control\" placeholder=\"Enter Mother's Name\" formControlName=\"mother_name\">\n\n                <small [class.d-none]=\"registrationForm.get('mother_name').valid ||\n                registrationForm.get('mother_name').untouched\"\n                class=\"text-danger\"> Mother Name is required </small>\n              </div>\n\n            \n              <!-- Contact number -->\n              <div class=\"form-group\">\n                <label for=\"contact_number\">Contact Number</label>\n                <input type=\"number\"   minlength=\"10\" \n                maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('contact_number').invalid &&\n                registrationForm.get('contact_number').touched\"\n                 class=\"form-control\" placeholder=\"Contact Number\" formControlName=\"contact_number\" >\n\n                 <small [class.d-none]=\"registrationForm.get('contact_number').valid ||\n                registrationForm.get('contact_number').untouched\"\n                class=\"text-danger\"> Contact Number is required </small>\n              </div>\n\n\n              <!-- Emergency Contact Number -->\n              <div class=\"form-group\">\n                <label for=\"emergency_contact_number\">Emergency Contact Number</label>\n                <input type=\"number\"  minlength=\"10\" \n                maxlength=\"10\"[class.is-invalid]=\"registrationForm.get('emergency_contact_number').invalid &&\n                registrationForm.get('emergency_contact_number').touched\"\n                 class=\"form-control\" placeholder=\"Enter emergency contact number\" formControlName=\"emergency_contact_number\" >\n\n                <small [class.d-none]=\"registrationForm.get('emergency_contact_number').valid ||\n                registrationForm.get('emergency_contact_number').untouched\"\n                class=\"text-danger\"> Emergency Contact Number is required </small>\n              </div>\n              \n\n              <!-- <div class=\"form-group form-check\">\n                <input type=\"checkbox\" class=\"form-check-input\">\n                <label class=\"form-check-label\" for=\"exampleCheck1\">I hereby declare that the above furnished details are true to the best of my knowledge</label>\n              </div> -->\n          \n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!registrationForm.valid\">Add User</button>\n      </form>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-case-details',\n  templateUrl: './user-case-details.component.html',\n  styleUrls: ['./user-case-details.component.css']\n})\nexport class UserCaseDetailsComponent implements OnInit {\n\n  case_id:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('case_id')) {\n        this.case_id = parameter.get('case_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.case_id}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-case-list',\n  templateUrl: './user-case-list.component.html',\n  styleUrls: ['./user-case-list.component.css']\n})\nexport class UserCaseListComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  user_id:string\n  // case_name:any\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n\n   ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.user_id}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n}\n","<div class=\"container\">\n    <br>\n    <h3>User Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/admin/user/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {UserDetails} from './user-details'\nimport {HttpClient} from '@angular/common/http'\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit{\n  user_id: string;\n  userDetails: any;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router) {\n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        console.log(this.user_id);\n      }\n    })\n   }\n\n  ngOnInit(){\n    this.getUserDetails();\n  }\n\n  getUserDetails(){\n    this.httpClient.get<UserDetails>(`http://127.0.0.1:5000/api/user/${this.user_id}`).subscribe(response => {\n      console.log(response);\n      // console.log(this.userDetails)\n      this.userDetails = response;\n      console.log(typeof this.userDetails.dob)\n    })\n    console.log(this.userDetails);\n  }\n\n  ViewCases(){\n\n    this.router.navigateByUrl(`user/profile/case-list/${this.user_id}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n<div class=\"container\">\n        <h2>User Details</h2>\n        \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>View Cases</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <img src={{userDetails.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n        </div>\n\n        <table class=\"table table-dark\">\n          \n            <tr>\n              <th>Unique ID</th>\n                <td>{{userDetails.user_id}}</td>\n            </tr>\n            <tr>\n              <th>First Name</th>\n                <td>{{userDetails.first_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Last Name</th>\n                <td>{{userDetails.last_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Father Name</th>\n                <td>{{userDetails.father_name}}</td>\n            </tr>\n\n            <tr>\n              <th>Mother Name</th>\n                <td>{{userDetails.mother_name}}</td>\n            </tr>\n              \n            <tr>\n              <th>Age</th>\n                <td>{{userDetails.age}}</td>\n            </tr>\n\n            <tr>\n              <th>Gender</th>\n                <td>{{userDetails.gender}}</td>\n            </tr>\n\n            <tr>\n              <th>Contact Number</th>\n                <td>{{userDetails.contact_number}}</td>\n            </tr>\n\n            <tr>\n              <th>Emergency Contact Number</th>\n                <td>{{userDetails.emergency_contact_number}}</td>\n            </tr>\n\n            <tr>\n              <th>Email Address</th>\n                <td>{{userDetails.email}}</td>\n            </tr>\n       \n            <tr>\n              <th>Date of Birth</th>\n                <td>{{userDetails.dob | date}}</td>\n            </tr>\n       \n        </table>\n     \n     \n     \n </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n \n  users;\n  searchText= this.users\n\n  constructor(private httpClient: HttpClient, private route: Router)  { }\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get('http://127.0.0.1:5000/api/users/').subscribe(users => (this.users = users))\n    console.log(this.users)\n\n   \n  }\n\n  NewUser(){\n    this.route.navigateByUrl('/admin/user/add-user')\n  }\n    \n}\n\n\n\n\n  \n\n\n \n//   }\n//   getUsers():void{\n//     this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => (this.users = users as JSON))\n\n//   }\n//   add(name:string):void{\n//     this.editUser = undefined\n//     name = name.trim()\n//     if(!name){\n//       return\n//     }\n//     const newUser: User = {name} as User\n//     this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(() => this.getUsers())\n//   }\n\n//   delete(user: User):void{\n//     //  this.users =this.users.filter(h => h !== user)\n//     this.httpClient.get('http://127.0.0.1:5000/api/user')\n//     .subscribe(() => console.log('User Deleted'))\n\n//   }\n//   edit(user){\n//     this.editUser = user\n\n//   }\n//   update(){\n//     if(this.editUser){\n//       this.httpClient.get('http://127.0.0.1:5000/userss').subscribe(() => {\n//         this.getUsers()\n//       })\n//       this.editUser = undefined\n//     }\n//   }\n\n// }\n  \n\n  \n\n\n\n \n","<div class=\"container\">\n    <h2>List of Users</h2>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"NewUser()\">New User</button>\n    <br>\n    <br>\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any users by name \">\n        <br>\n    </div>\n<table class=\"table table-dark table-hover\">\n    <tbody>\n    <tr *ngFor=\"let user of users | filter:searchText\">\n         <td [routerLink]=\"['/admin/user/details/',user._id]\"> {{user.first_name}} {{user.last_name}}</td>\n    </tr>\n</tbody> \n</table> \n</div>","import { Component } from '@angular/core';\nimport { AuthenticationAdminService, AdminTokenPayload } from './authentication-admin.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent {\n\n  error: string;\n  credentials: AdminTokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email:'',\n    password: '',\n    gender: '',\n    age: ''\n  }\n  constructor(private auth: AuthenticationAdminService, private route:Router) { }\n  login(){\n    this.auth.login(this.credentials).subscribe(response =>{\n\n    if(response.token){\n      // this.auth.loginData(response);\n      this.route.navigateByUrl('/admin/dashboard')\n    }\n    else{\n      this.error = response.result;\n    }\n    // err =>\n      // console.error(err)\n  })\n}\n}\n    \n\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n      <form (submit)=\"login()\">\n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">ADMIN LOGIN</h1>\n        <div class=\"form-group\">\n          <label for=\"email\">Email Address</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n        </div>\n        <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationAdminService } from './authentication-admin.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardAdminService implements CanActivate {\r\n  constructor(private authAdmin: AuthenticationAdminService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authAdmin.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of, EMPTY } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { Router } from '@angular/router'\r\nimport { NewUserDetails } from '../admin-dashboard/users-list/add-new-user/new-user-details'\r\n\r\nexport interface AdminDetails {\r\n  _id: string\r\n  identity: {\r\n    first_name: string,\r\n    last_name: string,\r\n    email: string\r\n  }\r\n  password: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface AdminTokenResponse {\r\n  token: string\r\n}\r\n\r\nexport interface AdminTokenPayload {\r\n  _id: string\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  password: string\r\n  gender: string\r\n  age: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationAdminService {\r\n  private token: string\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('admintoken', token)\r\n    this.token = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('admintoken')\r\n    }\r\n    return this.token\r\n  }\r\n\r\n  public getAdminDetails(): AdminDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if (token) {\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      return JSON.parse(payload)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getAdminDetails()\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  public AddUser(user: NewUserDetails): Observable<any> {\r\n    const formData = new FormData;\r\n    for (const [key, value] of Object.entries(user)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n    // return EMPTY\r\n    return this.httpClient.post(`http://127.0.0.1:5000/api/register`, formData)\r\n  }\r\n  \r\n\r\n  public login(user: AdminTokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/login`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: AdminTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = ''\r\n    window.localStorage.removeItem('admintoken')\r\n    this.router.navigateByUrl('')\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './login/login.component'\nimport { RegisterComponent } from './register/register.component'\nimport { HomeComponent } from './home/home.component'\nimport { ProfileComponent } from './user/profile/profile.component';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AuthGuardAdminService } from '../app/admin/admin-login/auth-guard-admin.service'\nimport { UserDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-details.component';\nimport { DoctorsListComponent } from './admin/admin-dashboard/doctors-list/doctors-list.component';\nimport { AddDoctorComponent } from './admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component';\nimport { UsersListComponent } from './admin/admin-dashboard/users-list/users-list.component';\nimport { AddNewUserComponent } from './admin/admin-dashboard/users-list/add-new-user/add-new-user.component';\nimport { ClinicListComponent } from './admin/admin-dashboard/clinic-list/clinic-list.component';\nimport { AddClinicComponent } from './admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component';\nimport { AddHospitalComponent } from './admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component';\nimport { HospitalListComponent } from './admin/admin-dashboard/hospital-list/hospital-list.component';\nimport { LaboratoryListComponent } from './admin/admin-dashboard/laboratory-list/laboratory-list.component';\nimport { AddLaboratoryComponent } from './admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component';\nimport { MedicalStoreListComponent } from './admin/admin-dashboard/medical-store-list/medical-store-list.component';\nimport { AddMedicalStoreComponent } from './admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DoctorLoginComponent } from './doctor/doctor-login/doctor-login.component';\nimport { DoctorDashboardComponent } from './doctor/doctor-dashboard/doctor-dashboard.component';\nimport { AuthGuardDoctorService } from './doctor/doctor-login/auth-guard-doctor.service';\nimport { AuthGuardHospitalService } from './hospital/hospital-login/auth-guard-hospital.service';\nimport { HospitalLoginComponent } from './hospital/hospital-login/hospital-login.component';\nimport { HospitalDashboardComponent } from './hospital/hospital-dashboard/hospital-dashboard.component';\nimport { HospitalPatientDetailsComponent } from './hospital/hospital-dashboard/hospital-patient-details/hospital-patient-details.component';\nimport { HospitalNewCaseComponent } from './hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component';\nimport { HospitalViewCasesComponent } from './hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component';\nimport { HospitalNewPatientComponent } from './hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component';\nimport { ClinicDetailsComponent } from './admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component';\nimport { HospitalDetailsComponent } from './admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component';\nimport { LaboratoryDetailsComponent } from './admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component';\nimport { DoctorDetailsComponent } from './admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component';\nimport { MedicalStoreDetailsComponent } from './admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component';\nimport { DoctorNewCaseComponent } from './doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component';\nimport { DoctorCaseDetailsComponent } from './doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component';\nimport { DoctorPatientDetailsComponent } from './doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component';\nimport { DoctorViewCasesComponent } from './doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component';\nimport { HospitalCaseDetailsComponent } from './hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component';\nimport { ClinicLoginComponent } from './clinic/clinic-login/clinic-login.component';\nimport { AuthGuardClinicService } from './clinic/clinic-login/auth-guard-clinic.service';\nimport { ClinicNewPatientComponent } from './clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component';\nimport { ClinicDashboardComponent } from './clinic/clinic-dashboard/clinic-dashboard.component';\nimport { ClinicPatientDetailsComponent } from './clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component';\nimport { ClinicNewCaseComponent } from './clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component';\nimport { ClinicViewCasesComponent } from './clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component';\nimport { ClinicCaseDetailsComponent } from './clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component';\nimport { LaboratoryLoginComponent } from './laboratory/laboratory-login/laboratory-login.component';\nimport { LaboratoryDashboardComponent } from './laboratory/laboratory-dashboard/laboratory-dashboard.component';\nimport { AuthGuardLaboratoryService } from './laboratory/laboratory-login/auth-guard-laboratory.service';\nimport { DoctorNewPatientComponent } from './doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component';\nimport { MedicalstoreLoginComponent } from './medicalstore/medicalstore-login/medicalstore-login.component';\nimport { MedicalstoreDashboardComponent } from './medicalstore/medicalstore-dashboard/medicalstore-dashboard.component';\nimport { AuthGuardMedicalStoreService } from './medicalstore/medicalstore-login/auth-guard-medicalstoreservice';\nimport { UserCaseListComponent } from './admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component';\nimport { UserCaseDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component';\nimport { UserProfileCaseListComponent } from './user/profile/user-profile-case-list/user-profile-case-list.component';\nimport { UserProfileCaseDetailsComponent } from './user/profile/user-profile-case-details/user-profile-case-details.component';\nimport { MedicalNewPatientComponent } from './medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component';\nimport { LaboratoryNewPatientComponent } from './laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component';\nimport { LaboratoryViewAndUpdateCaseDetailsComponent } from './laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component';\nimport { LaboratoryViewCasesComponent } from './laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component';\nimport { MedicalViewCasesComponent } from './medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component';\nimport { MedicalViewAndUpdateCaseDetailsComponent } from './medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'user', component: UserComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'user/profile', component:  ProfileComponent,canActivate:[AuthGuardService] },\n  { path: 'user/profile/case-list/:user_id', component: UserProfileCaseListComponent },\n  { path: 'user/profile/case-list/caste-details/:case_id', component: UserProfileCaseDetailsComponent },\n\n\n\n  // ADMIN\n  { path: 'admin/login', component: AdminLoginComponent},\n  { path: 'admin/dashboard', component: AdminDashboardComponent,canActivate:[AuthGuardAdminService] },\n  \n  //ADMIN USER Thing\n  { path: 'admin/user/users-list', component: UsersListComponent },\n  { path: 'admin/user/add-user', component: AddNewUserComponent },\n  { path: 'admin/user/details/:user_id',component: UserDetailsComponent },\n  { path: 'admin/user/case-list/:user_id',component: UserCaseListComponent },\n  { path: 'admin/user/case-details/:case_id',component:  UserCaseDetailsComponent},\n\n\n  // Admin CLINIC \n  { path: 'admin/clinic/clinic-list', component: ClinicListComponent },\n  { path: 'admin/clinic/add-clinic', component: AddClinicComponent },\n  { path: 'admin/clinic/details/:clinic_id',component:ClinicDetailsComponent},\n  \n\n  //ADMIN HOSPITAL\n  { path: 'admin/hospital/hospital-list', component: HospitalListComponent },\n  { path: 'admin/hospital/add-hospital', component: AddHospitalComponent},\n  { path: 'admin/hospital/details/:hospital_id', component: HospitalDetailsComponent},\n\n  //ADMIN LABORATORY\n  { path: 'admin/laboratory/laboratory-list', component: LaboratoryListComponent},\n  { path: 'admin/laboratory/add-laboratory', component: AddLaboratoryComponent},\n  { path: 'admin/laboratory/details/:laboratory_id', component: LaboratoryDetailsComponent},\n\n  //ADMIN MEDICAL\n  { path: 'admin/medical/medical-store-list', component: MedicalStoreListComponent},\n  { path: 'admin/medical/add-medical', component: AddMedicalStoreComponent},\n  { path: 'admin/medical/details/:medical_id', component: MedicalStoreDetailsComponent},\n\n  //ADMIN DOCTOR\n  { path: 'admin/doctor/doctor-list', component: DoctorsListComponent},\n  { path: 'admin/doctor/add-doctor', component: AddDoctorComponent},\n  { path: 'admin/doctor/details/:doctor_id', component: DoctorDetailsComponent},\n\n\n\n  \n  { path: 'upload', component: UploadComponent},\n\n\n  // DOCTOR USER Department\n  { path: 'doctor/login', component: DoctorLoginComponent},\n  { path: 'doctor/dashboard', component: DoctorDashboardComponent,canActivate:[AuthGuardDoctorService]},  \n  { path: 'doctor/new-patient', component: DoctorNewPatientComponent},\n  { path: 'doctor/patient-details/:patientID', component: DoctorPatientDetailsComponent},\n  { path: 'doctor/patient-details/new-case/:patientID', component: DoctorNewCaseComponent},\n  { path: 'doctor/patient-details/view-cases/:patientID', component: DoctorViewCasesComponent},\n  { path: 'doctor/patient-details/case-details/:caseID', component: DoctorCaseDetailsComponent},\n\n\n  //HOSPITAL USER DEPARTMENT\n  { path: 'hospital/login', component: HospitalLoginComponent},\n  { path: 'hospital/dashboard', component: HospitalDashboardComponent,canActivate:[AuthGuardHospitalService]},  \n  { path: 'hospital/new-patient', component: HospitalNewPatientComponent},   \n  { path: 'hospital/patient-details/:patientID', component: HospitalPatientDetailsComponent},  \n  { path: 'hospital/patient-details/new-case/:patientID', component: HospitalNewCaseComponent},  \n  { path: 'hospital/patient-details/view-cases/:patientID', component: HospitalViewCasesComponent},  \n  { path: 'hospital/patient-details/case-details/:caseID', component: HospitalCaseDetailsComponent},\n\n  //CLINIC USER DEPARTMENT\n  { path: 'clinic/login', component: ClinicLoginComponent},\n  { path: 'clinic/dashboard', component: ClinicDashboardComponent,canActivate:[AuthGuardClinicService]},  \n  { path: 'clinic/new-patient', component: ClinicNewPatientComponent},   \n  { path: 'clinic/patient-details/:patientID', component: ClinicPatientDetailsComponent},  \n  { path: 'clinic/patient-details/new-case/:patientID', component: ClinicNewCaseComponent},  \n  { path: 'clinic/patient-details/view-cases/:patientID', component: ClinicViewCasesComponent},  \n  { path: 'clinic/patient-details/case-details/:caseID', component: ClinicCaseDetailsComponent},\n\n  //LABORATORY USER DEPARTMENT\n  { path: 'laboratory/login', component: LaboratoryLoginComponent},\n  { path: 'laboratory/dashboard', component: LaboratoryDashboardComponent,canActivate:[AuthGuardLaboratoryService]},  \n  { path: 'laboratory/new-patient', component: LaboratoryNewPatientComponent},   \n  { path: 'laboratory/patient-details/case-details/:caseID', component: LaboratoryViewAndUpdateCaseDetailsComponent},  \n  { path: 'laboratory/patient-details/:patientID', component: LaboratoryViewCasesComponent},  \n\n  \n  //MEDICAL USER DEPARTMENT\n  { path: 'medical/login', component: MedicalstoreLoginComponent},\n  { path: 'medical/dashboard', component: MedicalstoreDashboardComponent,canActivate:[AuthGuardMedicalStoreService]},\n  { path: 'medical/new-patient',component:MedicalNewPatientComponent }  ,\n  { path: 'medical/patient-details/case-details/:caseID',component: MedicalViewAndUpdateCaseDetailsComponent },  \n  { path: 'medical/patient-details/:patientID',component:MedicalViewCasesComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthenticationAdminService } from './admin/admin-login/authentication-admin.service';\nimport { AuthenticationDoctorService } from './doctor/doctor-login/authentication-doctor.service';\nimport { AuthenticationHospitalService } from './hospital/hospital-login/authentication-hospital.service';\nimport { AuthenticationLaboratoryService } from './laboratory/laboratory-login/authentication-Laboratory.service';\nimport { AuthenticationMedicalStoreService } from './medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { AuthenticationClinicService } from './clinic/clinic-login/authentication-clinic.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Health Card';\n  public isMenuCollapsed = true;\n  \n  constructor(public authUser: AuthenticationService, \n              public authAdmin : AuthenticationAdminService, \n              public authDoctor : AuthenticationDoctorService,\n              public authHospital : AuthenticationHospitalService,\n              public authLaboratory : AuthenticationLaboratoryService,\n              public authMedical : AuthenticationMedicalStoreService,\n              public authClinic : AuthenticationClinicService,\n               ){}\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n\n  <a class=\"navbar-brand\" href=\"\">\n    <img src=\"assets/logo.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n    Health Card\n  </a>\n  \n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"authUser.isLoggedIn()\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n      </li>\n    </ul>\n      <ul class=\"navbar-nav\">\n        <!-- <a *ngIf=\"!auth.isLoggedIn() && !authAdmin.isLoggedIn()\" class=\"nav-link\" routerLink=\"/login\" >Login</a> -->\n        <a *ngIf=\"authAdmin.isLoggedIn() && \n                  !authUser.isLoggedIn() && \n                  !authAdmin.isLoggedIn() &&\n                  !authMedical.isLoggedIn() &&\n                  !authLaboratory.isLoggedIn() &&\n                  !authHospital.isLoggedIn()\" \n                  class=\"nav-link\" routerLink=\"/admin/dashboard\">Dashboard</a>\n        <!-- <a *ngIf=\"!auth.isLoggedIn()\" class=\"nav-link\" routerLink=\"/admin-login\" >Admin Login</a> -->\n        <!-- <a *ngIf=\"!auth.isLoggedIn()\" class=\"nav-link\" routerLink=\"/register\">Register</a> -->\n        <!-- <a *ngIf=\"auth.isLoggedIn()-\" class=\"nav-link\" routerLink=\"/user\">Users List</a> -->\n        <a *ngIf=\"authUser.isLoggedIn()\" class=\"nav-link\" routerLink=\"/profile\" >Welcome {{ authUser.getUserDetails()?.identity.first_name }}</a>\n        <a *ngIf=\"authUser.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authUser.logout()\">Logout</a>\n        <a *ngIf=\"authAdmin.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authAdmin.logout()\">Logout Admin</a>\n        <a *ngIf=\"authDoctor.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authDoctor.logout()\">Logout</a>\n        <a *ngIf=\"authHospital.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authHospital.logout()\">Logout</a>\n        <a *ngIf=\"authClinic.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authClinic.logout()\">Logout</a>\n        <a *ngIf=\"authLaboratory.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authLaboratory.logout()\">Logout</a>\n        <a *ngIf=\"authMedical.isLoggedIn()\" class=\"nav-link\" routerLink=\"\" (click)=\"authMedical.logout()\">Logout</a>\n        </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AuthGuardAdminService } from './admin/admin-login/auth-guard-admin.service';\nimport { AuthenticationAdminService } from './admin/admin-login/authentication-admin.service';\nimport { DoctorsListComponent } from './admin/admin-dashboard/doctors-list/doctors-list.component';\nimport { AddDoctorComponent } from './admin/admin-dashboard/doctors-list/add-doctor/add-doctor.component';\nimport { UserDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-details.component';\nimport { AddNewUserComponent } from './admin/admin-dashboard/users-list/add-new-user/add-new-user.component';\nimport { UsersListComponent } from './admin/admin-dashboard/users-list/users-list.component';\nimport { HospitalListComponent } from './admin/admin-dashboard/hospital-list/hospital-list.component';\nimport { ClinicListComponent } from './admin/admin-dashboard/clinic-list/clinic-list.component';\nimport { MedicalStoreListComponent } from './admin/admin-dashboard/medical-store-list/medical-store-list.component';\nimport { LaboratoryListComponent } from './admin/admin-dashboard/laboratory-list/laboratory-list.component';\nimport { AddClinicComponent } from './admin/admin-dashboard/clinic-list/add-clinic/add-clinic.component';\nimport { AddHospitalComponent } from './admin/admin-dashboard/hospital-list/add-hospital/add-hospital.component';\nimport { AddLaboratoryComponent } from './admin/admin-dashboard/laboratory-list/add-laboratory/add-laboratory.component';\nimport { AddMedicalStoreComponent } from './admin/admin-dashboard/medical-store-list/add-medical-store/add-medical-store.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { UploadComponent } from './upload/upload.component';\nimport { DoctorDashboardComponent } from './doctor/doctor-dashboard/doctor-dashboard.component';\nimport { DoctorLoginComponent } from './doctor/doctor-login/doctor-login.component';\nimport { DoctorPatientDetailsComponent } from './doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details.component';\nimport { DoctorViewCasesComponent } from './doctor/doctor-dashboard/cases/doctor-view-cases/doctor-view-cases.component';\nimport { AuthGuardDoctorService } from './doctor/doctor-login/auth-guard-doctor.service';\nimport { AuthenticationDoctorService } from './doctor/doctor-login/authentication-doctor.service';\nimport { HospitalDashboardComponent } from './hospital/hospital-dashboard/hospital-dashboard.component';\nimport { HospitalLoginComponent } from './hospital/hospital-login/hospital-login.component';\nimport { AuthenticationHospitalService } from './hospital/hospital-login/authentication-hospital.service';\nimport { AuthGuardHospitalService } from './hospital/hospital-login/auth-guard-hospital.service';\nimport { HospitalViewCasesComponent } from './hospital/hospital-dashboard/cases/hospital-view-cases/hospital-view-cases.component';\nimport { HospitalNewCaseComponent } from './hospital/hospital-dashboard/cases/hospital-new-case/hospital-new-case.component';\nimport { HospitalNewPatientComponent } from './hospital/hospital-dashboard/hospital-new-patient/hospital-new-patient.component';\nimport { LaboratoryDashboardComponent } from './laboratory/laboratory-dashboard/laboratory-dashboard.component';\nimport { LaboratoryLoginComponent } from './laboratory/laboratory-login/laboratory-login.component';\nimport { ClinicDashboardComponent } from './clinic/clinic-dashboard/clinic-dashboard.component';\nimport { ClinicLoginComponent } from './clinic/clinic-login/clinic-login.component';\nimport { ClinicDetailsComponent } from './admin/admin-dashboard/clinic-list/clinic-details/clinic-details.component';\nimport { AuthGuardClinicService } from './clinic/clinic-login/auth-guard-clinic.service';\nimport { AuthenticationClinicService } from './clinic/clinic-login/authentication-clinic.service';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { DoctorDetailsComponent } from './admin/admin-dashboard/doctors-list/doctor-details/doctor-details.component';\nimport { HospitalDetailsComponent } from './admin/admin-dashboard/hospital-list/hospital-details/hospital-details.component';\nimport { LaboratoryDetailsComponent } from './admin/admin-dashboard/laboratory-list/laboratory-details/laboratory-details.component';\nimport { MedicalStoreDetailsComponent } from './admin/admin-dashboard/medical-store-list/medical-store-details/medical-store-details.component';\nimport { MedicalstoreLoginComponent } from './medicalstore/medicalstore-login/medicalstore-login.component';\nimport { MedicalstoreDashboardComponent } from './medicalstore/medicalstore-dashboard/medicalstore-dashboard.component';\nimport { ClinicNewCaseComponent } from './clinic/clinic-dashboard/cases/clinic-new-case/clinic-new-case.component';\nimport { ClinicCaseDetailsComponent } from './clinic/clinic-dashboard/cases/clinic-case-details/clinic-case-details.component';\nimport { ClinicViewCasesComponent } from './clinic/clinic-dashboard/cases/clinic-view-cases/clinic-view-cases.component';\nimport { ClinicNewPatientComponent } from './clinic/clinic-dashboard/clinic-new-patient/clinic-new-patient.component';\nimport { ClinicPatientDetailsComponent } from './clinic/clinic-dashboard/clinic-patient-details/clinic-patient-details.component';\nimport { DoctorCaseDetailsComponent } from './doctor/doctor-dashboard/cases/doctor-case-details/doctor-case-details.component';\nimport { DoctorNewCaseComponent } from './doctor/doctor-dashboard/cases/doctor-new-case/doctor-new-case.component';\nimport { AuthGuardLaboratoryService } from './laboratory/laboratory-login/auth-guard-laboratory.service';\nimport { AuthenticationLaboratoryService } from './laboratory/laboratory-login/authentication-Laboratory.service';\nimport { AuthGuardMedicalStoreService } from './medicalstore/medicalstore-login/auth-guard-medicalstoreservice';\nimport { AuthenticationMedicalStoreService } from './medicalstore/medicalstore-login/authentication-medicalstore.service';\nimport { HospitalCaseDetailsComponent } from './hospital/hospital-dashboard/cases/hospital-case-details/hospital-case-details.component';\nimport { DoctorNewPatientComponent } from './doctor/doctor-dashboard/doctor-new-patient/doctor-new-patient.component';\nimport { UserCaseListComponent } from './admin/admin-dashboard/users-list/user-details/user-case-list/user-case-list.component';\nimport { UserCaseDetailsComponent } from './admin/admin-dashboard/users-list/user-details/user-case-details/user-case-details.component';\nimport { ProfileComponent } from './user/profile/profile.component';\nimport { UserProfileCaseDetailsComponent } from './user/profile/user-profile-case-details/user-profile-case-details.component';\nimport { UserProfileCaseListComponent } from './user/profile/user-profile-case-list/user-profile-case-list.component';\nimport { MedicalNewPatientComponent } from './medicalstore/medicalstore-dashboard/medical-new-patient/medical-new-patient.component';\nimport { LaboratoryNewPatientComponent } from './laboratory/laboratory-dashboard/laboratory-new-patient/laboratory-new-patient.component';\nimport { LaboratoryViewCasesComponent } from './laboratory/laboratory-dashboard/laboratory-view-cases/laboratory-view-cases.component';\nimport { LaboratoryViewAndUpdateCaseDetailsComponent } from './laboratory/laboratory-dashboard/laboratory-view-and-update-case-details/laboratory-view-and-update-case-details.component';\nimport { MedicalViewAndUpdateCaseDetailsComponent } from './medicalstore/medicalstore-dashboard/medical-view-and-update-case-details/medical-view-and-update-case-details.component';\nimport { MedicalViewCasesComponent } from './medicalstore/medicalstore-dashboard/medical-view-cases/medical-view-cases.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AdminLoginComponent,\n    DoctorsListComponent,\n    AddDoctorComponent,\n    UserDetailsComponent,\n    AddNewUserComponent,\n    UsersListComponent,\n    HospitalListComponent,\n    ClinicListComponent,\n    MedicalStoreListComponent,\n    LaboratoryListComponent,\n    AddClinicComponent,\n    AddHospitalComponent,\n    AddLaboratoryComponent,\n    AddMedicalStoreComponent,\n    UploadComponent,\n    DoctorDashboardComponent,\n    DoctorLoginComponent,\n    HospitalDashboardComponent,\n    HospitalLoginComponent,\n    HospitalViewCasesComponent,\n    HospitalNewCaseComponent,\n    HospitalNewPatientComponent,\n    LaboratoryDashboardComponent,\n    LaboratoryLoginComponent,\n    ClinicNewCaseComponent,\n    ClinicCaseDetailsComponent,\n    ClinicDashboardComponent,\n    ClinicLoginComponent,\n    ClinicViewCasesComponent,\n    ClinicDetailsComponent,\n    ClinicViewCasesComponent,\n    ClinicCaseDetailsComponent,\n    ClinicNewPatientComponent,\n    ClinicPatientDetailsComponent,\n    DoctorDetailsComponent,\n    HospitalDetailsComponent,\n    LaboratoryDetailsComponent,\n    MedicalStoreDetailsComponent,\n    MedicalstoreLoginComponent,\n    MedicalstoreDashboardComponent,\n    DoctorCaseDetailsComponent,\n    DoctorNewCaseComponent,\n    DoctorViewCasesComponent,\n    DoctorPatientDetailsComponent,\n    HospitalCaseDetailsComponent,\n    DoctorNewPatientComponent,\n    UserCaseListComponent,\n    UserCaseDetailsComponent,\n    UserProfileCaseDetailsComponent,\n    UserProfileCaseListComponent,\n    MedicalNewPatientComponent,\n    LaboratoryNewPatientComponent,\n    LaboratoryViewCasesComponent,\n    LaboratoryViewAndUpdateCaseDetailsComponent,\n    MedicalViewAndUpdateCaseDetailsComponent,\n    MedicalViewCasesComponent\n\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule,\n    PdfViewerModule,\n\n    \n   \n  ],\n  providers: [AuthenticationService, AuthGuardService,\n              AuthGuardAdminService, AuthenticationAdminService, \n              AuthGuardDoctorService, AuthenticationDoctorService, \n              AuthenticationHospitalService, AuthGuardHospitalService,\n              AuthGuardClinicService, AuthenticationClinicService,\n            AuthGuardLaboratoryService,AuthenticationLaboratoryService,\n          AuthGuardMedicalStoreService,AuthenticationMedicalStoreService],\n              \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationService } from './authentication.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface UserDetails {\r\n  _id: string\r\n  identity: {\r\n    user_id: string\r\n    first_name: string\r\n    last_name: string\r\n    email: string\r\n    gender: string\r\n    age: number\r\n    contact_number:number\r\n    emergency_contact_number:number\r\n    father_name:string\r\n    mother_name:string\r\n    blood_group:string\r\n    profile_photo:string\r\n    marital_status:string\r\n    aadhar_number:number\r\n    street:string\r\n    city:string\r\n    state:string\r\n    pincode:number\r\n    landmark:string\r\n    dob:Date\r\n  }\r\n  password: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface UserTokenResponse {\r\n  token: string\r\n}\r\n\r\nexport interface TokenPayload {\r\n  _id: string\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  private UserToken: string\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('usertoken', token)\r\n    this.UserToken = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.UserToken) {\r\n      this.UserToken = localStorage.getItem('usertoken')\r\n    }\r\n    return this.UserToken\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if (token) {\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      // console.log(window.atob(payload))\r\n      return JSON.parse(payload)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails()\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/register`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: UserTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    const base = this.httpClient.post(`http://127.0.0.1:5000/api/user/login`, user)\r\n\r\n    const request = base.pipe(\r\n      map((data: UserTokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n\r\n    return request\r\n  }\r\n\r\n  public logout(): void {\r\n    this.UserToken = ''\r\n    window.localStorage.removeItem('usertoken')\r\n    this.router.navigateByUrl('/')\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-case-details',\n  templateUrl: './clinic-case-details.component.html',\n  styleUrls: ['./clinic-case-details.component.css']\n})\nexport class ClinicCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-new-case',\n  templateUrl: './clinic-new-case.component.html',\n  styleUrls: ['./clinic-new-case.component.css']\n})\nexport class ClinicNewCaseComponent implements OnInit {\n\n \n  patientID:string \n  // Cartoon:string\n\n\n  \n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: number;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.medicine_dosage,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \n           <hr>\n          <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\n          \n          \n          <!-- Disease Name -->\n          <label for=\"disease_name\"> Disease name</label>\n          <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\n          <br>\n\n          <!-- observation Summary -->\n          <label for=\"disease_observation\">Observations</label>\n          <textarea formControlName=\"disease_observation\" class=\"form-control\" rows=\"3\"> </textarea>\n          <br>\n\n          <!-- Lab Test Required -->\n          <label> Lab Test Required</label>\n          <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\n            <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\n            {{ cartoon }}\n          </div>\n        <br>\n        </form>\n\n        <label for=\"medicine_name\">Medicine Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_name\">\n\n        <label for=\"\">Medicine Dosage</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_dosage\">\n\n        <label for=\"\">Medicine Quantity</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"medicine_quantity\">\n        <br>\n        <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\n        \n        <h2>Medicines List</h2>\n        <table class=\"table bg-white text-dark\">\n          <tr>\n            <th>Sr No.</th>\n            <th>Medicine</th>\n            <th>Dosage</th>\n            <th>Quantity</th>\n            <th>Delete</th>\n            <!-- <th>isTaken</th> -->\n            \n          </tr>\n          <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\n          <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\n            <td>{{ i+1 }}</td>\n            <td>{{medicine.medicine_name}}</td>\n            <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.medicine_quantity}}</td>\n            <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\n          </tr>\n        </table>\n        \n        \n\n    \n\n        <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CaseDetails } from 'src/app/doctor/doctor-dashboard/cases/doctor-case-details/CaseDetails';\n\n@Component({\n  selector: 'app-view-cases',\n  templateUrl: './clinic-view-cases.component.html',\n  styleUrls: ['./clinic-view-cases.component.css']\n})\nexport class ClinicViewCasesComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/clinic/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-dashboard',\n  templateUrl: './clinic-dashboard.component.html',\n  styleUrls: ['./clinic-dashboard.component.css']\n})\nexport class ClinicDashboardComponent implements OnInit {\n\n\n  constructor(private router:Router) { }\n\n  \n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Clinic Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          <!-- <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"PatientList()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-warning\">\n                      <i class=\"fa fa-stethoscope \" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Patient List</p>\n                  </div>\n                  \n        </div>\n          </div> -->\n      </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-patient',\n  templateUrl: './clinic-new-patient.component.html',\n  styleUrls: ['./clinic-new-patient.component.css']\n})\nexport class ClinicNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/clinic/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientDetails } from 'src/app/doctor/doctor-dashboard/doctor-patient-details/doctor-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './clinic-patient-details.component.html',\n  styleUrls: ['./clinic-patient-details.component.css']\n})\nexport class ClinicPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: PatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<PatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`clinic/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`clinic/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n  </head>\n  \n  <body>\n    <div class=\"container\">\n      <h2>Patient Details</h2>\n      <div class=\"row justify-content-center\">\n  \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>Add Case</p>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n          <div class=\"row main-box-layout img-thumbnail\">\n            <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n              <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n              <p>View Cases</p>\n            </div>\n          </div>\n        </div>\n  \n      <br>\n      <br>\n      <br>\n      <br>\n      <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n      <table class=\"table table-dark\">\n      \n          <tr>\n            <th>First Name</th>\n              <td>{{patientDetails.first_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Last Name</th>\n              <td>{{patientDetails.last_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Father Name</th>\n              <td>{{patientDetails.father_name}}</td>\n          </tr>\n  \n          <tr>\n            <th>Mother Name</th>\n              <td>{{patientDetails.mother_name}}</td>\n          </tr>\n            \n          <tr>\n            <th>Age</th>\n              <td>{{patientDetails.age}}</td>\n          </tr>\n  \n          <tr>\n            <th>Gender</th>\n              <td>{{patientDetails.gender}}</td>\n          </tr>\n\n          <tr>\n            <th>Blood Group</th>\n              <td>{{patientDetails.blood_group}}</td>\n          </tr>\n  \n          <tr>\n            <th>Contact Number</th>\n              <td>{{patientDetails.contact_number}}</td>\n          </tr>\n  \n          <tr>\n            <th>Emergency Contact Number</th>\n              <td>{{patientDetails.emergency_contact_number}}</td>\n          </tr>\n  \n          <tr>\n            <th>Email Address</th>\n              <td>{{patientDetails.email}}</td>\n          </tr>\n     \n          \n      </table>\n      <!-- <div if=\"casesResult.length > 0\">\n        <div ngfor></div>\n      </div>\n    -->\n   \n   \n  </div>\n  </div>\n  </body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationClinicService } from './authentication-clinic.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardClinicService implements CanActivate {\r\n  constructor(private authClinic: AuthenticationClinicService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authClinic.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface ClinicDetails {\r\n  _id: string,\r\n  clinic_name: string,\r\n  license_number: string,\r\n  established_date: Date\r\n  doctor_name: string,\r\n  qualification:string,\r\n  gender: string,\r\n  age:number,\r\n  dob:Date,\r\n  street: string,\r\n  city: string,\r\n  state: string,\r\n  pincode: number,\r\n  landmark: string,\r\n  email: string,\r\n  password: string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  clinic_document:File\r\n}\r\n\r\nexport interface AddClinic {\r\n  _id: string,\r\n  clinic_name: string,\r\n  license_number: string,\r\n  established_date: Date\r\n  doctor_name: string,\r\n  qualification:string,\r\n  gender: string,\r\n  age:number,\r\n  dob:Date,\r\n  street: string,\r\n  city: string,\r\n  state: string,\r\n  pincode: number,\r\n  landmark: string,\r\n  email: string,\r\n  password: string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  clinic_document:File\r\n}\r\n\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  clinic_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationClinicService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(clinic:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/clinic/login`, clinic);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('clinic_name',data.clinic_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const clinic_name = localStorage.getItem('clinic_name');\r\n    if (token && _id && clinic_name) {\r\n      return { token: token, _id: _id, clinic_name: clinic_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('clinic_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public AddClinic(clinic: ClinicDetails): Observable<any> {\r\n    const formData = new FormData;\r\n    for (const [key, value] of Object.entries(clinic)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n    return this.httpClient.post(`http://127.0.0.1:5000/api/clinic/register`, formData)\r\n  }\r\n}","import { Component } from '@angular/core';\nimport { AuthenticationClinicService } from './authentication-clinic.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clinic-login',\n  templateUrl: './clinic-login.component.html',\n  styleUrls: ['./clinic-login.component.css']\n})\nexport class ClinicLoginComponent{\n\n  error : string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n  constructor(private auth:AuthenticationClinicService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n      this.auth.loginData(response);\n      this.router.navigate(['/clinic/dashboard'])\n    }\n    else {\n      this.error = response.result;\n    }\n  })\n}\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-case-details',\n  templateUrl: './doctor-case-details.component.html',\n  styleUrls: ['./doctor-case-details.component.css']\n})\nexport class DoctorCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}\n","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-new-case',\n  templateUrl: './doctor-new-case.component.html',\n  styleUrls: ['./doctor-new-case.component.css']\n})\nexport class DoctorNewCaseComponent implements OnInit{\n\n\n  patientID:string \n  // Cartoon:string\n\n\n \n  // DosageList: any = ['1-1-1',\n  //                           '1-0-1', \n  //                           '1-0-0',\n  //                           '1-1-0',\n  //                           '0-1-1',\n  //                           '0-1-0',\n  //                           '0-0-1',\n  //                         ]\n  \n  DosageList: any = ['1-1-1']\n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: string;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.DosageList,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-5 mx-auto\">\r\n        <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\r\n          <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \r\n           <hr>\r\n          <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\r\n          \r\n          \r\n          <!-- Disease Name -->\r\n          <label for=\"disease_name\"> Disease name</label>\r\n          <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\r\n          <br>\r\n\r\n          <!-- observation Summary -->\r\n          <label for=\"disease_observation\">Observations</label>\r\n          <textarea formControlName=\"disease_observation\" class=\"form-control\" placeholder=\"enter symptoms or observations\" rows=\"3\"> </textarea>\r\n          <br>\r\n\r\n          <!-- Lab Test Required -->\r\n          \r\n        </form>\r\n\r\n        <label for=\"medicine_name\">Medicine Name</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"enter medicine name\" [(ngModel)]=\"medicine_name\">\r\n        <br>\r\n\r\n        <!-- Dosage -->\r\n        <div class=\"form-group\">\r\n          <label for=\"dosage\">Medicine Dosage</label>\r\n          <select formControlName=\"dosage\" class=\"form-control\">\r\n              <option disabled>Select Dosage</option>\r\n              <option *ngFor=\"let dosage of DosageList\">{{dosage}}</option>\r\n          </select>\r\n\r\n                 </div>\r\n\r\n\r\n        <label for=\"\">Medicine Quantity</label>\r\n        <input type=\"number\" class=\"form-control\" placeholder=\"enter quantity\" [(ngModel)]=\"medicine_quantity\">\r\n        <br>\r\n        <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\r\n        <br>\r\n        <br>\r\n        <h5>Medicines List</h5>\r\n        <table class=\"table bg-white text-dark\">\r\n          <tr>\r\n            <th>Sr No.</th>\r\n            <th>Medicine</th>\r\n            <th>Dosage</th>\r\n            <th>Quantity</th>\r\n            <th>Delete</th>\r\n            <!-- <th>isTaken</th> -->\r\n            \r\n          </tr>\r\n          <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\r\n          <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\r\n            <td>{{ i+1 }}</td>\r\n            <td>{{medicine.medicine_name}}</td>\r\n            <td>{{medicine.medicine_dosage}}</td>\r\n            <td>{{medicine.medicine_quantity}}</td>\r\n            <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\r\n          </tr>\r\n        </table>\r\n        \r\n        \r\n\r\n        <label class=\"label\"> Lab Test Required</label>\r\n        <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\r\n          <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\r\n          {{ cartoon }}\r\n        </div>\r\n      <br>\r\n\r\n        <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { viewCases } from './doctor-viewCases';\n\n\n@Component({\n  selector: 'app-view-cases',\n  templateUrl: './doctor-view-cases.component.html',\n  styleUrls: ['./doctor-view-cases.component.css']\n})\nexport class DoctorViewCasesComponent implements OnInit {\n\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  // CasesList:viewCases\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n","<div class=\"container\">\n    <br>\n    <h3>Patient Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/doctor/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-dashboard',\n  templateUrl: './doctor-dashboard.component.html',\n  styleUrls: ['./doctor-dashboard.component.css']\n})\nexport class DoctorDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/doctor/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n  <div class=\"container main-section\" >\n\n    <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Doctor Dashboard</h1>\n\n\n\t<div class=\"row justify-content-md-center\">\n\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n\t\t\t\t\t<p>Find Patient</p>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n    \n\n\t\t\n\t</div>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctor-new-patient',\n  templateUrl: './doctor-new-patient.component.html',\n  styleUrls: ['./doctor-new-patient.component.css']\n})\nexport class DoctorNewPatientComponent implements OnInit {\n  patientID:'';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n    \n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n        <div class=\"form-group\">\n          <label for=\"text\">Patient ID</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/doctor/patient-details',patientID]\" >Find</button>\n    \n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientDetails } from './doctor-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './doctor-patient-details.component.html',\n  styleUrls: ['./doctor-patient-details.component.css']\n})\nexport class DoctorPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: PatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<PatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`doctor/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`doctor/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n  <div class=\"container\">\n    <h2>Patient Details</h2>\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>Add Case</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n\n    <br>\n    <br>\n    <br>\n    <br>\n    <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n    <table class=\"table table-dark\">\n    \n        <tr>\n          <th>First Name</th>\n            <td>{{patientDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Last Name</th>\n            <td>{{patientDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Father Name</th>\n            <td>{{patientDetails.father_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Mother Name</th>\n            <td>{{patientDetails.mother_name}}</td>\n        </tr>\n          \n        <tr>\n          <th>Age</th>\n            <td>{{patientDetails.age}}</td>\n        </tr>\n\n        <tr>\n          <th>Gender</th>\n            <td>{{patientDetails.gender}}</td>\n        </tr>\n\n        <tr>\n          <th>Contact Number</th>\n            <td>{{patientDetails.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Emergency Contact Number</th>\n            <td>{{patientDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Email Address</th>\n            <td>{{patientDetails.email}}</td>\n        </tr>\n   \n        \n    </table>\n    <!-- <div if=\"casesResult.length > 0\">\n      <div ngfor></div>\n    </div>\n  -->\n \n \n</div>\n</div>\n</body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationDoctorService } from './authentication-doctor.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardDoctorService implements CanActivate {\r\n  constructor(private authDoctor: AuthenticationDoctorService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authDoctor.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface DoctorDetails {\r\n  _id: string,\r\n  first_name: string,\r\n  last_name: string,\r\n  email: string,\r\n  age:number,\r\n  gender:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  qualification:string,\r\n  license_number:string,\r\n  doctor_document:File,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  pincode:number,\r\n  landmark:string\r\n}\r\nexport interface AddDoctor {\r\n  _id: string,\r\n  first_name: string,\r\n  last_name: string,\r\n  email: string,\r\n  age:number,\r\n  gender:string,\r\n  profile_photo:File,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  qualification:string,\r\n  license_number:string,\r\n  doctor_document:File,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  pincode:number,\r\n  landmark:string\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  doctor_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationDoctorService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/doctor/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('doctor_name',data.doctor_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const doctor_name = localStorage.getItem('doctor_name');\r\n    if (token && _id && doctor_name) {\r\n      return { token: token, _id: _id, doctor_name: doctor_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('doctor_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddUser(doctor: DoctorDetails): Observable<any> {\r\n      const formData = new FormData;\r\n      for (const [key, value] of Object.entries(doctor)) {\r\n        formData.append(key, value);\r\n      }\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/doctor/register`, formData)\r\n  }\r\n\r\n \r\n\r\n}","import { Component } from '@angular/core';\nimport { AuthenticationDoctorService } from './authentication-doctor.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-login',\n  templateUrl: './doctor-login.component.html',\n  styleUrls: ['./doctor-login.component.css']\n})\nexport class DoctorLoginComponent{\n\n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n  constructor(private auth:AuthenticationDoctorService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/doctor/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  UserLogin(){\n    this.router.navigateByUrl('user/login')\n  }\n\n  DoctorLogin(){\n    this.router.navigateByUrl('doctor/login')\n  }\n\n  HospitalLogin(){\n    this.router.navigateByUrl('hospital/login')\n  }\n\n  LaboratoryLogin(){\n    this.router.navigateByUrl('laboratory/login')\n  }\n\n  MedicalStoreLogin(){\n    this.router.navigateByUrl('medical/login')\n  }\n\n  ClinicLogin(){\n    this.router.navigateByUrl('clinic/login')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n      <div class=\"col-sm-8 mx-auto\">\n        <div class=\"text-center\">\n        <img src=\"assets/logo.png\"  width=\"300\" height=\"300\"> \n      </div>\n                <h1 class=\"text-center\">HEALTH CARD \n          <br>\n          <h4 class=\"text-center\"> \n            Welcome to Health Card. Please Login to proceed\n          </h4>\n        </h1>\n        <hr class=\"hr\">\n\n        <div class=\"row justify-content-md-center\">\n\n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"UserLogin()\">\n            <div class=\"row main-box-layout img-thumbnail\">\n              <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                <p>User Login</p>\n              </div>\n            </div>\n          </div>\n        \n\n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"HospitalLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Hospital Login</p>\n                </div>\n              </div>\n            </div>\n      \n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"DoctorLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-stethoscope\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Doctor Login</p>\n                </div>\n              </div>\n            </div>\n\n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"LaboratoryLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-flask\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Lab Login</p>\n                </div>\n              </div>\n            </div>\n\n            \n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"MedicalStoreLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-medkit\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Medical Login</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"ClinicLogin()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                  <i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                  <p>Clinic Login</p>\n                </div>\n              </div>\n          \n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-case-details',\n  templateUrl: './hospital-case-details.component.html',\n  styleUrls: ['./hospital-case-details.component.css']\n})\nexport class HospitalCaseDetailsComponent implements OnInit {\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-hospital-new-case',\n  templateUrl: './hospital-new-case.component.html',\n  styleUrls: ['./hospital-new-case.component.css']\n})\nexport class HospitalNewCaseComponent implements OnInit {\n\n  patientID:string \n  // Cartoon:string\n\n\n \n  // DosageList: any = ['1-1-1',\n  //                           '1-0-1', \n  //                           '1-0-0',\n  //                           '1-1-0',\n  //                           '0-1-1',\n  //                           '0-1-0',\n  //                           '0-0-1',\n  //                         ]\n  \n  DosageList: any = ['1-1-1']\n\n  \n  cartoonsData = [\n    'Blood Test',\n    'Urine Test',\n    'Prothrombin Time',\n    'CBC',\n    'Lipid Panel',\n    'Hemoglobin A1C',\n    'Stool Occult Test'\n  ];\n\n  // name = localStorage.getItem('name');\n  medicine_name: string;\n  medicine_dosage: string;\n  medicine_quantity: number;\n  NewCaseForm: FormGroup;\n\n    constructor(public fb:FormBuilder,private router:Router, private http:HttpClient ,private activatedRoute:ActivatedRoute) {\n      //to get patientID from url for passing\n      this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n        if (parameter.has('patientID')) {\n          this.patientID = parameter.get('patientID');\n          console.log(this.patientID);\n        }\n      })\n     }\n\n    \n    onChange(i: number, event) {\n      let testcases = this.NewCaseForm.get('test_required') as FormArray\n      if(event.target.checked){\n        testcases.push(this.fb.control(this.cartoonsData[i]));\n      }\n      else{\n        testcases.removeAt(i);\n      }\n      console.log(this.NewCaseForm.get('test_required').value);\n    }\n\n  ngOnInit() {\n\n    this.NewCaseForm = this.fb.group({\n      disease_observation:[''],\n      medicines : this.fb.array([]),\n      test_required: this.fb.array([]),\n      disease_name: ['',Validators.required]\n     });\n    }\n    \n     addMedicine(){\n       const medicine = {\n         medicine_name: this.medicine_name,\n         medicine_dosage: this.DosageList,\n         medicine_quantity: this.medicine_quantity,\n         isTaken: false\n        }\n       let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n       getMedicine.push(this.fb.control(medicine));\n       this.NewCaseForm.updateValueAndValidity();\n       this.medicine_name = null;\n       this.medicine_dosage = null;\n       this.medicine_quantity = null;\n       console.log(this.NewCaseForm.value)\n     }\n     \n     removeMedicine(i){\n      let getMedicine = this.NewCaseForm.get('medicines') as FormArray\n      getMedicine.removeAt(i);\n     }\n\n    \n     OnSubmit(){\n       console.log(this.NewCaseForm.value)\n      this.http.put(`http://127.0.0.1:5000/api/add-cases/${this.patientID }`,this.NewCaseForm.value).subscribe(response => {\n        console.log(response);\n      })\n     }\n      \n\n\n} \n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mt-5 mx-auto\">\n      <form [formGroup]=\"NewCaseForm\" (ngSubmit)=\"OnSubmit()\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Add New Case</h1>    \n         <hr>\n        <h3 class=\"h4 mb-3 font-weight-normal\">Case Information</h3>\n        \n        \n        <!-- Disease Name -->\n        <label for=\"disease_name\"> Disease name</label>\n        <input formControlName=\"disease_name\" class=\"form-control\" placeholder=\"Enter disease name or case title\" type=\"text\">\n        <br>\n\n        <!-- observation Summary -->\n        <label for=\"disease_observation\">Observations</label>\n        <textarea formControlName=\"disease_observation\" class=\"form-control\" placeholder=\"enter symptoms or observations\" rows=\"3\"> </textarea>\n        <br>\n\n        <!-- Lab Test Required -->\n        \n      </form>\n\n      <label for=\"medicine_name\">Medicine Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"enter medicine name\" [(ngModel)]=\"medicine_name\">\n      <br>\n\n      <!-- Dosage -->\n    \n        <label for=\"medicine_dosage\">Medicine Dosage</label>\n        <select formControlName=\"medicine_dosage\" class=\"form-control\">\n            <option disabled>Select Dosage</option>\n            <option *ngFor=\"let dosage of DosageList\">{{dosage}}</option>\n        </select>\n\n        \n     \n\n\n      <label for=\"\">Medicine Quantity</label>\n      <input type=\"number\" class=\"form-control\" placeholder=\"enter quantity\" [(ngModel)]=\"medicine_quantity\">\n      <br>\n      <button (click)=\"addMedicine()\" class=\"btn btn-success\">Add Medicine</button>\n      <br>\n      <br>\n      <h5>Medicines List</h5>\n      <table class=\"table bg-white text-dark\">\n        <tr>\n          <th>Sr No.</th>\n          <th>Medicine</th>\n          <th>Dosage</th>\n          <th>Quantity</th>\n          <th>Delete</th>\n          <!-- <th>isTaken</th> -->\n          \n        </tr>\n        <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\">\n        <!-- <tr *ngFor = \"let medicine of NewCaseForm.get('medicines').value; let i = index\"></tr> -->\n          <td>{{ i+1 }}</td>\n          <td>{{medicine.medicine_name}}</td>\n          <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.medicine_quantity}}</td>\n          <td><button (click)=\"removeMedicine(i)\" class=\"btn btn-danger\">Delete</button></td>\n        </tr>\n      </table>\n      \n      \n\n      <label class=\"label\"> Lab Test Required</label>\n      <div *ngFor=\"let cartoon of cartoonsData; let i = index\">\n        <input type=\"checkbox\" (change)=\"onChange(i,$event)\">\n        {{ cartoon }}\n      </div>\n    <br>\n\n      <button type=\"button\" (click)=\"OnSubmit()\" class=\"btn btn-lg btn-primary btn-block\">Add Case</button>\n  </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-view-cases',\n  templateUrl: './hospital-view-cases.component.html',\n  styleUrls: ['./hospital-view-cases.component.css']\n})\nexport class HospitalViewCasesComponent implements OnInit {\n\n  \n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  // CasesList:viewCases\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/hospital/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-dashboard',\n  templateUrl: './hospital-dashboard.component.html',\n  styleUrls: ['./hospital-dashboard.component.css']\n})\nexport class HospitalDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/hospital/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n  <div class=\"container main-section\" >\n\n    <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Hospital Dashboard</h1>\n\n\n\t<div class=\"row justify-content-md-center\">\n\n\t\t<div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n\t\t\t<div class=\"row main-box-layout img-thumbnail\">\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n\t\t\t\t\t<i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n\t\t\t\t\t<p>Find Patient</p>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n    \n\n\t\t\n\t</div>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hospital-new-patient',\n  templateUrl: './hospital-new-patient.component.html',\n  styleUrls: ['./hospital-new-patient.component.css']\n})\nexport class HospitalNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n      \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/hospital/patient-details',patientID]\" >Find</button>\n     \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HospitalPatientDetails } from './hospital-patient-details';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-patient-details',\n  templateUrl: './hospital-patient-details.component.html',\n  styleUrls: ['./hospital-patient-details.component.css']\n})\nexport class HospitalPatientDetailsComponent implements OnInit {\n  patientID: string;\n  patientDetails: HospitalPatientDetails;\n\n\n\n  constructor(private httpClient: HttpClient, private activatedRoute: ActivatedRoute, private route:Router) {\n    this.activatedRoute.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        console.log(this.patientID);\n      }\n    })\n   }\n\n  ngOnInit(){\n   \n    this.getUserDetails();\n\n  }\n  \n\n  getUserDetails(){\n    this.httpClient.get<HospitalPatientDetails>(`http://127.0.0.1:5000/api/user/${this.patientID}`).subscribe(response => {\n      // console.log(response);\n      // console.log(this.patientDetails)\n      this.patientDetails = response;\n    })\n    // console.log(this.patientDetails);\n  }\n\n  \n  NewCase(){\n    this.route.navigateByUrl(`hospital/patient-details/new-case/${this.patientID}`)\n  }\n\n  ViewCases(){\n    this.route.navigateByUrl(`hospital/patient-details/view-cases/${this.patientID}`)\n  }\n\n}\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n\n<body>\n  <div class=\"container\">\n    <h2>Patient Details</h2>\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"NewCase()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>Add Case</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n\n    <br>\n    <br>\n    <br>\n    <br>\n    <!-- <p>The .table-striped class adds zebra-stripes to a table:</p>             -->\n    <table class=\"table table-dark\">\n    \n        <tr>\n          <th>First Name</th>\n            <td>{{patientDetails.first_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Last Name</th>\n            <td>{{patientDetails.last_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Father Name</th>\n            <td>{{patientDetails.father_name}}</td>\n        </tr>\n\n        <tr>\n          <th>Mother Name</th>\n            <td>{{patientDetails.mother_name}}</td>\n        </tr>\n          \n        <tr>\n          <th>Age</th>\n            <td>{{patientDetails.age}}</td>\n        </tr>\n\n        <tr>\n          <th>Gender</th>\n            <td>{{patientDetails.gender}}</td>\n        </tr>\n\n        <tr>\n          <th>Contact Number</th>\n            <td>{{patientDetails.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Emergency Contact Number</th>\n            <td>{{patientDetails.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <th>Email Address</th>\n            <td>{{patientDetails.email}}</td>\n        </tr>\n   \n        \n    </table>\n    <!-- <div if=\"casesResult.length > 0\">\n      <div ngfor></div>\n    </div>\n  -->\n \n \n</div>\n</div>\n</body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationHospitalService } from './authentication-hospital.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardHospitalService implements CanActivate {\r\n  constructor(private authHospital: AuthenticationHospitalService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authHospital.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\nexport interface HospitalDetails {\r\n  _id: string,\r\n  hospital_name:string,\r\n  email: string,\r\n  password: string,\r\n  license_number:string,\r\n  established_date:Date,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  owner_name:string,\r\n  steet:string\r\n  city:string\r\n  state:string\r\n  pincode:number\r\n  landmark:string\r\n  hospital_document:File\r\n}\r\nexport interface AddHospital {\r\n  _id: string,\r\n  hospital_name:string,\r\n  email: string,\r\n  password: string,\r\n  license_number:string,\r\n  established_date:Date,\r\n  contact_number:number,\r\n  emergency_contact_number:number,\r\n  owner_name:string,\r\n  steet:string\r\n  city:string\r\n  state:string\r\n  pincode:number\r\n  landmark:string\r\n  hospital_document:File\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  hospital_name: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationHospitalService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/hospital/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('hospital_name',data.hospital_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const hospital_name = localStorage.getItem('hospital_name');\r\n    if (token && _id && hospital_name) {\r\n      return { token: token, _id: _id, hospital_name: hospital_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('hospital_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddHospital(hospital: HospitalDetails): Observable<any> {\r\n      const formData = new FormData;\r\n      for (const [key, value] of Object.entries(hospital)) {\r\n        formData.append(key, value);\r\n      }\r\n      console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/hospital/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component } from '@angular/core';\nimport {  AuthenticationHospitalService } from './authentication-hospital.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hospital-login',\n  templateUrl: './hospital-login.component.html',\n  styleUrls: ['./hospital-login.component.css']\n})\nexport class HospitalLoginComponent{\n  error : string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n  constructor(private auth:AuthenticationHospitalService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n      this.auth.loginData(response);\n      this.router.navigate(['/hospital/dashboard'])\n    }\n    else {\n      this.error = response.result;\n    }\n  })\n}\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-dashboard',\n  templateUrl: './laboratory-dashboard.component.html',\n  styleUrls: ['./laboratory-dashboard.component.css']\n})\nexport class LaboratoryDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  FindPatient(){\n    this.router.navigateByUrl('/laboratory/new-patient')\n  }\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Medical Store Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          \n      </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-new-patient',\n  templateUrl: './laboratory-new-patient.component.html',\n  styleUrls: ['./laboratory-new-patient.component.css']\n})\nexport class LaboratoryNewPatientComponent implements OnInit {\n\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/clinic/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/laboratory/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { LaboratoryFile } from './laboratoryFile';\n\n@Component({\n  selector: 'app-laboratory-view-and-update-case-details',\n  templateUrl: './laboratory-view-and-update-case-details.component.html',\n  styleUrls: ['./laboratory-view-and-update-case-details.component.css']\n})\nexport class LaboratoryViewAndUpdateCaseDetailsComponent implements OnInit {\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(public fb:FormBuilder, private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  PatientUploadLabReport = this.fb.group({\n    patient_lab_report: [''],\n   });\n\n   selectFile(event) {\n    const patient_lab_report = (event.target as HTMLInputElement).files[0];\n    console.log(patient_lab_report);\n    this.PatientUploadLabReport.get('patient_lab_report').patchValue(patient_lab_report);\n    this.PatientUploadLabReport.updateValueAndValidity();\n    console.log(this.PatientUploadLabReport.value);\n  }\n\n\n    getCaseDetails(){\n      this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n        this.caseDetails = response;\n      console.log(this.caseDetails);\n      console.log(response)\n    });\n  }\n\n  NewPatientUploadLabReport : LaboratoryFile\n\nonSubmit(){\nthis.NewPatientUploadLabReport = this.PatientUploadLabReport.value;\n\nconst formData = new FormData;\nfor (const [key, value] of Object.entries(this.NewPatientUploadLabReport)) {\n  formData.append(key, value);\n}\nthis.httpClient.post(`http://127.0.0.1:5000/api/user/cases/upload/${this.caseID}`,formData)\n.subscribe(\n  () =>{\n    this.router.navigateByUrl('/laboratory/dashboard')\n    console.log(this.NewPatientUploadLabReport)\n  },\n  err =>{\n    console.log(err);\n\n  }\n)\n      \n      }\n}","<div class=\"container\">\n    <h2>Case Details</h2>\n    <form [formGroup]=\"PatientUploadLabReport\" (ngSubmit)=\"onSubmit()\">\n     <!-- Lab Reports -->\n        <div class=\"form-group\">\n            <label for=\"patient_lab_report\">Lab Reports</label>\n            <div class=\"custom-file\">\n            <label for=\"patient_lab_report\" class=\"custom-file-label\">Lab Reports</label>\n            <input type=\"file\" class=\"custom-file-input\"\n              (change)=\"selectFile($event)\" accept=\".pdf\"> \n\n            </div>\n            <br>\n            <br>\n        \n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Add Report</button>\n\n        </div>\n        </form>\n\n    <table class=\"table table-dark\">\n  \n        <tr>\n            <th>Disease Name</th>\n            <td>{{caseDetails.disease_name}}</td>\n        </tr>\n  \n        <tr>\n            <th>Observations</th>\n            <td><pre>{{caseDetails.disease_observation}}</pre></td>\n        </tr>\n      </table>\n  \n      <br>\n      <h5>Medicines Prescribed</h5>\n      <hr>  \n  \n      <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n        <tr>\n          <th>Sr. No.</th>\n          <th>Medicines</th>\n          <th>Dosage</th>\n          <th>Taken</th>\n            <!-- <td>{{caseDetails.temp}}</td> -->\n        </tr>\n  \n  \n  \n        <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n          <td>{{i+1}}</td>\n             <td>{{medicine.medicine_name}}</td>\n             <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.isTaken}}</td>\n           </tr>\n          </table>\n  \n          <br>\n            <h5>Test Reuired</h5>\n          <hr> \n  \n            <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Lab Test </th>\n                </tr>\n  \n  \n              <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n                <td>{{i+1}}</td>\n                  <td>{{test_required}}</td>\n                </tr>\n            </table>\n         \n\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-view-cases',\n  templateUrl: './laboratory-view-cases.component.html',\n  styleUrls: ['./laboratory-view-cases.component.css']\n})\nexport class LaboratoryViewCasesComponent implements OnInit {\n\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/laboratory/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationLaboratoryService } from './authentication-Laboratory.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardLaboratoryService implements CanActivate {\r\n  constructor(private authLaboratory: AuthenticationLaboratoryService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authLaboratory.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\n\r\nexport interface LaboratoryDetails {\r\n  _id: string,\r\n  laboratory_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  laboratory_document:File\r\n  established_date:Date\r\n}\r\nexport interface AddLaboratory {\r\n  _id: string,\r\n  laboratory_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  password:string\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  laboratory_document:File\r\n  established_date:Date\r\n\r\n\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  laboratory_name: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationLaboratoryService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/laboratory/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('laboratory_name',data.laboratory_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const laboratory_name = localStorage.getItem('laboratory_name');\r\n    if (token && _id && laboratory_name) {\r\n      return { token: token, _id: _id, laboratory_name: laboratory_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('laboratory_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddLaboratory(laboratory: LaboratoryDetails): Observable<any> {\r\n      const formData = new FormData;\r\n    for (const [key, value] of Object.entries(laboratory)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/laboratory/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component } from '@angular/core';\nimport { AuthenticationLaboratoryService } from './authentication-Laboratory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-laboratory-login',\n  templateUrl: './laboratory-login.component.html',\n  styleUrls: ['./laboratory-login.component.css']\n})\nexport class LaboratoryLoginComponent{\n  \n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n\n  constructor(private auth:AuthenticationLaboratoryService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/laboratory/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n  }\n  ","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\n  error: string;\n\n  credentials: TokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email:'',\n    password: ''\n  }\n  constructor(private auth: AuthenticationService, private route:Router) { }\n  login(){\n    this.auth.login(this.credentials).subscribe(response => {\n      if(response.token){\n        this.route.navigate(['/user/profile'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-new-patient',\n  templateUrl: './medical-new-patient.component.html',\n  styleUrls: ['./medical-new-patient.component.css']\n})\nexport class MedicalNewPatientComponent implements OnInit {\n  patientID:'';\n\n  constructor( private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/medical/new-patient')\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n       \n          <h1 class=\"h3 mb-3 font-weight-normal text-center\">Find Patient</h1>\n          <div class=\"form-group\">\n            <label for=\"text\">Patient ID</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter patient ID\" [(ngModel)]=\"patientID\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [routerLink]=\"['/medical/patient-details',patientID]\" >Find</button>\n  \n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-medical-view-and-update-case-details',\n  templateUrl: './medical-view-and-update-case-details.component.html',\n  styleUrls: ['./medical-view-and-update-case-details.component.css']\n})\nexport class MedicalViewAndUpdateCaseDetailsComponent implements OnInit {\n\n  caseID:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('caseID')) {\n        this.caseID = parameter.get('caseID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.caseID}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n    <h2>Case Details</h2>\n    <table class=\"table table-dark\">\n  \n        <tr>\n            <th>Disease Name</th>\n            <td>{{caseDetails.disease_name}}</td>\n        </tr>\n  \n        <tr>\n            <th>Observations</th>\n            <td><pre>{{caseDetails.disease_observation}}</pre></td>\n        </tr>\n      </table>\n  \n      <br>\n      <h5>Medicines Prescribed</h5>\n      <hr>  \n  \n      <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n        <tr>\n          <th>Sr. No.</th>\n          <th>Medicines</th>\n          <th>Dosage</th>\n          <th>Taken</th>\n            <!-- <td>{{caseDetails.temp}}</td> -->\n        </tr>\n  \n  \n  \n        <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n          <td>{{i+1}}</td>\n             <td>{{medicine.medicine_name}}</td>\n             <td>{{medicine.medicine_dosage}}</td>\n            <td>{{medicine.isTaken}}</td>\n           </tr>\n          </table>\n  \n          <br>\n            <h5>Test Reuired</h5>\n          <hr> \n  \n            <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Lab Test </th>\n                </tr>\n  \n  \n              <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n                <td>{{i+1}}</td>\n                  <td>{{test_required}}</td>\n                </tr>\n            </table>\n         \n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-view-cases',\n  templateUrl: './medical-view-cases.component.html',\n  styleUrls: ['./medical-view-cases.component.css']\n})\nexport class MedicalViewCasesComponent implements OnInit {\n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  patientID:string\n  // case_name:any\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('patientID')) {\n        this.patientID = parameter.get('patientID');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  \n  \n  ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.patientID}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n \n}\n\n","<div class=\"container\">\n    <h2>Patient Cases</h2>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases\">\n            <td [routerLink]=\"['/medical/patient-details/case-details/',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medicalstore-dashboard',\n  templateUrl: './medicalstore-dashboard.component.html',\n  styleUrls: ['./medicalstore-dashboard.component.css']\n})\nexport class MedicalstoreDashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  FindPatient(){\n    this.router.navigateByUrl('/medical/new-patient')\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div class=\"container main-section\" >\n  \n      <h1 class=\"h3 mb-3 mt-3 font-weight-normal text-center\" >Medical Store Dashboard</h1>\n  \n  \n      <div class=\"row justify-content-md-center\">\n  \n          <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"position: relative;\" (click)=\"FindPatient()\">\n              <div class=\"row main-box-layout img-thumbnail\">\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n                      <p>Find Patient</p>\n                  </div>\n              </div>\n      </div>\n      \n  \n          \n      </div>\n  </div>\n  </body>","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { AuthenticationMedicalStoreService } from './authentication-medicalstore.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardMedicalStoreService implements CanActivate {\r\n  constructor(private authMedicalStore: AuthenticationMedicalStoreService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authMedicalStore.isLoggedIn()) {\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Router } from '@angular/router'\r\n\r\n\r\nexport interface MedicalDetails {\r\n  _id: string,\r\n  medical_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  established_date:Date\r\n  medical_document:File\r\n}\r\nexport interface AddMedical {\r\n  _id: string,\r\n  medical_name: string,\r\n  license_number : string,\r\n  street:string,\r\n  city:string,\r\n  state:string,\r\n  landmark:string,\r\n  pincode:number,\r\n  email: string,\r\n  password:string\r\n  owner_name:string,\r\n  contact_number:number,\r\n  emergency_contact_number:number\r\n  established_date:Date\r\n  medical_document:File\r\n\r\n}\r\ninterface loginData {\r\n  _id: string,\r\n  token: string,\r\n  medical_name: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationMedicalStoreService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  login(user:{email:string, password: string}) {\r\n    return this.httpClient.post<any>(`http://127.0.0.1:5000/api/medical/login`, user);\r\n  }\r\n\r\n  logout(){\r\n    this.removeData();\r\n  }\r\n\r\n  loginData(data) {\r\n    this.saveData(data);\r\n  }\r\n\r\n  saveData(data: loginData) {\r\n    localStorage.setItem('token',data.token);\r\n    localStorage.setItem('_id',data._id);\r\n    localStorage.setItem('medical_name',data.medical_name);\r\n  }\r\n  \r\n  getData() {\r\n    const token = localStorage.getItem('token');\r\n    const _id = localStorage.getItem('_id');\r\n    const medical_name = localStorage.getItem('medical_name');\r\n    if (token && _id && medical_name) {\r\n      return { token: token, _id: _id, medical_name: medical_name }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('_id');\r\n    localStorage.removeItem('medical_name');\r\n  }\r\n\r\n  public isLoggedIn(): boolean{\r\n    const data = this.getData();\r\n    if(!data){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n    public AddMedical(medical: MedicalDetails): Observable<any> {\r\n      const formData = new FormData;\r\n    for (const [key, value] of Object.entries(medical)) {\r\n      formData.append(key, value);\r\n    }\r\n    console.log(formData);\r\n      return this.httpClient.post(`http://127.0.0.1:5000/api/medical/register`, formData)\r\n  }\r\n\r\n \r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationMedicalStoreService } from './authentication-medicalstore.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medicalstore-login',\n  templateUrl: './medicalstore-login.component.html',\n  styleUrls: ['./medicalstore-login.component.css']\n})\nexport class MedicalstoreLoginComponent {\n\n  error: string;\n  credentials = {\n    email:'',\n    password: ''\n  }\n\n constructor(private auth:AuthenticationMedicalStoreService, private router: Router) { }\n  login(){\n    let user = {email: this.credentials.email, password: this.credentials.password}\n    this.auth.login(user).subscribe(response => {\n      if(response.token){\n        this.auth.loginData(response);\n        this.router.navigate(['/medical/dashboard'])\n      }\n      else {\n        this.error = response.result;\n      }\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"login()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <span class=\"text-danger\" *ngIf=\"error\">{{error}}</span>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent{\n  credentials: TokenPayload = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: ''\n  }\n\n  constructor( private auth:AuthenticationService, private router:Router) { }\n\n  register(){\n    this.auth.register(this.credentials).subscribe(\n      () =>{\n        this.router.navigateByUrl('/profile')\n      },\n      err =>{\n        console.error(err);\n        \n      }\n    )\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form (submit)=\"register()\">\n          <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n          <div class=\"form-group\">\n            <label for=\"name\">First name</label>\n            <input type=\"text\" class=\"form-control\" name=\"first_name\" placeholder=\"Enter your first name\" [(ngModel)]=\"credentials.first_name\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Last name</label>\n            <input type=\"text\" class=\"form-control\" name=\"last_name\" placeholder=\"Enter your lastname name\" [(ngModel)]=\"credentials.last_name\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"credentials.email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Register!</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpClient, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http: HttpClient) { }\n  filename: string;\n\n  pushFileToStorage(file: File): Observable<HttpEvent<{}>> {\n    const formdata: FormData = new FormData();\n\n    formdata.append('file', file);\n\n    const req = new HttpRequest('POST', 'http://127.0.0.1:5000/api/file-upload', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n\n\n\n  serFilename(value: string) {\n    this.filename = value;\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\n// import { Router } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { ServiceService } from './service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  // constructor(private route:Router, private httpClient:HttpClient) { }\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  // progress: { percentage: number } = { percentage: 0 };\n  @Input() filename: string;\n\n  constructor(private uploadService: ServiceService) {\n    // this.uploadService.getFiles();\n  }\n\n  ngOnInit(){\n\n\n  }\n  \nselectFile(event) {\n    const file = event.target.files[0];\n    this.selectedFiles = event.target.files;\n    this.filename = file.name;\n    console.log(this.filename);\n    console.log(file);\n    this.uploadService.serFilename(this.filename);\n    // console.log(this.uploadService.getFiles());\n  }\n\n// ## HTTP call\n  upload() {\n  // this.progress.percentage = 0;\n\n  this.currentFileUpload = this.selectedFiles.item(0);\n  this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(event => {\n    \n  });\n\n  this.selectedFiles = undefined;\n}\n}\n","\n  <!-- <div class=\"progress-bar progress-bar-info progress-bar-striped\" role=\"progressbar\" attr.aria-valuenow=\"{{progress.percentage}}\"\n    aria-valuemin=\"0\" aria-valuemax=\"100\" [ngStyle]=\"{width:progress.percentage+'%'}\">\n    {{progress.percentage}}%</div>\n</div> -->\n<div class=\"container\">\n<label class=\"btn btn-default\">\n  <input type=\"file\" (change)=\"selectFile($event)\" accept=\".pcap\">\n</label>\n\n<button class=\"btn btn-success\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">Upload</button>\n</div>s","import { Component, OnInit } from '@angular/core';\nimport { UserDetails, AuthenticationService } from '../../authentication.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  details: UserDetails\n  user_id:string\n\n\n  constructor(private auth:AuthenticationService, private router:Router , private route:ActivatedRoute) { \n  //   this.route.paramMap.subscribe((parameter: ParamMap) => {\n  //     if (parameter.has('user_id')) {\n  //       this.user_id = parameter.get('user_id');\n  //       console.log(this.user_id);\n  //     }\n  //   })\n   }\n  \n\n  ngOnInit(){\n    this.details = this.auth.getUserDetails();\n  \n    console.log(this.details._id)\n  }\n\n  ViewCases(){\n    this.user_id = this.details.identity.user_id;\n    console.log(this.user_id)\n\n    this.router.navigateByUrl(`user/profile/case-list/${this.user_id}`)\n  }\n\n}\n\n","<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"> -->\n</head>\n<body>\n\n\n\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n      <div class=\"col-sm-8 mx-auto\">\n        <h1 class=\"text-center\">PROFILE</h1>\n      </div>\n      <div class=\"col-lg-3 col-sm-4 col-12 text-center\" style=\"padding-bottom: 20px;\" (click)=\"ViewCases()\">\n        <div class=\"row main-box-layout img-thumbnail\">\n          <div class=\"col-lg-12 col-sm-12 col-12 box-icon-section bg-primary\">\n            <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"col-lg-12 col-sm-12 col-12 box-text-section\">\n            <p>View Cases</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"text-center\">\n        <img src={{details.identity.profile_photo}}  class=\"img-fluid\" height=\"20%\" width=\"20%\">\n      </div>\n      <table class=\"table col-md-6 mx-auto\">\n\n        \n        \n        <tr>\n          <td>Unique ID</td>\n          <td>{{ details.identity.user_id }}</td>\n        </tr>\n\n\n        <tr>\n          <td>First Name</td>\n          <td>{{ details.identity.first_name }}</td>\n        </tr>\n\n        <tr>\n          <td>Last Name</td>\n          <td>{{ details.identity.last_name }}</td>\n        </tr>\n\n        <tr>\n          <td>Email</td>\n          <td>{{ details.identity.email }}</td>\n        </tr>\n\n\n        <tr>\n          <td>Father Name</td>\n            <td>{{details.identity.father_name}}</td>\n        </tr>\n\n        <tr>\n          <td>Mother Name</td>\n            <td>{{details.identity.mother_name}}</td>\n        </tr>\n\n        <tr>\n          <td>Date of Birth</td>\n            <td>{{details.identity.dob | date}}</td>\n        </tr>\n\n        <tr>\n          <td>Gender</td>\n            <td>{{details.identity.gender}}</td>\n        </tr>\n\n        <tr>\n          <td>Contact Number</td>\n            <td>{{details.identity.contact_number}}</td>\n        </tr>\n\n        <tr>\n          <td>Emergency Contact Number</td>\n            <td>{{details.identity.emergency_contact_number}}</td>\n        </tr>\n\n        <tr>\n          <td>Blood Group</td>\n            <td>{{details.identity.blood_group}}</td>\n        </tr>\n        <tr>\n          <td>Marital Status</td>\n            <td>{{details.identity.marital_status}}</td>\n        </tr>\n        <tr>\n          <td>Aadhar Numberr</td>\n            <td>{{details.identity.aadhar_number}}</td>\n        </tr>\n        <tr>\n          <td>Street</td>\n            <td>{{details.identity.street}}</td>\n        </tr>\n        <tr>\n          <td>City</td>\n            <td>{{details.identity.city}}</td>\n        </tr>\n        <tr>\n          <td>State</td>\n            <td>{{details.identity.state}}</td>\n        </tr>\n        <tr>\n          <td>Pincode</td>\n            <td>{{details.identity.pincode}}</td>\n        </tr>\n        <tr>\n          <td>Landmark</td>\n            <td>{{details.identity.landmark}}</td>\n        </tr>\n\n\n   \n       \n      </table>\n    </div>\n  </div>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { ParamMap, ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-profile-case-details',\n  templateUrl: './user-profile-case-details.component.html',\n  styleUrls: ['./user-profile-case-details.component.css']\n})\nexport class UserProfileCaseDetailsComponent implements OnInit {\n\n  case_id:string\n  caseDetails: any\n  details;\n\n \n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('case_id')) {\n        this.case_id = parameter.get('case_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n  ngOnInit() {\n    this.getCaseDetails();\n\n\n  }\n\n  getCaseDetails(){\n\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/case-details/${this.case_id}`).subscribe(response => {\n      this.caseDetails = response;\n    console.log(this.caseDetails);\n    console.log(response)\n  });\n}\n}","<div class=\"container\">\n  <h2>Case Details</h2>\n  <table class=\"table table-dark\">\n\n      <tr>\n          <th>Disease Name</th>\n          <td>{{caseDetails.disease_name}}</td>\n      </tr>\n\n      <tr>\n          <th>Observations</th>\n          <td><pre>{{caseDetails.disease_observation}}</pre></td>\n      </tr>\n    </table>\n\n    <br>\n    <h5>Medicines Prescribed</h5>\n    <hr>  \n\n    <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 60%;\">\n      <tr>\n        <th>Sr. No.</th>\n        <th>Medicines</th>\n        <th>Dosage</th>\n        <th>Taken</th>\n          <!-- <td>{{caseDetails.temp}}</td> -->\n      </tr>\n\n\n\n      <tr *ngFor=\"let medicine of caseDetails.medicines; let i = index\">\n        <td>{{i+1}}</td>\n           <td>{{medicine.medicine_name}}</td>\n           <td>{{medicine.medicine_dosage}}</td>\n          <td>{{medicine.isTaken}}</td>\n         </tr>\n        </table>\n\n        <br>\n          <h5>Test Reuired</h5>\n        <hr> \n\n          <table class=\"table table-dark\" style=\" border-collapse: collapse; width: 40%;\">\n              <tr>\n                <th>Sr. No.</th>\n                <th>Lab Test </th>\n              </tr>\n\n\n            <tr *ngFor=\"let test_required of caseDetails.test_required; let i = index\">\n              <td>{{i+1}}</td>\n                <td>{{test_required}}</td>\n              </tr>\n          </table>\n      \n      \n<!--         \n         <tr>  \n          <td>{{caseDetails.medicines[0].medicine_name}}</td>\n          <td>{{caseDetails.medicines[0].medicine_dosage}}</td>\n          <td>{{caseDetails.medicines[0].isTaken}}</td>\n          \n      </tr>\n\n      <tr >\n        \n        <td>{{caseDetails.medicines[1].medicine_name}}</td>\n        <td>{{caseDetails.medicines[1].medicine_dosage}}</td>\n        <td>{{caseDetails.medicines[1].isTaken}}</td>\n\n        \n    </tr>\n\n    <tr >\n        \n      <td>{{caseDetails[0].medicines[2].medicine_name}}</td>\n      <td>{{caseDetails[0].medicines[2].medicine_dosage}}</td>\n      <td>{{caseDetails[0].medicines[2].isTaken}}</td>\n\n      \n  </tr> -->\n\n\n   \n \n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile-case-list',\n  templateUrl: './user-profile-case-list.component.html',\n  styleUrls: ['./user-profile-case-list.component.css']\n})\nexport class UserProfileCaseListComponent implements OnInit {\n  \n  cases;\n  searchText= this.cases\n  // viewCases: cases\n  user_id:string\n  // case_name:any\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute, private router:Router)  { \n    this.route.paramMap.subscribe((parameter: ParamMap) => {\n      if (parameter.has('user_id')) {\n        this.user_id = parameter.get('user_id');\n        // console.log(this.patientID);\n      }\n    })\n   }\n\n\n\n   ngOnInit() {\n\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/cases/${this.user_id}`).subscribe(cases =>(this.cases = cases))\n    console.log(this.cases);\n\n  }\n  \n\n}\n","<div class=\"container\">\n    <br>\n    <h3>User Cases</h3>\n  \n    <br>\n    <br>\n\n    <div class=\"search-users\">\n        <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"&#61442; Search for any case by name \">\n        <br>\n    </div>\n\n   \n    <table class=\"table table-dark\">\n        <tbody>\n    \n        <tr *ngFor=\"let case of cases | filter:searchText\">\n            <td [routerLink]=\"['/user/profile/case-list/caste-details',case._id]\">{{case.disease_name}}</td>\n        </tr>\n    </tbody>\n    </table>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport {UserDetails } from './users'\n// import {UserServices} from './user.service'\nimport {HttpClient} from '@angular/common/http'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  // providers: [UserServices],\n  styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit {\n  \n  details:UserDetails\n\n  users: JSON\n  editUser: JSON\n\n  constructor(private httpClient: HttpClient){}\n\n\n  ngOnInit(){\n    this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => (this.users = users as JSON))\n  }\n\n  getUsers():void{\n    this.httpClient.get('http://127.0.0.1:5000/api/users').subscribe(users => {\n      this.users = users as JSON;\n      console.log(this.users);\n    })\n  }\n\n  // add(name:string):void{\n  //   this.editUser = undefined\n  //   name = name.trim()\n  //   if(!name){\n  //     return\n  //   }\n  //   const newUser: UserDetails = {identity.first_name} as UserDetails\n  //   this.httpClient.post('http://127.0.0.1:5000/api/users',{ \"first_name\": name}).subscribe(() => this.getUsers())\n  // }\n\n  delete(user: UserDetails):void{\n    // this.users =this.users.filter(h => h !== user)\n    // console.log(user);\n    this.httpClient.delete(`http://127.0.0.1:5000/api/user/${user._id}`).subscribe(() => this.getUsers())\n  }\n  edit(user){\n    this.editUser = user\n\n  }\n  update(user: UserDetails){\n    if(this.editUser){\n      this.httpClient.put(`http://127.0.0.1:5000/api/user/${user._id}`, {\"first_name\": user.identity.first_name}).subscribe(() => {\n        this.getUsers()\n      })\n      this.editUser = undefined\n    }\n  }\n  ViewDetails(user:UserDetails){\n    this.httpClient.get(`http://127.0.0.1:5000/api/user/${user._id}`)\n    console.log(user)\n\n  }\n\n}\n\n\n","<table class=\"table\">\n    <tr *ngFor=\"let user of users\">\n        <td class=\"text-left\">\n            <a [routerLink]=\"['/user-details/', user._id]\">\n            <!-- <a (click)=\"edit(user)\"> -->\n                <span>{{user.name}}</span>\n                <!-- <input *ngIf=\"user==editUser\" [(ngModel)]=\"user.name\" (blur)=\"update(user)\" (keyup.enter)=\"update(user)\"> -->\n            </a>\n        </td>\n    </tr>\n</table> \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}